[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"# CampusConnect","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"[![Java CI Status](https://github.com/AY2324S1-CS2103T-T13-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"[![Markbind CI Status](https://github.com/AY2324S1-CS2103T-T13-2/tp/workflows/MarkBind%20Action/badge.svg)](https://github.com/AY2324S1-CS2103T-T13-2/tp/actions/workflows/docs.yml)","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T13-2/tp/graph/badge.svg?token\u003dV0VMEEZQIF)](https://codecov.io/gh/AY2324S1-CS2103T-T13-2/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"* This is **CampusConnect**, a desktop application built for students living on campus to help users stay organised, stay connected, and make the on-campus experience at NUS stress-free! Example usages:","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"  * Keep track of various contact details of fellow campus residents","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"  * Receive reminders for fellow campus residents\u0027 birthdays","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"  * Mark specific contacts as emergency contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"  * Search for fellow campus residents using expressive filters","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"* For the detailed documentation of this project, see the **[CampusConnect Product Website](https://ay2324s1-cs2103t-t13-2.github.io/tp/)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"kokrui":15,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jdk8\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lordidiot":5,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"conradsoon"},"content":"### Calvin Fong","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/lordidiot.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"[[github](https://github.com/lordidiot)]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/lordidiot.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"- Role: Team lead, Scheduling and tracking","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"### Wong Kok Rui","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/kokrui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/kokrui)]","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/kokrui.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"- Role: Code quality, Integration","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"### Nguyen Phu Hao","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/vn-hao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/vn-hao)]","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/vn-hao.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"- Role: Testing","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"### Lim Jun Xian","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/limjunxian1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/limjunxian1)]","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/limjunxian1.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"- Role: Deliverables and deadlines","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"### Conrad Soon","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"\u003cimg src\u003d\"images/conradsoon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"[[github](http://github.com/conradsoon)]","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"conradsoon"},"content":"[[portfolio](team/conradsoon.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"- Role: Documentation","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"conradsoon":25,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"kokrui"},"content":"* is an NUS student staying on campus","lastModifiedDate":"2023-10-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                                                                                                                        | So that I can…​                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"limjunxian1"},"content":"|----------|----------------------------------|-------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":288,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | add new contacts with basic contact information                                                                                     | keep track of the people I know.                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":289,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | add alternative contact information such as telegram, email and linkedin, which are preferred communication channels of my contacts | stay better connected to them                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":290,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | delete contacts                                                                                                                     | reduce clutter and keep my contact list organised.              |","lastModifiedDate":"2023-10-04"},{"lineNumber":291,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | forgetful user                   | upload photos for my contacts                                                                                                       | visually remember them.                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | update photos for my contacts                                                                                                       | visually recognize them.                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | forgetful user                   | add the birthday of my contact                                                                                                      | keep track and remember my contacts’ birthdays.                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | forgetful user                   | receive a notification when it is my contact’s actual birthday                                                                      | remember to celebrate his/her birthday.                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | opt out of receiving notifications                                                                                                  | keep myself from being distracted by the notifications.         |","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | search through my contacts based on their respective contact information                                                            | quickly access the information required.                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | search my contacts by name                                                                                                          | quickly find a person without scrolling through my entire list. |","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | user                             | search my contacts by phone number                                                                                                  | identify who is calling me from an unfamiliar number.           |","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | international in-campus resident | add Singapore’s emergency contact details                                                                                           | access them quickly in urgent situations.                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | in-campus resident               | add campus specific information to my contacts, in particular, a tag called RA (Residential Assistant) and SO (Security Officer)    | quickly reach out to them when required.                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":301,"author":{"gitId":"limjunxian1"},"content":"| `* * *`  | on-campus student                | quickly list the emergency contacts I have previously registered                                                                    | contact them in an emergency.                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"limjunxian1"},"content":"(For all use cases below, the **System** is `CampusConnect` and the **Actor** is a `NUS student who stays in campus`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"limjunxian1"},"content":"**Use case: UC1- Opt out notifications**","lastModifiedDate":"2023-10-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"limjunxian1"},"content":"1. User requests to opt out from receiving notifications.","lastModifiedDate":"2023-10-04"},{"lineNumber":313,"author":{"gitId":"limjunxian1"},"content":"2. System requests for confirmation.","lastModifiedDate":"2023-10-04"},{"lineNumber":314,"author":{"gitId":"limjunxian1"},"content":"3. User confirms.","lastModifiedDate":"2023-10-04"},{"lineNumber":315,"author":{"gitId":"limjunxian1"},"content":"4. System opts out the user from receiving notifications. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":316,"author":{"gitId":"limjunxian1"},"content":"Use case ends. ","lastModifiedDate":"2023-10-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":318,"author":{"gitId":"limjunxian1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":319,"author":{"gitId":"limjunxian1"},"content":"   * 1a. System detects an error in data entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":320,"author":{"gitId":"limjunxian1"},"content":"     * 1a1. System shows the correct format for request.","lastModifiedDate":"2023-10-04"},{"lineNumber":321,"author":{"gitId":"limjunxian1"},"content":"     * 1a2. User enters a new opt out request. ","lastModifiedDate":"2023-10-04"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"limjunxian1"},"content":"     Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e ","lastModifiedDate":"2023-10-04"},{"lineNumber":324,"author":{"gitId":"limjunxian1"},"content":"     Use case resumes from step 4.","lastModifiedDate":"2023-10-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"limjunxian1"},"content":"**Use case: UC2 - List contacts**","lastModifiedDate":"2023-10-04"},{"lineNumber":327,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":328,"author":{"gitId":"limjunxian1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":329,"author":{"gitId":"limjunxian1"},"content":"1. User requests list all contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":330,"author":{"gitId":"limjunxian1"},"content":"2. System shows a list of all contacts. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":331,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":333,"author":{"gitId":"limjunxian1"},"content":"**Use case: UC3 - Delete emergency contact**","lastModifiedDate":"2023-10-04"},{"lineNumber":334,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"limjunxian1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":336,"author":{"gitId":"limjunxian1"},"content":"1. User \u003cins\u003elists all contacts (UC2).\u003c/ins\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":337,"author":{"gitId":"limjunxian1"},"content":"2. User enters an index to delete contact as an emergency contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":338,"author":{"gitId":"limjunxian1"},"content":"3. System deletes contact from the emergency contact list. \u003cbr\u003e ","lastModifiedDate":"2023-10-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"limjunxian1"},"content":"* 1a. System shows an empty contact list. ","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":344,"author":{"gitId":"limjunxian1"},"content":"* 2a. System detects an invalid index entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":345,"author":{"gitId":"limjunxian1"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":346,"author":{"gitId":"limjunxian1"},"content":"  * 2a2. User enters a new delete request. \u003cbr\u003e ","lastModifiedDate":"2023-10-04"},{"lineNumber":347,"author":{"gitId":"limjunxian1"},"content":"  Steps 2a1- 2a2 are repeated until the data entered are correct. \u003cbr\u003e ","lastModifiedDate":"2023-10-04"},{"lineNumber":348,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"limjunxian1"},"content":"**Use case: UC4 - Delete contact**","lastModifiedDate":"2023-10-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"limjunxian1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":353,"author":{"gitId":"limjunxian1"},"content":"1. User \u003cins\u003elists all contacts (UC2).\u003c/ins\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":354,"author":{"gitId":"limjunxian1"},"content":"2. User enters an index to delete a contact from the system.","lastModifiedDate":"2023-10-04"},{"lineNumber":355,"author":{"gitId":"limjunxian1"},"content":"3. System deletes contact inside its system. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":356,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":358,"author":{"gitId":"limjunxian1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":359,"author":{"gitId":"limjunxian1"},"content":"* 1a. System shows an empty contact list. ","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"limjunxian1"},"content":"* 2a. System detects an invalid index entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":362,"author":{"gitId":"limjunxian1"},"content":"  * 2a1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":363,"author":{"gitId":"limjunxian1"},"content":"  * 2a2. User enters a new delete request. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":364,"author":{"gitId":"limjunxian1"},"content":"  Steps 2a1- 2a2 are repeated until the data entered are correct. \u003cbr\u003e ","lastModifiedDate":"2023-10-04"},{"lineNumber":365,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"limjunxian1"},"content":"**Use Case UC5: Add emergency contact**","lastModifiedDate":"2023-10-04"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"limjunxian1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":370,"author":{"gitId":"limjunxian1"},"content":"1. User \u003cins\u003elists all contacts (UC2).\u003c/ins\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":371,"author":{"gitId":"limjunxian1"},"content":"2. User adds a contact to the emergency contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":372,"author":{"gitId":"limjunxian1"},"content":"3. System adds the contact into the emergency contact list. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":373,"author":{"gitId":"limjunxian1"},"content":"Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"limjunxian1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"limjunxian1"},"content":"* 1a. System detects that the tag given to the contact is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":377,"author":{"gitId":"limjunxian1"},"content":"  * 1a1. System shows the valid tags for input.","lastModifiedDate":"2023-10-04"},{"lineNumber":378,"author":{"gitId":"limjunxian1"},"content":"  * 1a2. User enters a new add emergency contact request. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":379,"author":{"gitId":"limjunxian1"},"content":"  Steps 1a1- 1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":380,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":381,"author":{"gitId":"limjunxian1"},"content":"* 1b. System detects an invalid index entered.","lastModifiedDate":"2023-10-04"},{"lineNumber":382,"author":{"gitId":"limjunxian1"},"content":"  * 1b1. System shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":383,"author":{"gitId":"limjunxian1"},"content":"  * 1b2. User enters a new delete request. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":384,"author":{"gitId":"limjunxian1"},"content":"  Steps 1b1- 1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":385,"author":{"gitId":"limjunxian1"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2023-10-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"limjunxian1"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed. ","lastModifiedDate":"2023-10-04"},{"lineNumber":393,"author":{"gitId":"limjunxian1"},"content":"2. Able to hold up to 1000 contacts without a compromise in performance. ","lastModifiedDate":"2023-10-04"},{"lineNumber":394,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse. ","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"limjunxian1"},"content":"4. Should respond within 1 second for any command the user inputs ","lastModifiedDate":"2023-10-04"},{"lineNumber":396,"author":{"gitId":"limjunxian1"},"content":"5. Should be easy to use and navigate for the users. ","lastModifiedDate":"2023-10-04"},{"lineNumber":397,"author":{"gitId":"limjunxian1"},"content":"6. Should be able to accommodate growth and expansion. It should be easy to add new features and functionalities as needed. ","lastModifiedDate":"2023-10-04"},{"lineNumber":398,"author":{"gitId":"limjunxian1"},"content":"7. Should be easy to maintain and update through a clear and well-documented architecture, and it should be easy to troubleshoot and fix problems should they arise. ","lastModifiedDate":"2023-10-04"},{"lineNumber":399,"author":{"gitId":"limjunxian1"},"content":"8. Data stored should be persistent until removal by the user, and all contact details should be secure. ","lastModifiedDate":"2023-10-04"},{"lineNumber":400,"author":{"gitId":"limjunxian1"},"content":"9. The code should be well-organised and well-documented to ensure ease of maintenance and debugging. ","lastModifiedDate":"2023-10-04"},{"lineNumber":401,"author":{"gitId":"limjunxian1"},"content":"10. Should provide clear and easily accessible help and documentation, including FAQs and tutorials, to assist the user in using the platform effectively. ","lastModifiedDate":"2023-10-04"},{"lineNumber":402,"author":{"gitId":"limjunxian1"},"content":"11. Should be designed to prevent errors and provide clear, actionable error messages if errors occur, so that users can correct any issues.","lastModifiedDate":"2023-10-04"},{"lineNumber":403,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":420,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":421,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"limjunxian1":88,"kokrui":1,"-":376}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"# CampusConnect User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"___Empowering connections in the NUS community is just a few keystrokes away!___","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"**CampusConnect** is a desktop application built for **NUS students** living on campus to help them **stay organised**, **stay connected**, and **make the on-campus experience at NUS stress-free**. It is **optimised for use** via **Command Line Interface (CLI)** while benefiting from a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"Here is an **overview** of how CampusConnect can enhance your campus experience:","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"- Store and edit contact profiles of your friends","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"- Receive timely notifications to celebrate your friends\u0027 birthdays","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"- Tracks debts owed by you to your friends or owed to you by your friends","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"This user guide shows you how to get started with using CampusConnect -- it has easy-to-understand explanations and examples to help you grasp its various features.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"For a more technical and comprehensive overview of CampusConnect\u0027s codebase, please refer to our [Developer Guide](DeveloperGuide.md).","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"# Table of Contents","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"1. Quick Start","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"2. Features ","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"   - Request help [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"   - Add normal contact","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"   - Add emergency contact","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"   - Add alternative information to contact","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"   - Upload contact\u0027s photo","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"   - Update contact\u0027s photo","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"   - Search contact","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"   - List all contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"   - List emergency contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"   - Delete normal contact","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"   - Delete emergency contact","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"   - Undo last action [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"   - Receive actual birthday notification ","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"   - Receive upcoming birthday notification [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"   - Opt out notification","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"   - Track payment [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"   - Change language [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"3. Troubleshooting / FAQ","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"2. Download the latest `CampusConnect.jar` from [here](https://github.com/AY2324S1-CS2103T-T13-2/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar CampusConnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to CampusConnect.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"   * `add n/Jane Doe p/98765433 e/janed@example.com a/Jane street, block 123, #01-01 t/floorball t/suitemate` : Adds a contact named `Jane Doe` to CampusConnect who is tagged with the `floorball` and `suitemate` tags.","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"   * `optout notify birthdays` : Opts out from birthday notifications.","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"   * `addemer 3 RA` : Marks the 3rd contact in the list as an RA (Residential Assistant).","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"   * `find name/Doe` : Finds all contacts who have \"Doe\" in their name.","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"* Items in square brackets are optional, ___with `addalt` as an exception. (Refer to [addalt](#addalt) under Features)___\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"### Request help [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"### Add normal contact","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"Add a new contact with basic details like name, phone number, email, and address.","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]`","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"* `n/NAME` Replace NAME with the contact\u0027s name.","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"lordidiot"},"content":"* `p/PHONE_NUMBER` Replace PHONE_NUMBER with the contact\u0027s phone number.","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"* `e/EMAIL` Replace EMAIL with the contact\u0027s email address.","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"lordidiot"},"content":"* `a/ADDRESS` Replace ADDRESS with the contact\u0027s physical address.","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"* `[t/TAG] (Optional)` You can add tags to help categorise your contacts. Replace TAG with the desired tag, e.g., \"friend\", \"colleague\", etc. Multiple tags can be added by repeating the `[t/TAG]` format.","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"lordidiot"},"content":"Examples","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"lordidiot"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 t/friend`","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"lordidiot"},"content":"  * Adds a contact named \"John Doe\" with the phone number \"98765432\", email \"johnd@example.com\", address \"John street, block 123, #01-01\", and a tag \"friend\"","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"lordidiot"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567 t/friend t/colleague`","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"lordidiot"},"content":"  * Adds a contact named \"Betsy Crowe\" with the email \"betsycrowe@example.com\", address \"Newgate Prison\", phone \"1234567\", and two tags \"friend\" and \"colleague\"","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"### Add emergency contact","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"lordidiot"},"content":"Adds an existing contact as an emergency contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"lordidiot"},"content":"Format: `addemer INDEX [tag/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"lordidiot"},"content":"* `tag/TAG` Optional tag indicating the type of emergency contact, e.g. RA (residential assistant) or SO (security officer)","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"lordidiot"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"lordidiot"},"content":"* `addemer 1 RA`","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"lordidiot"},"content":"  * Indicates that the contact at index 1 is the residential assistant (RA) for contact during emergencies","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"###  Add alternative information to contact","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"lordidiot"},"content":"Adds alternative contact information to an existing contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"lordidiot"},"content":"Format: `addalt INDEX [tg/TELEGRAM] [e2/SECONDARY_EMAIL] [li/LINKEDIN]`","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"lordidiot"},"content":"At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"lordidiot"},"content":"* addalt 1 tg/johndoe_telegram e2/johndoe2@example.com ","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"lordidiot"},"content":"  * Adds John Doe\u0027s Telegram and secondary email","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"lordidiot"},"content":"* addalt 2 li/betsycrowe_linkedin","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"lordidiot"},"content":"  * Adds Betsy Crowe\u0027s LinkedIn","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"limjunxian1"},"content":"###  Upload contact\u0027s photo","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"lordidiot"},"content":"Uploads a photo for an existing contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"lordidiot"},"content":"Format: `uploadphoto INDEX path/PHOTO_PATH`","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"lordidiot"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"lordidiot"},"content":"* `uploadphoto 1 path/C:/photos/johndoe.jpg`","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"lordidiot"},"content":"  * Uploads a photo for the 1st person from the specified path.","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"lordidiot"},"content":"* `uploadphoto 2 path/C:/photos/betsycrowe.png`","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"lordidiot"},"content":"  * Uploads a photo for the 2nd person from the specified path.","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"limjunxian1"},"content":"###  Update contact\u0027s photo","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"lordidiot"},"content":"Updates the photo of an existing contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"lordidiot"},"content":"Format: `updatephoto INDEX path/NEW_PHOTO_PATH`","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"lordidiot"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"lordidiot"},"content":"* `updatephoto 1 path/C:/photos/new_johndoe.jpg`","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"lordidiot"},"content":"  * Updates the photo for the 1st person with a new image from the specified path.","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"lordidiot"},"content":"* `updatephoto 2 path/C:/photos/new_betsycrowe.png`","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"lordidiot"},"content":"  * Updates the photo for the 2nd person with a new image from the specified path.","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"limjunxian1"},"content":"###  Search contact","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"Generally, search commands will contain the following tokens:","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"* `FIELD`: Specifies the field to search within (name, phone, email, address, tag).","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"* `KEYWORD`: Words or characters you\u0027re looking for in a contact\u0027s information.","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"Format: `find FIELD/KEYWORD [FIELD/KEYWORD]`","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":184,"author":{"gitId":"kokrui"},"content":"You may include multiple field-keyword combinations. The `find` command will perform a logical `AND` on all field-keyword combinations.","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"#### Search contact by name","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":188,"author":{"gitId":"kokrui"},"content":"Locates persons in the address book whose names contain the given keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"Format: `find name/KEYWORD`","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"kokrui"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":193,"author":{"gitId":"kokrui"},"content":"* `find name/John`","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts with names that contain \"John\" (e.g. \"John Smith\", \"John Doe\")","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"kokrui"},"content":"* `find name/Alex name/Ye`","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts with names that contain both \"Alex\" and \"Ye\" (e.g. \"Alex Yeoh\", \"Yervis Alexis\")","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"kokrui"},"content":"#### Search contact by phone number","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"kokrui"},"content":"Locates persons in the address book whose phone numbers contain the given digits.","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":202,"author":{"gitId":"kokrui"},"content":"Format: `find phone/KEYWORD`","lastModifiedDate":"2023-10-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"* `find phone/9876`","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts with phone numbers that contain \"9876\"","lastModifiedDate":"2023-10-04"},{"lineNumber":207,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":208,"author":{"gitId":"kokrui"},"content":"#### Search contact by email","lastModifiedDate":"2023-10-04"},{"lineNumber":209,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":210,"author":{"gitId":"kokrui"},"content":"Locates persons in the address book whose email addresses contain the given keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":211,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":212,"author":{"gitId":"kokrui"},"content":"Format: `find email/KEYWORD`","lastModifiedDate":"2023-10-04"},{"lineNumber":213,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"kokrui"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":215,"author":{"gitId":"kokrui"},"content":"* `find email/tan email/@u.nus.edu`","lastModifiedDate":"2023-10-04"},{"lineNumber":216,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts with email addresses that contain \"tan\" and \"@u.nus.edu\"","lastModifiedDate":"2023-10-04"},{"lineNumber":217,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":218,"author":{"gitId":"kokrui"},"content":"#### Search contact by address","lastModifiedDate":"2023-10-04"},{"lineNumber":219,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":220,"author":{"gitId":"kokrui"},"content":"Locates persons in the address book whose addresses contain the given keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":222,"author":{"gitId":"kokrui"},"content":"Format: `find address/KEYWORD`","lastModifiedDate":"2023-10-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":225,"author":{"gitId":"kokrui"},"content":"* `find address/street`","lastModifiedDate":"2023-10-04"},{"lineNumber":226,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts with addresses that contain the word \"street\"","lastModifiedDate":"2023-10-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":228,"author":{"gitId":"kokrui"},"content":"#### Search contact by tag","lastModifiedDate":"2023-10-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":230,"author":{"gitId":"kokrui"},"content":"Locates persons in the address book that have the given tags.","lastModifiedDate":"2023-10-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":232,"author":{"gitId":"kokrui"},"content":"Format: `find tag/KEYWORD`","lastModifiedDate":"2023-10-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":234,"author":{"gitId":"kokrui"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":235,"author":{"gitId":"kokrui"},"content":"* `find tag/RA`","lastModifiedDate":"2023-10-04"},{"lineNumber":236,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts that have tags containing the string \"RA\"","lastModifiedDate":"2023-10-04"},{"lineNumber":237,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":238,"author":{"gitId":"kokrui"},"content":"#### Multiple field search","lastModifiedDate":"2023-10-04"},{"lineNumber":239,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":240,"author":{"gitId":"kokrui"},"content":"Combines multiple search criteria for more specific searching. Search criteria are combined with the logical `AND`.","lastModifiedDate":"2023-10-04"},{"lineNumber":241,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":242,"author":{"gitId":"kokrui"},"content":"Format: `find FIELD/KEYWORD FIELD/KEYWORD [ANOTHER_FIELD/ANOTHER_KEYWORD]`","lastModifiedDate":"2023-10-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":245,"author":{"gitId":"kokrui"},"content":"* `find name/John tag/friend`","lastModifiedDate":"2023-10-04"},{"lineNumber":246,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts named John who also have the \"friend\" tag","lastModifiedDate":"2023-10-04"},{"lineNumber":247,"author":{"gitId":"kokrui"},"content":"* `find email/@u.nus.edu phone/9876`","lastModifiedDate":"2023-10-04"},{"lineNumber":248,"author":{"gitId":"kokrui"},"content":"  * Returns all contacts with emails containing \"@u.nus.edu\" and phone numbers containing \"9876\"","lastModifiedDate":"2023-10-04"},{"lineNumber":249,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":250,"author":{"gitId":"limjunxian1"},"content":"###  List all contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":251,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"lordidiot"},"content":"Shows a list of all contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":253,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":254,"author":{"gitId":"lordidiot"},"content":"Format: `list`","lastModifiedDate":"2023-10-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":256,"author":{"gitId":"limjunxian1"},"content":"###  List emergency contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"lordidiot"},"content":"Lists all emergency contacts that have been registered.","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"lordidiot"},"content":"Format: `listemer [tag/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"lordidiot"},"content":"* `tag/TAG` Optional tag to filter for emergency contacts of a certain type, e.g. RA (residential assistant) or SO (security officer)","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":263,"author":{"gitId":"lordidiot"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":264,"author":{"gitId":"lordidiot"},"content":"* `listemer`","lastModifiedDate":"2023-10-03"},{"lineNumber":265,"author":{"gitId":"lordidiot"},"content":"* `listemer tag/RA`","lastModifiedDate":"2023-10-03"},{"lineNumber":266,"author":{"gitId":"lordidiot"},"content":"  * Only lists emergency contacts tagged as residential assistants (RA)","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":268,"author":{"gitId":"limjunxian1"},"content":"###  Delete normal contact","lastModifiedDate":"2023-10-04"},{"lineNumber":269,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":270,"author":{"gitId":"lordidiot"},"content":"Deletes an existing contact from the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":274,"author":{"gitId":"lordidiot"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":275,"author":{"gitId":"lordidiot"},"content":"* `delete 1`","lastModifiedDate":"2023-10-04"},{"lineNumber":276,"author":{"gitId":"lordidiot"},"content":"  * Deletes the 1st person from the list","lastModifiedDate":"2023-10-04"},{"lineNumber":277,"author":{"gitId":"lordidiot"},"content":"* `delete 2`","lastModifiedDate":"2023-10-04"},{"lineNumber":278,"author":{"gitId":"lordidiot"},"content":"  * Deletes the 2nd person from the list","lastModifiedDate":"2023-10-04"},{"lineNumber":279,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":280,"author":{"gitId":"limjunxian1"},"content":"###  Delete emergency contact","lastModifiedDate":"2023-10-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":282,"author":{"gitId":"lordidiot"},"content":"Removes contact as an emergency contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":284,"author":{"gitId":"lordidiot"},"content":"Note: Contact will not be deleted, only unmarked as an emergency contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":286,"author":{"gitId":"lordidiot"},"content":"Format: `delemer INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":289,"author":{"gitId":"lordidiot"},"content":"* `delemer 1`","lastModifiedDate":"2023-10-04"},{"lineNumber":290,"author":{"gitId":"lordidiot"},"content":"  * Indicates that contact at index 1 is no longer an emergency contact","lastModifiedDate":"2023-10-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"limjunxian1"},"content":"###  Undo last action [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"limjunxian1"},"content":"###  Receive actual birthday notification","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"limjunxian1"},"content":"Receives a pop-up notification that contains a list of people in CampusConnect whose birthdays have arrived.","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"limjunxian1"},"content":"Upon launching the application, if any of your contacts’ birthday in CampusConnect have arrived, you should see the following pop-up notification: \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"limjunxian1"},"content":"![birthdayNotification](images/birthdayNotification.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":301,"author":{"gitId":"limjunxian1"},"content":"The notification will contain the names of the birthday individuals saved in CampusConnect.","lastModifiedDate":"2023-10-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":303,"author":{"gitId":"limjunxian1"},"content":"###  Receive upcoming birthday notification [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":304,"author":{"gitId":"limjunxian1"},"content":"###  Opt out notification","lastModifiedDate":"2023-10-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":306,"author":{"gitId":"limjunxian1"},"content":"Opts you out from receiving birthday related notifications, such as turning off actual birthday notification feature.","lastModifiedDate":"2023-10-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":308,"author":{"gitId":"limjunxian1"},"content":"Format: `optout NOTIFICATION_DESCRIPTION`","lastModifiedDate":"2023-10-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":310,"author":{"gitId":"limjunxian1"},"content":"- `NOTIFICATION_DESCRIPTION` Mandatory field to enter which only includes the following and are not case-sensitive:","lastModifiedDate":"2023-10-04"},{"lineNumber":311,"author":{"gitId":"limjunxian1"},"content":"    - `Notify Birthdays`","lastModifiedDate":"2023-10-04"},{"lineNumber":312,"author":{"gitId":"limjunxian1"},"content":"    - `All`","lastModifiedDate":"2023-10-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":314,"author":{"gitId":"limjunxian1"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":315,"author":{"gitId":"limjunxian1"},"content":"- `optout notify birthdays`","lastModifiedDate":"2023-10-04"},{"lineNumber":316,"author":{"gitId":"limjunxian1"},"content":"- `optout Notify Birthdays`","lastModifiedDate":"2023-10-04"},{"lineNumber":317,"author":{"gitId":"limjunxian1"},"content":"- `optout NOTIFY BIRTHDAYS`","lastModifiedDate":"2023-10-04"},{"lineNumber":318,"author":{"gitId":"limjunxian1"},"content":"    - Requests to opt out from receiving actual birthday notifications in the future.","lastModifiedDate":"2023-10-04"},{"lineNumber":319,"author":{"gitId":"limjunxian1"},"content":"- `optout all`","lastModifiedDate":"2023-10-04"},{"lineNumber":320,"author":{"gitId":"limjunxian1"},"content":"    - Requests to turn off all kinds of notifications CampusConnect will send.","lastModifiedDate":"2023-10-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":322,"author":{"gitId":"limjunxian1"},"content":"Upon request to opt out notification, you should see the following pop-up message: \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":324,"author":{"gitId":"limjunxian1"},"content":"![optOutNotification](images/optOutNotification.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":326,"author":{"gitId":"limjunxian1"},"content":"Select `OK` to opt out notifications or `Cancel` to cancel the request.","lastModifiedDate":"2023-10-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":328,"author":{"gitId":"limjunxian1"},"content":"Below shows some examples of ___invalid usage___ of the command and the response that CampusConnect will provide.","lastModifiedDate":"2023-10-04"},{"lineNumber":329,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":330,"author":{"gitId":"limjunxian1"},"content":"Invalid Input Example | Application Output","lastModifiedDate":"2023-10-04"},{"lineNumber":331,"author":{"gitId":"limjunxian1"},"content":"---|---","lastModifiedDate":"2023-10-04"},{"lineNumber":332,"author":{"gitId":"limjunxian1"},"content":"**optout notifications** | Invalid `NOTIFICATION_DESCRIPTION` (refer to aforementioned for the list of `NOTIFICATION_DESCRIPTION` to enter).","lastModifiedDate":"2023-10-04"},{"lineNumber":333,"author":{"gitId":"limjunxian1"},"content":"**optout** | `NOTIFICATION_DESCRIPTION` cannot be empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":334,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"limjunxian1"},"content":"###  Track payment [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":336,"author":{"gitId":"limjunxian1"},"content":"###  Change language [Coming Soon]","lastModifiedDate":"2023-10-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"kokrui"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CampusConnect home folder.","lastModifiedDate":"2023-10-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Action        | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"lordidiot"},"content":"--------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**Add**       | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"lordidiot"},"content":"**Addemer**   | `addemer INDEX [tag/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":359,"author":{"gitId":"VN-Hao"},"content":"**Addalt**    | `addalt INDEX [tg/TELEGRAM] [e2/SECONDARY_EMAIL] [li/LINKEDIN]` \u003cbr\u003e e.g., `addalt 1 tg/johndoe_telegram e2/johndoe2@example.com`","lastModifiedDate":"2023-10-06"},{"lineNumber":360,"author":{"gitId":"lordidiot"},"content":"**Delemer**   | `delemer INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":361,"author":{"gitId":"lordidiot"},"content":"**Listemer**  | `listemer [tag/TAG]`","lastModifiedDate":"2023-10-03"},{"lineNumber":362,"author":{"gitId":"limjunxian1"},"content":"**Optout**    | `optout NOTIFICATION_DESCRIPTION`","lastModifiedDate":"2023-10-04"},{"lineNumber":363,"author":{"gitId":"kokrui"},"content":"**Find**      | `find FIELD/KEYWORD [FIELD/KEYWORD]`","lastModifiedDate":"2023-10-04"},{"lineNumber":364,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"limjunxian1":82,"kokrui":74,"lordidiot":82,"-":124,"VN-Hao":2}},{"path":"docs/team/conradsoon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Conrad Soon\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":38,"VN-Hao":8}},{"path":"docs/team/kokrui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Wong Kok Rui\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":38,"VN-Hao":8}},{"path":"docs/team/limjunxian1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Lim Jun Xian\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":38,"VN-Hao":8}},{"path":"docs/team/lordidiot.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Calvin Fong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":37,"VN-Hao":9}},{"path":"docs/team/vn-hao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"VN-Hao"},"content":"  layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"VN-Hao"},"content":"  title: \"Nguyen Phu Hao\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"VN-Hao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"# Project: CampusConnect","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"# Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"## Code Contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"## Enhancements Implemented","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"## Contributions to the User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"## Contributions to Team-Based Tasks","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"## Review / Mentoring Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"## Contributions Beyond the Project Team","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"# Contributions to the Developer Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"# Contributions to the User Guide (Extracts)","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"VN-Hao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"VN-Hao"},"content":"to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"kokrui":39,"VN-Hao":7}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.EventFactory;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"        initEvents(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"     * Initialises {@code Event} instances.","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"     * @param model Model representing initial state.","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    private void initEvents(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"        List\u003cEvent\u003e events \u003d EventFactory.createEvents(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"        for (Event event: events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"            model.addEvent(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lordidiot":16,"-":186}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"     * Returns true if the {@code stringToCheck} contains the {@code substring}.","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"     *   Ignores case, and a full word match is not required.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true // not a full word match","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"     * @param stringToCheck cannot be null","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"     * @param substring cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    public static boolean containsSubstringIgnoreCase(String stringToCheck, String substring) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"        requireNonNull(stringToCheck);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        requireNonNull(substring);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        String preppedSubstring \u003d substring.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"        checkArgument(!preppedSubstring.isEmpty(), \"Substring parameter cannot be empty\");","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        return stringToCheck.toLowerCase().contains(preppedSubstring.toLowerCase());","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kokrui":22,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Notification;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"     * Returns the latest notifications.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"     * @param currentDateTime Current time.","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"     * @return List of latest notifications.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"    List\u003cNotification\u003e getLatestNotifications(LocalDateTime currentDateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lordidiot":10,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Notification;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"    public List\u003cNotification\u003e getLatestNotifications(LocalDateTime currentDateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"        return model.getEventList().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"                .map(event -\u003e event.getNotificationAtTime(currentDateTime))","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"                .filter(Optional::isPresent)","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"                .map(Optional::orElseThrow)","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lordidiot":14,"-":88}},{"path":"src/main/java/seedu/address/logic/commands/AddAltCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"public class AddAltCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    public static final String COMMAND_WORD \u003d \"addalt\";","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"            + \": Adds alternative contact of the person identified \"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"            + \"Existing alternative contact will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_TELEGRAM + \"[TELEGRAM]\"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_SECONDARY_EMAIL + \"[SECONDARY_EMAIL]\"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_LINKEDIN + \"[LINKEDIN]\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_TELEGRAM + \"johndoe_telegram\"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"            + PREFIX_SECONDARY_EMAIL + \"johndoe2@example.com\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_ADDALT_SUCCESS \u003d \"Added alternative contact to Person: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"    private final AddAltPersonDescriptor addAltPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"     * @param addAltPersonDescriptor details of the person to be updated to","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"    public AddAltCommand(Index index, AddAltPersonDescriptor addAltPersonDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        requireAllNonNull(index, addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"        this.addAltPersonDescriptor \u003d addAltPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"limjunxian1"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"limjunxian1"},"content":"        Person editedPerson \u003d createAddAltPerson(personToEdit, addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"limjunxian1"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"limjunxian1"},"content":"        return new CommandResult(String.format(MESSAGE_ADDALT_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"limjunxian1"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"limjunxian1"},"content":"    private static Person createAddAltPerson(Person personToEdit, AddAltPersonDescriptor addAltPersonDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"limjunxian1"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"limjunxian1"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"limjunxian1"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"limjunxian1"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"limjunxian1"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cBirthday\u003e birthday \u003d personToEdit.getBirthday();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"limjunxian1"},"content":"        Linkedin updatedLinkedin \u003d personToEdit.getLinkedin().orElse(addAltPersonDescriptor.getLinkedin());","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"limjunxian1"},"content":"        Email updatedSecondaryEmail \u003d personToEdit.getSecondaryEmail()","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"                        .orElse(addAltPersonDescriptor.getSecondaryEmail());","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"        Telegram updatedTelegram \u003d personToEdit.getTelegram().orElse(addAltPersonDescriptor.getTelegram());","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"        Optional\u003cInteger\u003e id \u003d personToEdit.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"        return new Person(name, phone, email, address, birthday, Optional.ofNullable(updatedLinkedin),","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"conradsoon"},"content":"                Optional.ofNullable(updatedSecondaryEmail), Optional.ofNullable(updatedTelegram), tags, id);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"        if (!(other instanceof AddAltCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"        AddAltCommand otherAddAltCommand \u003d (AddAltCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"        return index.equals(otherAddAltCommand.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"                \u0026\u0026 addAltPersonDescriptor.equals(otherAddAltCommand.addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"     * Stores the alternative contact details to add the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"    public static class AddAltPersonDescriptor {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"        private Name name;","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"        private Email email;","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"        private Address address;","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"        private Linkedin linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"        private Email secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"limjunxian1"},"content":"        private Telegram telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"        public AddAltPersonDescriptor() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"limjunxian1"},"content":"        public AddAltPersonDescriptor(AddAltPersonDescriptor toCopy) {","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"limjunxian1"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"limjunxian1"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"limjunxian1"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"limjunxian1"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"limjunxian1"},"content":"            setLinkedin(toCopy.linkedin);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"limjunxian1"},"content":"            setSecondaryEmail(toCopy.secondaryEmail);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"limjunxian1"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"limjunxian1"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"limjunxian1"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"limjunxian1"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"limjunxian1"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"limjunxian1"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"limjunxian1"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"limjunxian1"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"limjunxian1"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"limjunxian1"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"limjunxian1"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"limjunxian1"},"content":"        public void setLinkedin(Linkedin linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"limjunxian1"},"content":"            this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"limjunxian1"},"content":"        public Linkedin getLinkedin() {","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"limjunxian1"},"content":"            return linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"limjunxian1"},"content":"        public void setSecondaryEmail(Email email) {","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"limjunxian1"},"content":"            this.secondaryEmail \u003d email;","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"limjunxian1"},"content":"        public Email getSecondaryEmail() {","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"limjunxian1"},"content":"            return secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"limjunxian1"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"limjunxian1"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"limjunxian1"},"content":"        public Telegram getTelegram() {","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"limjunxian1"},"content":"            return telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":203,"author":{"gitId":"limjunxian1"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"limjunxian1"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"limjunxian1"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"limjunxian1"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"limjunxian1"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"limjunxian1"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"limjunxian1"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"limjunxian1"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"limjunxian1"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"limjunxian1"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"limjunxian1"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"limjunxian1"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"limjunxian1"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"limjunxian1"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"limjunxian1"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"limjunxian1"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"limjunxian1"},"content":"                return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"limjunxian1"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"limjunxian1"},"content":"            if (!(other instanceof AddAltPersonDescriptor)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"limjunxian1"},"content":"                return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"limjunxian1"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"limjunxian1"},"content":"            AddAltPersonDescriptor otherAddAltPersonDescriptor \u003d (AddAltPersonDescriptor) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"limjunxian1"},"content":"            return Objects.equals(name, otherAddAltPersonDescriptor.name)","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(phone, otherAddAltPersonDescriptor.phone)","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(email, otherAddAltPersonDescriptor.email)","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(address, otherAddAltPersonDescriptor.address)","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(tags, otherAddAltPersonDescriptor.tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(linkedin, otherAddAltPersonDescriptor.linkedin)","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(telegram, otherAddAltPersonDescriptor.telegram)","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"limjunxian1"},"content":"                    \u0026\u0026 Objects.equals(secondaryEmail, otherAddAltPersonDescriptor.secondaryEmail);","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"limjunxian1"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"limjunxian1"},"content":"        public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"limjunxian1"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"linkedin\", linkedin)","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"secondaryEmail\", secondaryEmail)","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"limjunxian1"},"content":"                    .add(\"telegram\", telegram)","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"limjunxian1"},"content":"                    .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"limjunxian1":254,"conradsoon":2}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"        Optional\u003cBirthday\u003e updatedBirthday \u003d personToEdit.getBirthday(); // TODO: Allow edit of birthday here?","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cLinkedin\u003e linkedin \u003d personToEdit.getLinkedin();","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cEmail\u003e secondaryEmail \u003d personToEdit.getSecondaryEmail();","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"        Optional\u003cTelegram\u003e telegram \u003d personToEdit.getTelegram();","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"conradsoon"},"content":"        Optional\u003cInteger\u003e id \u003d personToEdit.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthday,","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"conradsoon"},"content":"                linkedin, secondaryEmail, telegram, updatedTags, id);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"limjunxian1":6,"conradsoon":2,"lordidiot":2,"-":241}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"            + \"Parameters: [FIELD/KEYWORD] [MORE_FIELDS/MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice t/friends\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    // FindCommand should be compared by identity, since we can\u0027t check for equality of predicates for now","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kokrui":8,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/AddAltCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SECONDARY_EMAIL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.AddAltCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.AddAltCommand.AddAltPersonDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":" * Parses input arguments and creates a new AddAltCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"public class AddAltCommandParser {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    public AddAltCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LINKEDIN, PREFIX_SECONDARY_EMAIL, PREFIX_TELEGRAM);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LINKEDIN, PREFIX_SECONDARY_EMAIL, PREFIX_TELEGRAM)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"            //|| !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAltCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_LINKEDIN, PREFIX_SECONDARY_EMAIL, PREFIX_TELEGRAM);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"        AddAltPersonDescriptor addAltPersonDescriptor \u003d new AddAltPersonDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_LINKEDIN).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"            addAltPersonDescriptor.setLinkedin(ParserUtil.parseLinkedin(argMultimap.getValue(PREFIX_LINKEDIN).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_SECONDARY_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"            addAltPersonDescriptor.setSecondaryEmail(ParserUtil.parseEmail(argMultimap","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"                    .getValue(PREFIX_SECONDARY_EMAIL).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            addAltPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        return new AddAltCommand(index, addAltPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"limjunxian1":67}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        if (!argMultimap.verifyPrefixesNonEmptyValues(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kokrui":1,"-":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.logic.commands.AddAltCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"        case AddAltCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"            return new AddAltCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limjunxian1":4,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    public boolean verifyPrefixesNonEmptyValues(Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e this.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"kokrui":9,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tg/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"    public static final Prefix PREFIX_SECONDARY_EMAIL \u003d new Prefix(\"e2/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"    public static final Prefix PREFIX_LINKEDIN \u003d new Prefix(\"li/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"limjunxian1":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.FindFilterStringTokenizer.Token;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        FindFilterStringTokenizer tokenizer \u003d new FindFilterStringTokenizer(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        List\u003cToken\u003e tokens \u003d tokenizer.tokenize();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        FindExpressionParser parser \u003d new FindExpressionParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e checkAllFields \u003d parser.parseToPredicate(tokens);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        return new FindCommand(checkAllFields);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kokrui":12,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/FindExpressionParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.FindFilterStringTokenizer.Token;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":" * Represents a parser that constructs and interprets expression trees","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":" * from tokenized search queries. This parser helps in translating user","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":" * input queries into predicates that can be applied to filter lists of","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":" * persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":" * Uses a basic recursive-descent parsing strategy, since for now the","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":" * grammar is compact. Grammar for find command is given, in","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":" * Backus–Naur form (BNF) syntax, as follows:","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":" * \u003cexpression\u003e ::\u003d \u003cterm\u003e | \u003cterm\u003e \"||\" \u003cexpression\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":" * \u003cterm\u003e       ::\u003d \u003cfactor\u003e | \u003cfactor\u003e \"\u0026\u0026\" \u003cterm\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":" * \u003cfactor\u003e     ::\u003d \"!\" \u003cfactor\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":" *                | \"(\" \u003cexpression\u003e \")\"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":" *                | \u003ccondition\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":" * \u003ccondition\u003e  ::\u003d \u003cprefix\u003e \"/\" \u003ckeyword\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":" * \u003ckeyword\u003e    ::\u003d \u003ccharacter\u003e | \u003ccharacter\u003e \u003ckeyword\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":" * \u003cprefix\u003e     ::\u003d \"n\" | \"p\" | \"e\" | \"a\" | \"t\"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":" * Notice that an expression can be a term (if no OR is present)","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":" * which can itself be a factor (if no AND is present).","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"public class FindExpressionParser {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"    private List\u003cToken\u003e tokens;","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"    private int pos \u003d 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"     * Parses a list of tokens into an expression tree, and returns","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"     * the final predicate that the ast resolves to.","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"     * @param tokens The list of tokens to be parsed.","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"     * @return The predicate representing the tokens when parsed into an expression tree.","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"    public Predicate\u003cPerson\u003e parseToPredicate(List\u003cToken\u003e tokens) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        if (tokens.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"Expression is empty!\");","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        this.tokens \u003d tokens;","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        ExprNode completedAst \u003d expression();","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"        if (!isAtEnd()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"Find command received an invalid filter string!\");","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        return completedAst.toPredicate();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"     * Parses and constructs an \"expression\" node from the current list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"     * In the context of parsers and grammars, an \"expression\" is a higher-level construct representing","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"     * a combination of one or more \"terms\". The terms within an expression are typically combined","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"     * using the OR operator. For example, in a query \"n/Bob OR (t/friends AND t/colleagues)\",","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"     * both \"n/Bob\" and \"(t/friends AND t/colleagues)\" are terms combined to form an expression.","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"     * @return The parsed expression node.","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"    private ExprNode expression() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"        ExprNode node \u003d term();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"        while (isNextTokenType(Token.Type.OR)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"            Token op \u003d consume(Token.Type.OR);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"            ExprNode right \u003d term();","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"            node \u003d new BinaryOpNode(node, FindExpressionOperator.OR, right);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"        return node;","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"     * Parses and constructs a \"term\" node from the current list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"     * In the context of parsers and grammars, a \"term\" is a mid-level construct that consists of one or more","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"     * \"factors\". The factors within a term are usually combined using the AND operator. For instance,","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"     * in a query \"n/Bob AND t/friends\", both \"n/Bob\" and \"t/friends\" are factors combined to create a term.","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"     * @return The parsed term node.","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"    private ExprNode term() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"        ExprNode node \u003d factor();","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"        while (isNextTokenType(Token.Type.AND)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"            Token op \u003d consume(Token.Type.AND);","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"            ExprNode right \u003d factor();","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"            node \u003d new BinaryOpNode(node, FindExpressionOperator.AND, right);","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"        return node;","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"     * Parses and constructs a \"factor\" node from the current list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"     * A \"factor\" is a foundational construct in this parser. It\u0027s the most granular unit and represents","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"     * a single condition or criteria in the query. Factors are building blocks for terms and expressions.","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"     * @return The parsed factor node.","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"    private ExprNode factor() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"        if (isNextTokenType(Token.Type.NOT)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"            consume(Token.Type.NOT);","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"            ExprNode node \u003d factor();","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"            return new NotNode(node);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"        } else if (isNextTokenType(Token.Type.LPAREN)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"            consume(Token.Type.LPAREN);","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"            ExprNode node \u003d expression();","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"            consume(Token.Type.RPAREN);","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"            return node;","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"            Token token \u003d consume(Token.Type.CONDITION);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"            // check if text contains a slash and is a valid condition","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"            if (!token.text.contains(\"/\") || token.text.startsWith(\"/\") || token.text.endsWith(\"/\")) {","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"                throw new ParseException(\"Invalid condition: \" + token.text);","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"            // split by slash but include slash in substrings","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"            String[] parts \u003d token.text.split(\"(?\u003c\u003d/)\");","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"            FindSupportedField field \u003d FindSupportedField.createFromPrefix(parts[0].trim().toLowerCase());","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"            return new ConditionNode(field, parts[1].trim());","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"kokrui"},"content":"    private boolean isNextTokenType(Token.Type type) {","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"kokrui"},"content":"        if (isAtEnd()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"kokrui"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"        return peek().type \u003d\u003d type;","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"kokrui"},"content":"    private Token consume(Token.Type type) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"        if (isNextTokenType(type)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"            return tokens.get(pos++);","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"        if (isAtEnd()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"Find command received an invalid filter string: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"                    + \"Expected token of type \" + type + \" but reached end of input!\");","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"        throw new ParseException(\"Find command received an invalid filter string: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"                + \"Expected token of type \" + type + \" but found \" + peek().type);","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"    private Token peek() {","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"kokrui"},"content":"        return tokens.get(pos);","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"    private boolean isAtEnd() {","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"        return pos \u003d\u003d tokens.size();","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"     * Enum representing the logical operators supported by the parser.","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"    enum FindExpressionOperator {","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"        AND, OR","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"     * Enum representing the fields that can be searched.","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"    enum FindSupportedField {","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"kokrui"},"content":"        NAME(PREFIX_NAME.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"kokrui"},"content":"        PHONE(PREFIX_PHONE.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"kokrui"},"content":"        EMAIL(PREFIX_EMAIL.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"        ADDRESS(PREFIX_ADDRESS.getPrefix()),","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"kokrui"},"content":"        TAG(PREFIX_TAG.getPrefix());","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"kokrui"},"content":"        private final String prefix;","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"kokrui"},"content":"        FindSupportedField(String prefix) {","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"kokrui"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"kokrui"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"kokrui"},"content":"         * Returns the corresponding field for a given prefix.","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"kokrui"},"content":"         *","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"kokrui"},"content":"         * @param prefix The prefix to look up.","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"kokrui"},"content":"         * @return The supported field corresponding to the given prefix.","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"         * @throws ParseException if the prefix is not supported.","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"        public static FindSupportedField createFromPrefix(String prefix) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"kokrui"},"content":"            for (FindSupportedField field : FindSupportedField.values()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"kokrui"},"content":"                if (field.prefix.equals(prefix)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":209,"author":{"gitId":"kokrui"},"content":"                    return field;","lastModifiedDate":"2023-10-14"},{"lineNumber":210,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":211,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":212,"author":{"gitId":"kokrui"},"content":"            throw new ParseException(\"No supported field with prefix \" + prefix);","lastModifiedDate":"2023-10-14"},{"lineNumber":213,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":214,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":216,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":217,"author":{"gitId":"kokrui"},"content":"     * Abstract class representing a node in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":218,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":219,"author":{"gitId":"kokrui"},"content":"    private abstract static class ExprNode {","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":221,"author":{"gitId":"kokrui"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":222,"author":{"gitId":"kokrui"},"content":"         * Converts the expression node into a predicate for filtering persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":223,"author":{"gitId":"kokrui"},"content":"         *","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"kokrui"},"content":"         * @return A predicate representing the conditions set by this node.","lastModifiedDate":"2023-10-14"},{"lineNumber":225,"author":{"gitId":"kokrui"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":226,"author":{"gitId":"kokrui"},"content":"        abstract Predicate\u003cPerson\u003e toPredicate();","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":228,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":229,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":230,"author":{"gitId":"kokrui"},"content":"     * Node representing a binary operation in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"kokrui"},"content":"    static class BinaryOpNode extends ExprNode {","lastModifiedDate":"2023-10-14"},{"lineNumber":233,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":234,"author":{"gitId":"kokrui"},"content":"        final ExprNode left;","lastModifiedDate":"2023-10-14"},{"lineNumber":235,"author":{"gitId":"kokrui"},"content":"        final ExprNode right;","lastModifiedDate":"2023-10-14"},{"lineNumber":236,"author":{"gitId":"kokrui"},"content":"        final FindExpressionOperator operator;","lastModifiedDate":"2023-10-14"},{"lineNumber":237,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"kokrui"},"content":"        BinaryOpNode(ExprNode left, FindExpressionOperator operator, ExprNode right) {","lastModifiedDate":"2023-10-14"},{"lineNumber":239,"author":{"gitId":"kokrui"},"content":"            this.left \u003d left;","lastModifiedDate":"2023-10-14"},{"lineNumber":240,"author":{"gitId":"kokrui"},"content":"            this.operator \u003d operator;","lastModifiedDate":"2023-10-14"},{"lineNumber":241,"author":{"gitId":"kokrui"},"content":"            this.right \u003d right;","lastModifiedDate":"2023-10-14"},{"lineNumber":242,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":243,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":244,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":245,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e toPredicate() {","lastModifiedDate":"2023-10-14"},{"lineNumber":246,"author":{"gitId":"kokrui"},"content":"            Predicate\u003cPerson\u003e leftPred \u003d left.toPredicate();","lastModifiedDate":"2023-10-14"},{"lineNumber":247,"author":{"gitId":"kokrui"},"content":"            Predicate\u003cPerson\u003e rightPred \u003d right.toPredicate();","lastModifiedDate":"2023-10-14"},{"lineNumber":248,"author":{"gitId":"kokrui"},"content":"            return (operator \u003d\u003d FindExpressionOperator.AND)","lastModifiedDate":"2023-10-14"},{"lineNumber":249,"author":{"gitId":"kokrui"},"content":"                    ? leftPred.and(rightPred)","lastModifiedDate":"2023-10-14"},{"lineNumber":250,"author":{"gitId":"kokrui"},"content":"                    : leftPred.or(rightPred);","lastModifiedDate":"2023-10-14"},{"lineNumber":251,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":252,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":253,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":254,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":255,"author":{"gitId":"kokrui"},"content":"     * Node representing a NOT operation in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":256,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":257,"author":{"gitId":"kokrui"},"content":"    static class NotNode extends ExprNode {","lastModifiedDate":"2023-10-14"},{"lineNumber":258,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"kokrui"},"content":"        final ExprNode operand;","lastModifiedDate":"2023-10-14"},{"lineNumber":260,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":261,"author":{"gitId":"kokrui"},"content":"        NotNode(ExprNode operand) {","lastModifiedDate":"2023-10-14"},{"lineNumber":262,"author":{"gitId":"kokrui"},"content":"            this.operand \u003d operand;","lastModifiedDate":"2023-10-14"},{"lineNumber":263,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":264,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":265,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":266,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e toPredicate() {","lastModifiedDate":"2023-10-14"},{"lineNumber":267,"author":{"gitId":"kokrui"},"content":"            return operand.toPredicate().negate();","lastModifiedDate":"2023-10-14"},{"lineNumber":268,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":269,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":270,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":271,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":272,"author":{"gitId":"kokrui"},"content":"     * Node representing a condition in the expression tree.","lastModifiedDate":"2023-10-14"},{"lineNumber":273,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":274,"author":{"gitId":"kokrui"},"content":"    static class ConditionNode extends ExprNode {","lastModifiedDate":"2023-10-14"},{"lineNumber":275,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":276,"author":{"gitId":"kokrui"},"content":"        final FindSupportedField field;","lastModifiedDate":"2023-10-14"},{"lineNumber":277,"author":{"gitId":"kokrui"},"content":"        final String keyword;","lastModifiedDate":"2023-10-14"},{"lineNumber":278,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":279,"author":{"gitId":"kokrui"},"content":"        ConditionNode(FindSupportedField field, String keyword) {","lastModifiedDate":"2023-10-14"},{"lineNumber":280,"author":{"gitId":"kokrui"},"content":"            this.field \u003d field;","lastModifiedDate":"2023-10-14"},{"lineNumber":281,"author":{"gitId":"kokrui"},"content":"            this.keyword \u003d keyword;","lastModifiedDate":"2023-10-14"},{"lineNumber":282,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":283,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":284,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":285,"author":{"gitId":"kokrui"},"content":"        Predicate\u003cPerson\u003e toPredicate() {","lastModifiedDate":"2023-10-14"},{"lineNumber":286,"author":{"gitId":"kokrui"},"content":"            switch (field) {","lastModifiedDate":"2023-10-14"},{"lineNumber":287,"author":{"gitId":"kokrui"},"content":"            case NAME:","lastModifiedDate":"2023-10-14"},{"lineNumber":288,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getName().fullName, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":289,"author":{"gitId":"kokrui"},"content":"            case PHONE:","lastModifiedDate":"2023-10-14"},{"lineNumber":290,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getPhone().value, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":291,"author":{"gitId":"kokrui"},"content":"            case EMAIL:","lastModifiedDate":"2023-10-14"},{"lineNumber":292,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getEmail().value, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":293,"author":{"gitId":"kokrui"},"content":"            case ADDRESS:","lastModifiedDate":"2023-10-14"},{"lineNumber":294,"author":{"gitId":"kokrui"},"content":"                return person -\u003e StringUtil.containsSubstringIgnoreCase(person.getAddress().value, keyword);","lastModifiedDate":"2023-10-14"},{"lineNumber":295,"author":{"gitId":"kokrui"},"content":"            case TAG:","lastModifiedDate":"2023-10-14"},{"lineNumber":296,"author":{"gitId":"kokrui"},"content":"                // Tags are slightly more complicated -- a person passes the predicate if the tag","lastModifiedDate":"2023-10-14"},{"lineNumber":297,"author":{"gitId":"kokrui"},"content":"                // specified is a member of the person\u0027s tag set. The specified tag must be an exact","lastModifiedDate":"2023-10-14"},{"lineNumber":298,"author":{"gitId":"kokrui"},"content":"                // match, not a substring match.","lastModifiedDate":"2023-10-14"},{"lineNumber":299,"author":{"gitId":"kokrui"},"content":"                return person -\u003e person.getTags().contains(new Tag(keyword));","lastModifiedDate":"2023-10-14"},{"lineNumber":300,"author":{"gitId":"kokrui"},"content":"            default:","lastModifiedDate":"2023-10-14"},{"lineNumber":301,"author":{"gitId":"kokrui"},"content":"                throw new IllegalStateException(\"Unexpected field: \" + field);","lastModifiedDate":"2023-10-14"},{"lineNumber":302,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":303,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":304,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":305,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"kokrui":305}},{"path":"src/main/java/seedu/address/logic/parser/FindFilterStringTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":" * Parses complex boolean find filter strings into tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"public class FindFilterStringTokenizer {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"    private final String filterString;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"    private int pos \u003d 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"     * Constructs a FindFilterStringTokenizer.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"     * @param filterString the find filter string to tokenize.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    public FindFilterStringTokenizer(String filterString) {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        this.filterString \u003d filterString;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"     * Converts the provided find string into a list of tokens.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"     * @return a list of tokens representing the filter string components","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"    List\u003cToken\u003e tokenize() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"        List\u003cToken\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"        while (pos \u003c filterString.length()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"            char current \u003d peek();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"            if (Character.isWhitespace(current)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"                next();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027\u0026\u0027 \u0026\u0026 peek(1) \u003d\u003d \u0027\u0026\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.AND, \"\u0026\u0026\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"                pos +\u003d 2;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027|\u0027 \u0026\u0026 peek(1) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.OR, \"||\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"                pos +\u003d 2;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027!\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.NOT, \"!\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"                pos++;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"            } else if (current \u003d\u003d \u0027(\u0027 || current \u003d\u003d \u0027)\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(current \u003d\u003d \u0027(\u0027","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"                        ? Token.Type.LPAREN","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"                        : Token.Type.RPAREN, String.valueOf(current)));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"                pos++;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"            } else if (isPartOfCondition(current)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"                while (pos \u003c filterString.length() \u0026\u0026 isPartOfCondition(peek())) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"                    sb.append(next());","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"                tokens.add(new Token(Token.Type.CONDITION, sb.toString()));","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"                throw new ParseException(\"Find command received an invalid filter string!\");","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        return tokens;","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"    private boolean isPartOfCondition(char c) {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        return Character.isLetterOrDigit(c)","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"                || c \u003d\u003d \u0027/\u0027 || c \u003d\u003d \u0027,\u0027 || c \u003d\u003d \u0027@\u0027 || c \u003d\u003d \u0027.\u0027 || c \u003d\u003d \u0027-\u0027 || c \u003d\u003d \u0027_\u0027 || c \u003d\u003d \u0027#\u0027;","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"    private char next() {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"kokrui"},"content":"        return filterString.charAt(pos++);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"    private char peek() {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        return (pos \u003c filterString.length())","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"                ? filterString.charAt(pos)","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"                : \u0027\\0\u0027;","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"    private char peek(int relativePosition) {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"        return ((pos + relativePosition) \u003c filterString.length())","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"                ? filterString.charAt(pos + relativePosition)","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"                : \u0027\\0\u0027;","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"     * Represents a component (token) in the boolean filter string.","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"    public static class Token {","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"kokrui"},"content":"        final Type type;","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"kokrui"},"content":"        final String text;","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"         * Constructs a token.","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"         *","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"         * @param type the type of the token.","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"         * @param text the text representing the token in the filter string.","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        Token(Type type, String text) {","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"            this.type \u003d type;","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"            this.text \u003d text;","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"        public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"            return type + \":\" + text;","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"        enum Type {","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"            AND, OR, NOT, LPAREN, RPAREN, CONDITION","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"kokrui":115}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"     * Parses a {@code String linkedin} into an {@code Linkedin}.","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the given {@code linkedin} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"    public static Linkedin parseLinkedin(String linkedin) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(linkedin);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"        String trimmedLinkedin \u003d linkedin.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"        if (!Linkedin.isValidLinkedin(trimmedLinkedin)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(Linkedin.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"        return new Linkedin(trimmedLinkedin);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"limjunxian1":32,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"        if (p.getId().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"            p.setId(getNextID());","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"conradsoon"},"content":"    private int getNextID() {","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"conradsoon"},"content":"        //TODO: works for now, change later to something more efficient.","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"conradsoon"},"content":"        int maxID \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"conradsoon"},"content":"        for (Person p : persons) {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"conradsoon"},"content":"            if (p.getId().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"conradsoon"},"content":"                continue;","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"conradsoon"},"content":"            int id \u003d p.getId().get();","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"conradsoon"},"content":"            if (id \u003e maxID) {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"conradsoon"},"content":"                maxID \u003d id;","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"conradsoon"},"content":"        return maxID + 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"conradsoon":18,"-":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"     * Adds event to track.","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"     * @param event Event to track.","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"     * Gets all events being tracked.","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"     * @return List of events.","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"    List\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lordidiot":14,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    private ArrayList\u003cEvent\u003e events;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"lordidiot"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"lordidiot"},"content":"        events.add(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"lordidiot"},"content":"    public List\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"lordidiot"},"content":"        return events;","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lordidiot":15,"-":147}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"public class Event {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    private String title;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    private String description;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    private ArrayList\u003cDuration\u003e reminderDeltas;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    private Set\u003cPerson\u003e members;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"     * Initialises {@code Event} instance.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"     * @param title Title of event.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     * @param description Description of event.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"     * @param dateTime Date and time of event.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    public Event(String title, String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        this.reminderDeltas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        this.members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    public void addMember(Person member) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"        members.add(member);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"    public void addReminder(Duration reminderDelta) {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        reminderDeltas.add(reminderDelta);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"    private boolean shouldTriggerReminder(LocalDateTime currentDateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        // Should not remind if event has already passed","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        if (currentDateTime.isAfter(dateTime)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"        for (Duration reminderDelta: reminderDeltas) {","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"            if (dateTime.minus(reminderDelta).isBefore(currentDateTime)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"                return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"        return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"     * Gets notification for event at a specific time.","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"     * @param currentDateTime Current time.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"     * @return {@code Optional.empty()} if no suitable notifications, else returns the notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"    public Optional\u003cNotification\u003e getNotificationAtTime(LocalDateTime currentDateTime) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"        if (shouldTriggerReminder(currentDateTime)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"lordidiot"},"content":"            String description \u003d String.format(\"[%s] %s\", dateTime.format(formatter), this.description);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"lordidiot"},"content":"            return Optional.of(new Notification(title, description));","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"lordidiot"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"lordidiot"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"lordidiot":74}},{"path":"src/main/java/seedu/address/model/event/EventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":" * EventFactory generates events from model state.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"public class EventFactory {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     * Creates events from current model state.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"     * @param model {@code Model} representing current state of program.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"     * @return","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    public static List\u003cEvent\u003e createEvents(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        events.addAll(createBirthdayEvents(model));","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        // Reset model filter","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        return events;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    private static List\u003cEvent\u003e createBirthdayEvents(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        model.updateFilteredPersonList(p -\u003e p.getBirthday().isPresent());","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        for (Person person: model.getFilteredPersonList()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"            Event event;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"            LocalDate birthdayThisYear \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"                    person.getBirthday().orElseThrow().birthday.atYear(LocalDate.now().getYear());","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"            LocalDate birthdayNextYear \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"                    person.getBirthday().orElseThrow().birthday.atYear(","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"                            LocalDate.now().plusYears(1).getYear()","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"                    );","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"            // Birthday has not passed this year","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"            if (birthdayThisYear.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"                event \u003d new Event(","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"                        String.format(\"%s\u0027s Birthday\", person.getName()), \"\",","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"                        birthdayThisYear.atTime(0, 0)","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"            } else {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"                event \u003d new Event(","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"                        String.format(\"%s\u0027s Birthday\", person.getName()), \"\",","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"                        birthdayNextYear.atTime(0, 0)","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"            }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"            event.addReminder(Duration.ofDays(1)); // Birthday reminder defaults to 1 day in advance","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"            event.addMember(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"            events.add(event);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        return events;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"lordidiot":64}},{"path":"src/main/java/seedu/address/model/event/Notification.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":" * Encapsulates details of notifications.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"public class Notification {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"    private final String title;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"     * Creates a notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"     * @param title Title of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"     * @param description Description of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    public Notification(String title, String description) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        requireAllNonNull(title, description);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"     * Gets title.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"     * @return Title of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    public String getTitle() {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        return title;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"     * Gets description.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"     * @return Description of notification.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":38}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"public class Birthday {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    public final MonthDay birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"     * @param birthday A valid month and day of the person\u0027s birthday.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    public Birthday(MonthDay birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        return birthday.toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        return birthday.equals(otherBirthday.birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        return birthday.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"lordidiot":48}},{"path":"src/main/java/seedu/address/model/person/Linkedin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":" * Represents a Person\u0027s linkedin in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLinkedin(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class Linkedin {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Linkedin can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"     * Constructs an {@code Linkedin}.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     * @param linkedin A valid linkedin.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"    public Linkedin(String linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(linkedin);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"        checkArgument(isValidLinkedin(linkedin), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        value \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if a given string is a valid linkedin handle.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    public static boolean isValidLinkedin(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        if (!(other instanceof Linkedin)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"        Linkedin otherLinkedin \u003d (Linkedin) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        return value.equals(otherLinkedin.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"limjunxian1":64}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"conradsoon"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"    private Optional\u003cBirthday\u003e birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cLinkedin\u003e linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cEmail\u003e secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"    private Optional\u003cInteger\u003e id;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d Optional.empty();","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"     * Constructor including optional fields.","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Optional\u003cBirthday\u003e birthday,","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"                  Optional\u003cLinkedin\u003e linkedin, Optional\u003cEmail\u003e secondaryEmail,","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"conradsoon"},"content":"                  Optional\u003cTelegram\u003e telegram, Set\u003cTag\u003e tags, Optional\u003cInteger\u003e id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"        requireAllNonNull(name, phone, email, address, birthday, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"lordidiot"},"content":"    public void setBirthday(Birthday birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d Optional.of(birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"lordidiot"},"content":"    public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"        return birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"limjunxian1"},"content":"    public Optional\u003cLinkedin\u003e getLinkedin() {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"limjunxian1"},"content":"        return linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"limjunxian1"},"content":"    public Optional\u003cEmail\u003e getSecondaryEmail() {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"limjunxian1"},"content":"        return secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"limjunxian1"},"content":"    public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"        return telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"conradsoon"},"content":"     * Returns a set of non-emergency tags.","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"conradsoon"},"content":"     * @return","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"conradsoon"},"content":"    public Set\u003cTag\u003e getNonEmergencyTags() {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"conradsoon"},"content":"        return tags.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"conradsoon"},"content":"            .filter(tag -\u003e !Tag.EmergencyTags.isEmergencyTag(tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"conradsoon"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"conradsoon"},"content":"     * Returns a set of emergency tags.","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"conradsoon"},"content":"     * @return","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"conradsoon"},"content":"    public Set\u003cTag\u003e getEmergencyTags() {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"conradsoon"},"content":"        return tags.stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"conradsoon"},"content":"            .filter(tag -\u003e Tag.EmergencyTags.isEmergencyTag(tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"conradsoon"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"conradsoon"},"content":"    public Optional\u003cInteger\u003e getId() {","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"conradsoon"},"content":"        return id;","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"conradsoon"},"content":"    public int setId(int id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d Optional.of(id);","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"conradsoon"},"content":"        return id;","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limjunxian1":23,"conradsoon":33,"lordidiot":22,"-":118}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limjunxian1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"limjunxian1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"limjunxian1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"limjunxian1"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"limjunxian1"},"content":" * Represents a Person\u0027s telegram in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"limjunxian1"},"content":" * Is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"limjunxian1"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"limjunxian1"},"content":"public class Telegram {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram should start with the \u0027@\u0027 symbol, \"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"limjunxian1"},"content":"            + \"should not contain whitespace, and should not be blank\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"limjunxian1"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"limjunxian1"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"    public static final String VALIDATION_REGEX \u003d \"@[^\\\\s]+\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"limjunxian1"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"limjunxian1"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"limjunxian1"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"limjunxian1"},"content":"     * @param telegram A valid telegram.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"limjunxian1"},"content":"    public Telegram(String telegram) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"limjunxian1"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"limjunxian1"},"content":"        checkArgument(isValidTelegram(telegram), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"        value \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"     * Returns true if a given string is a valid telegram handle.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"limjunxian1"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"limjunxian1"},"content":"        if (!(other instanceof Telegram)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"limjunxian1"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"limjunxian1"},"content":"        Telegram otherTelegram \u003d (Telegram) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"limjunxian1"},"content":"        return value.equals(otherTelegram.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"limjunxian1":64}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"conradsoon"},"content":"     * Enum for emergency tags","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"conradsoon"},"content":"    public enum EmergencyTags {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"conradsoon"},"content":"        RA,","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"conradsoon"},"content":"        SOS;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"conradsoon"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"         * Returns true if a given string is a valid emergency tag name.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"conradsoon"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"conradsoon"},"content":"        public static boolean isEmergencyTag(String tagName) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"conradsoon"},"content":"            for (EmergencyTags tag : EmergencyTags.values()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"conradsoon"},"content":"                if (tag.name().equals(tagName)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"conradsoon"},"content":"                    return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"conradsoon":19,"-":62}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"conradsoon"},"content":"        Person[] samplePersons \u003d {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"                Optional.of(new Birthday(MonthDay.of(10, 13))),","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"conradsoon"},"content":"                getTagSet(\"classmates\"), Optional.empty()),","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"conradsoon"},"content":"        for (int i \u003d 0; i \u003c samplePersons.length; i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"            samplePersons[i].setId(i + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"conradsoon"},"content":"        return samplePersons;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"limjunxian1":3,"conradsoon":6,"lordidiot":4,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    private final Optional\u003cMonthDay\u003e birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"    private final Optional\u003cString\u003e linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"    private final Optional\u003cString\u003e secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"    private final Optional\u003cString\u003e telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"    private final Optional\u003cInteger\u003e id;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"            @JsonProperty(\"birthday\") Optional\u003cMonthDay\u003e birthday, @JsonProperty(\"linkedin\") Optional\u003cString\u003e linkedin,","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"            @JsonProperty(\"secondaryEmail\") Optional\u003cString\u003e secondaryEmail,","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"            @JsonProperty(\"telegram\") Optional\u003cString\u003e telegram,","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"conradsoon"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"            @JsonProperty(\"id\") Optional\u003cInteger\u003e id","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"    ) {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"lordidiot"},"content":"        birthday \u003d source.getBirthday().map(b -\u003e b.birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"limjunxian1"},"content":"        linkedin \u003d source.getLinkedin().map(l -\u003e l.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmail \u003d source.getSecondaryEmail().map(e -\u003e e.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"limjunxian1"},"content":"        telegram \u003d source.getTelegram().map(t -\u003e t.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"conradsoon"},"content":"        id \u003d source.getId().map(x -\u003e x.intValue());","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"lordidiot"},"content":"        final Optional\u003cBirthday\u003e modelBirthday \u003d birthday.map(monthDay -\u003e new Birthday(monthDay));","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"limjunxian1"},"content":"        final Optional\u003cLinkedin\u003e modelLinkedin \u003d linkedin.map(linkedin -\u003e new Linkedin(linkedin));","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"limjunxian1"},"content":"        final Optional\u003cEmail\u003e modelSecondaryEmail \u003d secondaryEmail.map(email -\u003e new Email(email));","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"limjunxian1"},"content":"        final Optional\u003cTelegram\u003e modelTelegram \u003d telegram.map(telegram -\u003e new Telegram(telegram));","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"conradsoon"},"content":"        final Optional\u003cInteger\u003e modelID \u003d id.map(x -\u003e x.intValue());","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"limjunxian1"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBirthday, modelLinkedin,","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"conradsoon"},"content":"                modelSecondaryEmail, modelTelegram, modelTags, modelID);","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"limjunxian1":21,"conradsoon":7,"lordidiot":10,"-":107}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t13-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kokrui":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    private NotificationWindow notificationWindow;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"lordidiot"},"content":"     * Shows startup notifications to user.","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"lordidiot"},"content":"    public void showStartupNotifications() {","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"lordidiot"},"content":"        logic.getLatestNotifications(LocalDateTime.now()).stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"lordidiot"},"content":"                .forEach(notification -\u003e new NotificationWindow(getPrimaryStage(), notification).show());","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lordidiot":10,"-":196}},{"path":"src/main/java/seedu/address/ui/NotificationWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Notification;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":" * Controller for a help page","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"public class NotificationWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NotificationWindow.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    private static final String FXML \u003d \"NotificationWindow.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    private Label notificationTitle;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    private Label notificationDescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    public NotificationWindow(Stage root, Stage ownerStage, Notification notification) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        root.initOwner(ownerStage);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        notificationTitle.setText(String.format(\"Upcoming Event: %s\", notification.getTitle()));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        notificationDescription.setText(notification.getDescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"     * Creates a new NotificationWindow.","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"    public NotificationWindow(Stage ownerStage, Notification notification) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        this(new Stage(), ownerStage, notification);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"     * Shows the notification window.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"lordidiot"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"lordidiot"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"lordidiot"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"lordidiot"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"    public void show() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"lordidiot"},"content":"        logger.fine(\"Showing a notification\");","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":67}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"limjunxian1"},"content":"    private Label linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limjunxian1"},"content":"    private Label secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"limjunxian1"},"content":"    private Label telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"limjunxian1"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"conradsoon"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"conradsoon"},"content":"    private Label uniqueId;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"        linkedin.setText(person.getLinkedin().map(l -\u003e l.value).orElse(\"\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmail.setText(person.getSecondaryEmail().map(e -\u003e e.value).orElse(\"\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"        telegram.setText(person.getTelegram().map(t -\u003e t.value).orElse(\"\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"conradsoon"},"content":"        person.getEmergencyTags().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"conradsoon"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"conradsoon"},"content":"            .forEach(tag -\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"                Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"conradsoon"},"content":"                label.setStyle(\"-fx-background-color: red; -fx-text-fill: white;\");","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"conradsoon"},"content":"                tags.getChildren().add(label);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"conradsoon"},"content":"            });","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"conradsoon"},"content":"        person.getNonEmergencyTags().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"conradsoon"},"content":"        uniqueId.setText(person.getId().map(x -\u003e Integer.toString(x)).orElse(\"NONE\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"limjunxian1":9,"conradsoon":12,"-":58}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"            mainWindow.showStartupNotifications();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lordidiot":1,"-":88}},{"path":"src/main/resources/view/NotificationWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"#notificationTitle, #notificationDescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"#notificationContainer {","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":7}},{"path":"src/main/resources/view/NotificationWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Notification\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        \u003cURL value\u003d\"@NotificationWindow.css\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"      \u003cVBox fx:id\u003d\"notificationContainer\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"          \u003cLabel fx:id\u003d\"notificationTitle\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"          \u003cLabel fx:id\u003d\"notificationDescription\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":43}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"conradsoon"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel text\u003d\"id:\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"conradsoon"},"content":"        \u003cLabel fx:id\u003d\"uniqueId\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"limjunxian1"},"content":"      \u003cLabel fx:id\u003d\"linkedin\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$linkedin\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"limjunxian1"},"content":"      \u003cLabel fx:id\u003d\"secondaryEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$secondaryEmail\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"limjunxian1"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"limjunxian1":3,"conradsoon":4,"-":36}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"    //---------------- Tests for containsSubstringIgnoreCase --------------------------------------","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"    /*","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"     * Invalid equivalence partitions for substring: null, empty","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"     * Invalid equivalence partitions for stringToCheck: null","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"     * The three test cases below test one invalid input at a time.","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_nullSubstring_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsSubstringIgnoreCase(\"typical string\", null));","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_emptySubstring_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"        assertThrows(IllegalArgumentException.class, \"Substring parameter cannot be empty\", ()","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"            -\u003e StringUtil.containsSubstringIgnoreCase(\"typical string\", \"  \"));","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_nullStringToCheck_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"kokrui"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsSubstringIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"kokrui"},"content":"    /*","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"kokrui"},"content":"     * Valid equivalence partitions for substring:","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"kokrui"},"content":"     *   - any substring","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"kokrui"},"content":"     *   - substring containing symbols/numbers","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"kokrui"},"content":"     *   - substring with leading/trailing spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"kokrui"},"content":"     * Valid equivalence partitions for stringToCheck:","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"kokrui"},"content":"     *   - empty string","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"kokrui"},"content":"     *   - one word","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"kokrui"},"content":"     *   - multiple words","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"kokrui"},"content":"     *   - string with extra spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"kokrui"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"kokrui"},"content":"     *   - matches first word in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"kokrui"},"content":"     *   - last word in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"kokrui"},"content":"     *   - middle word in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"kokrui"},"content":"     *   - matches multiple words","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"kokrui"},"content":"     *   - query substring matches part of a stringToCheck word","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"kokrui"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"kokrui"},"content":"     *   - stringToCheck word matches part of the query substring","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"kokrui"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"kokrui"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"kokrui"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"kokrui"},"content":"    public void containsSubstringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"kokrui"},"content":"        // Empty stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"kokrui"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"kokrui"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"kokrui"},"content":"        // Matches a partial substring","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"kokrui"},"content":"                \"bb\")); // stringToCheck word bigger than query substring","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"kokrui"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"kokrui"},"content":"                \"bbbb\")); // Query substring bigger than stringToCheck word","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"kokrui"},"content":"        // Matches substring in the stringToCheck, different upper/lower case letters","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"kokrui"},"content":"                \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc@1\",","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"kokrui"},"content":"                \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"  AAA   bBb   ccc  \",","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"kokrui"},"content":"                \"aaa\")); // stringToCheck has extra spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"Aaa\",","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"kokrui"},"content":"                \"aaa\")); // Only one word in stringToCheck (boundary case)","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\",","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"kokrui"},"content":"                \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"kokrui"},"content":"        // Matches multiple words in stringToCheck","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"kokrui"},"content":"        // Matches part of a stringToCheck word","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"kokrui"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kokrui":81,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"    public void getLatestNotifications_noEvents_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2023, 10, 10, 0, 0);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"lordidiot"},"content":"        assertEquals(logic.getLatestNotifications(dt), List.of());","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lordidiot":8,"-":175}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":163,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":164,"author":{"gitId":"lordidiot"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"lordidiot"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"lordidiot"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"lordidiot"},"content":"        public List\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"lordidiot"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"lordidiot"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"conradsoon"},"content":"        private int id \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"conradsoon":3,"lordidiot":12,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        // same values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kokrui":2,"-":89}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parseCommand(FindCommand.COMMAND_WORD + \" n/foo \u0026\u0026 n/bar || t/baz\")","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"                instanceof FindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kokrui":2,"-":92}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"    public void parse_hasPreamble_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"        // just preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" hello world\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"        // preamble with valid args after","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" hello world n/Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    public void parse_conditionNotJoinedWithBooleanOp_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"    public void parse_conditionInvalidBooleanOp_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026 n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice | t/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"    public void parse_invalidCondition_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" /Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" /\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"    public void parse_invalidBooleanExpression_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"        // no conditions","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \u0026\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" !\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"kokrui"},"content":"        // no conditions after boolean op","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026\u0026\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice ||\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"kokrui"},"content":"        // no conditions before boolean op","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \u0026\u0026 n/Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" || n/Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"kokrui"},"content":"        // no conditions between boolean op","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026\u0026 \u0026\u0026 n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice || || n/Bob\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"kokrui"},"content":"        // no conditions after not op","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice ! \"));","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"kokrui"},"content":"    public void parse_unmatchedParens_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" (n/Alice \u0026\u0026 t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" n/Alice \u0026\u0026 (t/friends || t/colleagues\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" )n/Alice \u0026\u0026 t/friends(\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" (n/Alice \u0026\u0026 t/friends))\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"kokrui"},"content":"    public void parse_validOneArg_returnsFindCommand() throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"kokrui"},"content":"        // name arg","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" n/Alice\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" n/Alice\") instanceof FindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"kokrui"},"content":"        // other arg","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" t/friends\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" t/friends\") instanceof FindCommand);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"kokrui"},"content":"    public void parse_validMultipleArgs_returnsFindCommand() throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"kokrui"},"content":"        // name args","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" n/Alice \u0026\u0026 n/Li\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" n/Alice \u0026\u0026 n/Li\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"kokrui"},"content":"        // multiple distinct args","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" n/Alice \u0026\u0026 t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" n/Alice \u0026\u0026 t/friends\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"kokrui"},"content":"        // multiple distinct args with repeated fields","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" n/Alice \u0026\u0026 t/colleagues \u0026\u0026 t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" n/Alice \u0026\u0026 t/colleagues \u0026\u0026 t/friends\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"kokrui"},"content":"    public void parse_validArgsWithNotOp_returnsFindCommand() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" !n/Alice\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" !n/Alice\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"kokrui"},"content":"        // with space after NOT","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" ! t/friends\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" ! t/friends\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"kokrui"},"content":"    public void parse_validArgsWithParens_returnFindCommand() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice)\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice)\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"kokrui"},"content":"        // alters precedence","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice || t/friends) \u0026\u0026 a/street\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice || t/friends) \u0026\u0026 a/street\") instanceof FindCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kokrui"},"content":"        // does not alter precedence","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice \u0026\u0026 t/friends) \u0026\u0026 a/street\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice \u0026\u0026 t/friends) \u0026\u0026 a/street\") instanceof FindCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kokrui"},"content":"        // with space after parens","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" ( t/friends )\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" ( t/friends )\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"kokrui"},"content":"        // with space before parens","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (t/friends )\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (t/friends )\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"kokrui"},"content":"        // with nested parens","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice \u0026\u0026 (t/friends || t/colleagues))\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice \u0026\u0026 (t/friends || t/colleagues))\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"kokrui"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\" (n/Alice \u0026\u0026 ((((t/friends || t/colleagues)))))\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"kokrui"},"content":"        assertTrue(parser.parse(\" (n/Alice \u0026\u0026 ((((t/friends || t/colleagues)))))\") instanceof FindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kokrui":122,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/FindExpressionParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"public class FindExpressionParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"    private final FindExpressionParser parser \u003d new FindExpressionParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"    public void fromPrefix_invalidPrefix_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"asdf\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"        // existent but unsupported fields","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"tg/\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"e2/\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e FindExpressionParser.FindSupportedField.createFromPrefix(\"li/\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"kokrui"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"kokrui"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseToPredicate(new ArrayList\u003c\u003e()));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"kokrui"},"content":"    public void conditionNodeToPredicate_validField_returnsPredicate() throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.NAME, \"Alice\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.PHONE, \"12345\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.EMAIL, \"haha@haha.com\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.ADDRESS, \"123, haha street\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"kokrui"},"content":"        assertTrue(new FindExpressionParser.ConditionNode(","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"kokrui"},"content":"                FindExpressionParser.FindSupportedField.TAG, \"friends\").toPredicate()","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"kokrui"},"content":"                instanceof Predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"kokrui":56}},{"path":"src/test/java/seedu/address/logic/parser/FindFilterStringTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kokrui"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"kokrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"kokrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"kokrui"},"content":"public class FindFilterStringTokenizerTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"kokrui"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"kokrui"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"kokrui"},"content":"    public void tokenToString_validInput_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.AND, \"Alice\").toString(), \"AND:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.OR, \"Alice\").toString(), \"OR:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.NOT, \"Alice\").toString(), \"NOT:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.LPAREN, \"Alice\").toString(), \"LPAREN:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"kokrui"},"content":"        assertEquals(new FindFilterStringTokenizer.Token(","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"kokrui"},"content":"                FindFilterStringTokenizer.Token.Type.RPAREN, \"Alice\").toString(), \"RPAREN:Alice\");","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"kokrui"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"kokrui"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"kokrui":22}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"conradsoon"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"conradsoon"},"content":"import java.util.Random;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"conradsoon"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"conradsoon"},"content":"    public void randomOperations_ensureUniqueIds() {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"conradsoon"},"content":"        addressBook.resetData(new AddressBookStub(Collections.emptyList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"conradsoon"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"conradsoon"},"content":"        HashSet\u003cInteger\u003e ids \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"conradsoon"},"content":"        for (int i \u003d 0; i \u003c 200; i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"conradsoon"},"content":"            if (addressBook.getPersonList().isEmpty() || random.nextBoolean()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"conradsoon"},"content":"                String name \u003d java.util.UUID.randomUUID().toString().replace(\"-\", \"\");","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"conradsoon"},"content":"                Person newPerson \u003d new PersonBuilder().withName(name).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"conradsoon"},"content":"                addressBook.addPerson(newPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"conradsoon"},"content":"                ids.add(newPerson.getId().get());","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"conradsoon"},"content":"            } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"conradsoon"},"content":"                int randomIndex \u003d random.nextInt(addressBook.getPersonList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"conradsoon"},"content":"                Person personToRemove \u003d addressBook.getPersonList().get(randomIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"conradsoon"},"content":"                ids.remove(personToRemove.getId().get());","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"conradsoon"},"content":"                addressBook.removePerson(personToRemove);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"conradsoon"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"conradsoon"},"content":"        for (Person person : addressBook.getPersonList()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"conradsoon"},"content":"            assertTrue(ids.contains(person.getId().get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"conradsoon"},"content":"            ids.remove(person.getId().get());","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"conradsoon"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"conradsoon"},"content":"        assertTrue(ids.isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"conradsoon":32,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"    public void addEvent_validEvent_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e modelManager.addEvent(new Event(\"\", \"\", LocalDateTime.MIN)));","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"lordidiot"},"content":"    public void getEventList_nonEmpty_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"lordidiot"},"content":"        assertTrue(modelManager.getEventList() !\u003d null);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"lordidiot"},"content":"    public void getEventList_latestEvent_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"A\", \"B\", LocalDateTime.MIN);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"lordidiot"},"content":"        modelManager.addEvent(event);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"        assertTrue(modelManager.getEventList().contains(event));","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"lordidiot":20,"-":132}},{"path":"src/test/java/seedu/address/model/event/EventFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"public class EventFactoryTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    void createEvents_hasBirthdays_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"        modelManager.addPerson(new Person(","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"                new Name(\"Some Name\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"                new Phone(\"1235\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"                new Email(\"email@email.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"                new Address(\"Some address\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"                Optional.of(new Birthday(MonthDay.of(1, 20))),","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"limjunxian1"},"content":"                Optional.empty(),","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"conradsoon"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"conradsoon"},"content":"                Optional.empty()","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        ));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"        assertTrue(EventFactory.createEvents(modelManager).size() \u003e 0);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"limjunxian1":3,"conradsoon":2,"lordidiot":35}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"public class EventTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    void constructor_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new Event(\"title\", \"description\", LocalDateTime.MIN));","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    void addMember_validMember_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"title\", \"description\", LocalDateTime.MIN);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    void addReminder_validReminder_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new Event(\"title\", \"description\", LocalDateTime.MIN));","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"    void getNotificationAtTime_noNotification_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime eventTime \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"title\", \"description\", eventTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(1)).isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(5)).isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(10)).isEmpty());","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"lordidiot"},"content":"    void getNotificationAtTime_hasNotification_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"lordidiot"},"content":"        LocalDateTime eventTime \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"lordidiot"},"content":"        Duration reminder \u003d Duration.ofDays(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"lordidiot"},"content":"        Event event \u003d new Event(\"title\", \"description\", eventTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"lordidiot"},"content":"        event.addReminder(reminder);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(1)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(5)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"lordidiot"},"content":"        assertTrue(event.getNotificationAtTime(eventTime.minusHours(10)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"lordidiot"},"content":"        assertFalse(event.getNotificationAtTime(eventTime.minusHours(25)).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":49}},{"path":"src/test/java/seedu/address/model/event/NotificationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"public class NotificationTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Notification(null, \"\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"    public void constructor_null_throwsNullPointerException2() {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Notification(\"\", null));","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"    public void constructor_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        assertDoesNotThrow(() -\u003e new Notification(\"title\", \"description\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"    public void getTitle_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"        Notification notification \u003d new Notification(\"title\", \"description\");","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        assertEquals(notification.getTitle(), \"title\");","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"    public void getDescription_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"        Notification notification \u003d new Notification(\"title\", \"description\");","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        assertEquals(notification.getDescription(), \"description\");","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":37}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lordidiot"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"lordidiot"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"public class BirthdayTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"lordidiot"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"lordidiot"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"lordidiot"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"lordidiot"},"content":"        Birthday birthday \u003d new Birthday(MonthDay.of(1, 23));","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"lordidiot"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"lordidiot"},"content":"        assertTrue(birthday.equals(new Birthday(MonthDay.of(1, 23))));","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"lordidiot"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"lordidiot"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"lordidiot"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"lordidiot"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"lordidiot"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"lordidiot"},"content":"        assertFalse(birthday.equals(5.0f));","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"lordidiot"},"content":"        assertFalse(birthday.equals(new Birthday(MonthDay.of(11, 11))));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"lordidiot"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"lordidiot":37}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    private static final Optional\u003cMonthDay\u003e VALID_BIRTHDAY \u003d BENSON.getBirthday().map(b -\u003e b.birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    private static final Optional\u003cString\u003e VALID_LINKEDIN \u003d BENSON.getLinkedin().map(linkedin -\u003e linkedin.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    private static final Optional\u003cString\u003e VALID_SECONDARY_EMAIL \u003d BENSON.getSecondaryEmail().map(email -\u003e email.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    private static final Optional\u003cString\u003e VALID_TELEGRAM \u003d BENSON.getTelegram().map(telegram -\u003e telegram.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"conradsoon"},"content":"    private static final Optional\u003cInteger\u003e VALID_ID \u003d BENSON.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"limjunxian1"},"content":"                        INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"limjunxian1"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"conradsoon"},"content":"                VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"lordidiot"},"content":"        );","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"limjunxian1"},"content":"                        VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"limjunxian1"},"content":"                        VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"lordidiot"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"                        VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"lordidiot"},"content":"                );","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"lordidiot"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, VALID_TAGS, VALID_ID);","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"limjunxian1"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"conradsoon"},"content":"                        VALID_LINKEDIN, VALID_SECONDARY_EMAIL, VALID_TELEGRAM, invalidTags, VALID_ID);","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"limjunxian1":12,"conradsoon":11,"lordidiot":16,"-":101}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"lordidiot"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"lordidiot"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"limjunxian1"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"lordidiot"},"content":"    private Optional\u003cBirthday\u003e birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cLinkedin\u003e linkedin;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cEmail\u003e secondaryEmail;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"    private Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"conradsoon"},"content":"    private Optional\u003cInteger\u003e id;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"lordidiot"},"content":"        birthday \u003d Optional.empty(); // No birthday by default","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"limjunxian1"},"content":"        linkedin \u003d Optional.empty(); // No linkedin by default","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmail \u003d Optional.empty(); // No secondaryEmail by default","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"limjunxian1"},"content":"        telegram \u003d Optional.empty(); // No telegram by default","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"conradsoon"},"content":"        id \u003d Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"lordidiot"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"limjunxian1"},"content":"        linkedin \u003d personToCopy.getLinkedin();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"limjunxian1"},"content":"        secondaryEmail \u003d personToCopy.getSecondaryEmail();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"limjunxian1"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"conradsoon"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"lordidiot"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"lordidiot"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"lordidiot"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"lordidiot"},"content":"    public PersonBuilder withBirthday(MonthDay birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"lordidiot"},"content":"        this.birthday \u003d Optional.of(new Birthday(birthday));","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"lordidiot"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"lordidiot"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"lordidiot"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"limjunxian1"},"content":"     * Sets the {@code Linkedin} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"limjunxian1"},"content":"    public PersonBuilder withLinkedin(String linkedin) {","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"limjunxian1"},"content":"        this.linkedin \u003d Optional.of(new Linkedin(linkedin));","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"limjunxian1"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"limjunxian1"},"content":"     * Sets the {@code Secondary Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"limjunxian1"},"content":"    public PersonBuilder withSecondaryEmail(String secondaryEmail) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"limjunxian1"},"content":"        this.secondaryEmail \u003d Optional.of(new Email(secondaryEmail));","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"limjunxian1"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"limjunxian1"},"content":"     * Sets the {@code Secondary Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"limjunxian1"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"limjunxian1"},"content":"        this.telegram \u003d Optional.of(new Telegram(telegram));","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"limjunxian1"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"limjunxian1"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"limjunxian1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"conradsoon"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"conradsoon"},"content":"     * Sets the {@code ID} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"conradsoon"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"conradsoon"},"content":"    public PersonBuilder withId(int id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"conradsoon"},"content":"        this.id \u003d Optional.of(id);","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"conradsoon"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"conradsoon"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"conradsoon"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"limjunxian1"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"limjunxian1"},"content":"     * Builds a {@code Person}.","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"limjunxian1"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":157,"author":{"gitId":"conradsoon"},"content":"        return new Person(name, phone, email, address, birthday, linkedin, secondaryEmail, telegram, tags, id);","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"limjunxian1":39,"conradsoon":12,"lordidiot":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"lordidiot"},"content":"import java.time.MonthDay;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"lordidiot"},"content":"            .withBirthday(MonthDay.of(10, 10))","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"limjunxian1"},"content":"            .withLinkedin(\"bensonmeier\")","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"limjunxian1"},"content":"            .withSecondaryEmail(\"ben10@gmail.com\")","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"limjunxian1"},"content":"            .withTelegram(\"@benson\")","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"conradsoon"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"conradsoon"},"content":"            .withId(1)","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"conradsoon"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"limjunxian1":3,"conradsoon":3,"lordidiot":2,"-":75}}]

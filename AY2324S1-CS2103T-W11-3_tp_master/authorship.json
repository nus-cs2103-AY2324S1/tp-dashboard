[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W11-3/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"# BandConnect++","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"Need a place to store information on the musicians you have worked with?","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"If so, then BandConnect++ is what you need!","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"BandConnect++ is an address book that allows you to keep track of fellow musicians you would like to work with.","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"Here\u0027s why you should use BandConnect++:","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"* Easy to navigate","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"* Simple commands","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"* Remote application (Does not require internet connection)","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"[//]: # (## Getting Started)","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":"[//]: # (How to set up project)","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"[//]: # ()","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"[//]: # (### Prerequisites)","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"[//]: # ()","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"[//]: # (### Installation)","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"## Features","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"- [ ] Add a musician","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"- [ ] Tag a musician to a genre","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"- [ ] Tag a musician to an instrument","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"- [ ] View all contacts","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"- [ ] Find a specific musician","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"- [ ] Remove a musician","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"## Roadmap","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"- [ ] v1.1: Get ready for iterations","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"- [ ] v1.2: Implementation part 1","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"- [ ] v1.3: Implementation part 2","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"- [ ] v1.4: Bug-fixing","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"[//]: # (## Contributions)","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"## Acknowledgements","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"DeltonCheng":44,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"shuyangk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"shuyangk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"shuyangk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"shuyangk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac-aarch64\u0027","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wanghejin":4,"shuyangk":4,"-":68}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"### Delton Cheng","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"\u003cimg src\u003d\"images/deltoncheng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"[[github](https://github.com/DeltonCheng)]","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"[[portfolio](team/deltoncheng.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"* Role: Developer","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":"* Responsibilities: Deliverables, Deadline and Documentation","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"shuyangk"},"content":"### Shu Yang","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"shuyangk"},"content":"\u003cimg src\u003d\"images/shuyangk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"shuyangk"},"content":"[[github](http://github.com/shuyangk)]","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"shuyangk"},"content":"[[portfolio](team/shuyangk.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"shuyangk"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"shuyangk"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"### Tan Yiming","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"\u003cimg src\u003d\"images/tanyyyming.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"[[github](http://github.com/tanyyming)] ","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"* Responsibilities: Scheduling and Tracking + Code Quality","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"### Wang Hejin","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"\u003cimg src\u003d\"images/wanghejin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"[[github](http://github.com/wanghejin)]","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"[[portfolio](team/wanghejin.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"### Tan Yang Yi","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"\u003cimg src\u003d\"images/yytan25.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"[[github](http://github.com/yytan25)]","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"[[portfolio](team/yytan25.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"* Responsibilities: UI, Scheduling and Tracking","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"DeltonCheng":6,"tanyyyming":5,"wanghejin":5,"shuyangk":6,"yytan25":5,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"* [SE-EDU Address-Book Level 3](https://github.com/se-edu/addressbook-level3)","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a musician).","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"tanyyyming"},"content":"### Tagging a Musician Feature","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"tanyyyming"},"content":"#### Types of Tags","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"tanyyyming"},"content":"There are three types of tags: ","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"tanyyyming"},"content":"* the general tag which denotes anything noteworthy about a specific musician;","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"tanyyyming"},"content":"* the `instrument` tag which denotes what instrument the musician specialises in;","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"tanyyyming"},"content":"* the `genre` tag which denotes what genre the musician specialises in.","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"shuyangk"},"content":"There are no input restriction on the general tag, but there are input validation for `instrument` and `genre` tags against a pre-defined fixed set of values to prevent typo and irrelevant information to be keyed in mistakenly.","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"shuyangk"},"content":"The three types of tags are implemented in a class hierarchy as shown below. The `instrument` and `genre` tags are the subclasses of the general `tag` class. They all have a single attribute called `tagName`, which denotes the content of the tag. However, they have different static methods for checking the validity of the inputs. While `isValidTag(String)` allows any alphanumeric characters, `isValidInstrument(String)` and `isValidGenre(String)` checks for the semantics (against a comprehensive list of instruments/genres) to prevent any input that does not make sense or has typos.","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"tanyyyming"},"content":"### Filtering Musicians by Name and Tags Feature","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"tanyyyming"},"content":"To be Added.","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"shuyangk"},"content":"### Add Band Feature ","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"shuyangk"},"content":"The user can add a new Band entity to the storage through the `addb` Command.","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"shuyangk"},"content":"Command: `addb n/BANDNAME`","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"shuyangk"},"content":"#### Behaviour","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"shuyangk"},"content":"* **Success Scenario:**","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"shuyangk"},"content":"    1. A success message is returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"shuyangk"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows the updated list of bands after the specified band has been added.","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"shuyangk"},"content":"* **Failed Scenario (when band already exists in storage):**","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"shuyangk"},"content":"    1. An error message is returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"shuyangk"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows all bands.","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"shuyangk"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"shuyangk"},"content":"Within the execute method of the command, a check is done to ensure that the model does not currently contain the band","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"shuyangk"},"content":"to be added. This is achieved through the use of `Model#hasBand(Band)` method.","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"DeltonCheng"},"content":"### Add Musician To Band Feature","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"DeltonCheng"},"content":"The user can add a Musician to a Band through the `addm` Command.","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"DeltonCheng"},"content":"Command: `addm bin/[BAND_INDEX] min/[MUSICIAN_INDEX]`","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"DeltonCheng"},"content":"### Behaviour","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"DeltonCheng"},"content":"* **Success Scenario:**","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"DeltonCheng"},"content":"    1. A success message is returned.","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"DeltonCheng"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows all bands.","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"DeltonCheng"},"content":"* **Failed Scenario (when band index/musician index is invalid):**","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"DeltonCheng"},"content":"    1. An error message is returned.","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"DeltonCheng"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows all bands.","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"DeltonCheng"},"content":"* **Failed Scenario (when adding a musician that is already in the band):**","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"DeltonCheng"},"content":"    1. An error message is returned.","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"DeltonCheng"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows all bands.","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"DeltonCheng"},"content":"#### Implementation","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"DeltonCheng"},"content":"Within the execute method of the command, a check is done to ensure that the index specified is not equal to or greater","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"DeltonCheng"},"content":"than the size of the list containing all Bands.","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"DeltonCheng"},"content":"Another check is done to ensure that the musicians is not already in the band.","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"shuyangk"},"content":"### Delete Band Feature","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"DeltonCheng"},"content":"The user can remove a Band from the storage through the `deleteb` Command.","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"shuyangk"},"content":"Command: `deleteb [INDEX]`","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"shuyangk"},"content":"#### Behaviour","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"shuyangk"},"content":"* **Success Scenario:**","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"shuyangk"},"content":"    1. A success message is returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"shuyangk"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows the updated list of bands after the specified band has been deleted. ","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"shuyangk"},"content":"* **Failed Scenario (when band index is invalid):**","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"shuyangk"},"content":"    1. An error message is returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"shuyangk"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows all bands.","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"shuyangk"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"shuyangk"},"content":"Within the execute method of the command, a check is done to ensure that the index specified is not equal to or greater ","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"shuyangk"},"content":"than the size of the list containing all Bands.","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"wanghejin"},"content":"### Find Band Members Feature","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"wanghejin"},"content":"**Command**:`findb [BANDNAME]`","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"wanghejin"},"content":"This feature lists all the musicians in band with name of `BANDNAME`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"wanghejin"},"content":"#### Behaviour","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"wanghejin"},"content":"* **Success Scenario:**","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"wanghejin"},"content":"  1. A success message is returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"wanghejin"},"content":"  2. In the musician panel, it shows every musician who is a member of the band. In the band panel, it shows only this particular band.","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"wanghejin"},"content":"* **Failed Scenario (when band name is invalid):** ","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"wanghejin"},"content":"    1. An error message is returned.","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"wanghejin"},"content":"    2. In the musician panel, it shows all musicians. In the band panel, it shows all bands.","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"wanghejin"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"wanghejin"},"content":"Find band members through a band name is achieved via `ModelManager.updateFilteredBandMusicianList(Predicate\u003cBand\u003e)` method.","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"wanghejin"},"content":"Step 1: It takes in a `BandNameContainsKeywordPredicate` as argument and updates the filtered band based on this predicate. ","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"wanghejin"},"content":"Step 2: If the band name is valid, the filtered band list is guaranteed to contain only the correct (one) band. Next, it updates the musician list based on `MusicianInBandPredicate` and successfully returns all musicians in that band.","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"wanghejin"},"content":"Step 3: If the band name is not valid (There is no band with such a name), a `MESSAGE_UNKNOWN_BAND` error message will be throw as a command exception.","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"wanghejin"},"content":"#### Rationale ","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"wanghejin"},"content":"1. **Rationale for abstracting a method for updating band and musician list simultaneously:**","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"wanghejin"},"content":"    While it is possible to use existing methods `updateFilteredBandList` followed by `updateFilteredMusicianList` to compose the same logic, abstracting it out makes it obvious that filtering musicians is based on the results from filtering bands, which is a main mechanism the feature relies on. If the alternative is used and a person accidentally inserts any statements that modifies the filtered band list in between the two methods,  this feature will break.","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"wanghejin"},"content":"2. **Rationale for the error condition:**","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"wanghejin"},"content":"    ","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"wanghejin"},"content":"   Our current error condition:","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"wanghejin"},"content":"   ","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"wanghejin"},"content":"    ~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"wanghejin"},"content":"   if (model.getFilteredBandList().size() \u003e 1 || !predicate.test(model.getFilteredBandList().get(0)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"wanghejin"},"content":"       // throw exception","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"wanghejin"},"content":"   }","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"wanghejin"},"content":"    ~~~","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"wanghejin"},"content":"   i. If the band is valid and exists, filtered band list is guaranteed to have only one band (because add a band enforce no band with the same name (case-insensitive) is allowed). Hence, If filtered band list size \u003e 1, the band name must be invalid, exception is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"wanghejin"},"content":"   ii. If filtered band list size \u003d\u003d 1 but the band obtained does not pass the predicate (in the possible scenario of user only stored 1 band), it means that the band name is invalid and does not correspond to the current band, exception is thrown.","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"wanghejin"},"content":"Step 2. The user executes `delete 5` command to delete the 5th musician in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-10-10"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"wanghejin"},"content":"Step 3. The user executes `add n/David …​` to add a new musician. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-10"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"wanghejin"},"content":"Step 4. The user now decides that adding the musician was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-10"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"wanghejin"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the musician being deleted).","lastModifiedDate":"2023-10-10"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"shuyangk"},"content":"* has a need to manage a significant number of musician contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":381,"author":{"gitId":"shuyangk"},"content":"* has a need to categorise musicians by genre or instrument","lastModifiedDate":"2023-10-04"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":385,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"shuyangk"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app, tracking relevant information","lastModifiedDate":"2023-10-04"},{"lineNumber":388,"author":{"gitId":"shuyangk"},"content":"about musicians to potentially work with","lastModifiedDate":"2023-10-04"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"| Priority | As a …​                                          | I want to …​                                     | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"shuyangk"},"content":"|--------|--------------------------------------------------|--------------------------------------------------|--------------------------------------------------------------------------|","lastModifiedDate":"2023-10-19"},{"lineNumber":397,"author":{"gitId":"shuyangk"},"content":"| `* * *` | producer                                         | see usage instructions                           | refer to instructions when I forget how to use the App                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":398,"author":{"gitId":"wanghejin"},"content":"| `* * *` | producer                                         | add a new musician                               | contact them to form a band                                              |","lastModifiedDate":"2023-10-10"},{"lineNumber":399,"author":{"gitId":"shuyangk"},"content":"| `* * *` | producer                                         | delete a record for one musician                 | remove entries that I no longer need                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":400,"author":{"gitId":"wanghejin"},"content":"| `* * *` | producer                                         | find a musician by name                          | locate details of musicians without having to go through the entire list |","lastModifiedDate":"2023-10-10"},{"lineNumber":401,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | tag a musician with an instrument they play      | understand their potential role in a band                                |","lastModifiedDate":"2023-10-19"},{"lineNumber":402,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | create a band                                    |                                                                          |","lastModifiedDate":"2023-10-19"},{"lineNumber":403,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | add a musician to a band                         | group musicians together                                                 |","lastModifiedDate":"2023-10-19"},{"lineNumber":404,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | view the members of a specific band              | keep track of the band members in each band                              |","lastModifiedDate":"2023-10-19"},{"lineNumber":405,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | delete a band                                    |                                                                          |","lastModifiedDate":"2023-10-19"},{"lineNumber":406,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | tag a musician with the genre they specialise in | find musicians suiting the song I am making                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":407,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | edit a record for a musician                     | modify or update the information for a musician                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":408,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | view all records of musicians I have stored      | easily see all the information I have                                    |","lastModifiedDate":"2023-10-04"},{"lineNumber":409,"author":{"gitId":"shuyangk"},"content":"| `* *`  | producer                                         | hide private contact details                     | minimize chance of someone else seeing them by accident                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":410,"author":{"gitId":"shuyangk"},"content":"| `*`    | producer                                         | tag a band with the genre it specialises in      | find the band suited to performing the song I wish                       |","lastModifiedDate":"2023-10-19"},{"lineNumber":411,"author":{"gitId":"shuyangk"},"content":"| `*`    | producer who has worked with a musician before   | give a musician a rating                         | keep track of my past experience with them                               |","lastModifiedDate":"2023-10-19"},{"lineNumber":412,"author":{"gitId":"shuyangk"},"content":"| `*`    | producer who has worked with a musician before   | give a musician a rating                         | keep track of my past experience with them                               |","lastModifiedDate":"2023-10-19"},{"lineNumber":413,"author":{"gitId":"shuyangk"},"content":"| `*`    | producer who is actively producing music         | check the availability of a musician             | avoid musicians with clashing schedules                                  |","lastModifiedDate":"2023-10-19"},{"lineNumber":414,"author":{"gitId":"wanghejin"},"content":"| `*`    | producer with many musicians in the address book | sort musicians by name                           | locate a musician easily                                                 |","lastModifiedDate":"2023-10-10"},{"lineNumber":415,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"shuyangk"},"content":"(For all use cases below, the **System** is `BandConnect++` and the **Actor** is the `producer`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"wanghejin"},"content":"**Use case: UC01 - Add a musician**","lastModifiedDate":"2023-10-06"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":425,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":427,"author":{"gitId":"wanghejin"},"content":"1. User enters the musician details","lastModifiedDate":"2023-10-06"},{"lineNumber":428,"author":{"gitId":"wanghejin"},"content":"2. User requests to create a new contact for this musician","lastModifiedDate":"2023-10-06"},{"lineNumber":429,"author":{"gitId":"wanghejin"},"content":"3. System creates and stores the new contact","lastModifiedDate":"2023-10-06"},{"lineNumber":430,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":431,"author":{"gitId":"wanghejin"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":432,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":433,"author":{"gitId":"wanghejin"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":434,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":435,"author":{"gitId":"wanghejin"},"content":"* 2a. This musician is already stored in the system","lastModifiedDate":"2023-10-10"},{"lineNumber":436,"author":{"gitId":"wanghejin"},"content":"* 2a1. System shows a message showing that the contact is already stored.","lastModifiedDate":"2023-10-06"},{"lineNumber":437,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":438,"author":{"gitId":"wanghejin"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":439,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":440,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":441,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":442,"author":{"gitId":"wanghejin"},"content":"**Use case: UC03 - Delete a musician**","lastModifiedDate":"2023-10-06"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"shuyangk"},"content":"1.  User requests to list musicians","lastModifiedDate":"2023-10-04"},{"lineNumber":447,"author":{"gitId":"shuyangk"},"content":"2.  BandConnect++ shows a list of musicians","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"shuyangk"},"content":"3.  User requests to delete a specific musician in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":449,"author":{"gitId":"wanghejin"},"content":"4.  BandConnect++ deletes the musician","lastModifiedDate":"2023-10-10"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"shuyangk"},"content":"    * 3a1. BandConnect++ shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":462,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":463,"author":{"gitId":"shuyangk"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":464,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"shuyangk"},"content":"**Use case: UC04 - Tag a musician with the instrument they play**","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"shuyangk"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":468,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":469,"author":{"gitId":"shuyangk"},"content":"1.  User requests to list musicians","lastModifiedDate":"2023-10-04"},{"lineNumber":470,"author":{"gitId":"shuyangk"},"content":"2.  BandConnect++ shows a list of musicians","lastModifiedDate":"2023-10-05"},{"lineNumber":471,"author":{"gitId":"shuyangk"},"content":"3.  User tags a specific musician with the instrument they play","lastModifiedDate":"2023-10-04"},{"lineNumber":472,"author":{"gitId":"shuyangk"},"content":"4.  BandConnect++ tags the musician appropriately","lastModifiedDate":"2023-10-05"},{"lineNumber":473,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":474,"author":{"gitId":"shuyangk"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":475,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"shuyangk"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"shuyangk"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":480,"author":{"gitId":"shuyangk"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":481,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":482,"author":{"gitId":"shuyangk"},"content":"* 3a. BandConnect++ detects an error in the entered data.","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":484,"author":{"gitId":"shuyangk"},"content":"    * 3a1. BandConnect++ shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":489,"author":{"gitId":"tanyyyming"},"content":"**Use case: UC05 - Tag a musician with the genre(s) he/she specialises in**","lastModifiedDate":"2023-10-06"},{"lineNumber":490,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":491,"author":{"gitId":"tanyyyming"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":492,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":493,"author":{"gitId":"tanyyyming"},"content":"1.  User requests to list musicians","lastModifiedDate":"2023-10-06"},{"lineNumber":494,"author":{"gitId":"tanyyyming"},"content":"2.  BandConnect++ shows a list of musicians","lastModifiedDate":"2023-10-06"},{"lineNumber":495,"author":{"gitId":"tanyyyming"},"content":"3.  User tags a specific musician with one or more genres","lastModifiedDate":"2023-10-06"},{"lineNumber":496,"author":{"gitId":"tanyyyming"},"content":"4.  BandConnect++ tags the musician appropriately","lastModifiedDate":"2023-10-06"},{"lineNumber":497,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":498,"author":{"gitId":"tanyyyming"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":499,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":500,"author":{"gitId":"tanyyyming"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":501,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":502,"author":{"gitId":"tanyyyming"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":503,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":504,"author":{"gitId":"tanyyyming"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":505,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":506,"author":{"gitId":"tanyyyming"},"content":"* 3a. BandConnect++ detects an empty genre tag or no genre tag.","lastModifiedDate":"2023-10-06"},{"lineNumber":507,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":508,"author":{"gitId":"tanyyyming"},"content":"    * 3a1. BandConnect++ shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":512,"author":{"gitId":"tanyyyming"},"content":"**Use case: UC06 - Find a musician based on their name**","lastModifiedDate":"2023-10-06"},{"lineNumber":513,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":514,"author":{"gitId":"DeltonCheng"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":515,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":516,"author":{"gitId":"DeltonCheng"},"content":"1.  User requests to find a musician with a keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":517,"author":{"gitId":"DeltonCheng"},"content":"2.  BandConnect++ shows a list of musicians that matches the keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":518,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":519,"author":{"gitId":"DeltonCheng"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":520,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":521,"author":{"gitId":"DeltonCheng"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":522,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":523,"author":{"gitId":"DeltonCheng"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":524,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":525,"author":{"gitId":"DeltonCheng"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":526,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":527,"author":{"gitId":"shuyangk"},"content":"**Use case: UC07 - Create a band**","lastModifiedDate":"2023-10-19"},{"lineNumber":528,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":529,"author":{"gitId":"shuyangk"},"content":"**MSS**","lastModifiedDate":"2023-10-19"},{"lineNumber":530,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":531,"author":{"gitId":"shuyangk"},"content":"1. User enters the band details","lastModifiedDate":"2023-10-19"},{"lineNumber":532,"author":{"gitId":"shuyangk"},"content":"2. User requests to create a new band with the specified name","lastModifiedDate":"2023-10-19"},{"lineNumber":533,"author":{"gitId":"shuyangk"},"content":"3. System creates and stores the new band","lastModifiedDate":"2023-10-19"},{"lineNumber":534,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":535,"author":{"gitId":"shuyangk"},"content":"   Use case ends.","lastModifiedDate":"2023-10-19"},{"lineNumber":536,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":537,"author":{"gitId":"shuyangk"},"content":"**Extensions**","lastModifiedDate":"2023-10-19"},{"lineNumber":538,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":539,"author":{"gitId":"shuyangk"},"content":"* 2a. This band is already stored in the system","lastModifiedDate":"2023-10-19"},{"lineNumber":540,"author":{"gitId":"shuyangk"},"content":"* 2a1. System shows a message showing that the contact is already stored.","lastModifiedDate":"2023-10-19"},{"lineNumber":541,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":542,"author":{"gitId":"shuyangk"},"content":"* 2b. User enters input wrongly","lastModifiedDate":"2023-10-19"},{"lineNumber":543,"author":{"gitId":"shuyangk"},"content":"* 2b1. System shows a message showing the proper input format.","lastModifiedDate":"2023-10-19"},{"lineNumber":544,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":545,"author":{"gitId":"shuyangk"},"content":"  Use case ends.","lastModifiedDate":"2023-10-19"},{"lineNumber":546,"author":{"gitId":"shuyangk"},"content":"  ","lastModifiedDate":"2023-10-19"},{"lineNumber":547,"author":{"gitId":"shuyangk"},"content":"**Use case: UC08 - Add a musician to a band**","lastModifiedDate":"2023-10-19"},{"lineNumber":548,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":549,"author":{"gitId":"shuyangk"},"content":"**MSS**","lastModifiedDate":"2023-10-19"},{"lineNumber":550,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":551,"author":{"gitId":"shuyangk"},"content":"1. User enters the band details and musician details","lastModifiedDate":"2023-10-19"},{"lineNumber":552,"author":{"gitId":"shuyangk"},"content":"2. User requests to add the specified musician to the band","lastModifiedDate":"2023-10-19"},{"lineNumber":553,"author":{"gitId":"shuyangk"},"content":"3. BandConnect++ adds the musician to the band","lastModifiedDate":"2023-10-19"},{"lineNumber":554,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":555,"author":{"gitId":"shuyangk"},"content":"   Use case ends.","lastModifiedDate":"2023-10-19"},{"lineNumber":556,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":557,"author":{"gitId":"shuyangk"},"content":"**Extensions**","lastModifiedDate":"2023-10-19"},{"lineNumber":558,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":559,"author":{"gitId":"shuyangk"},"content":"* 2a. The musician specified is already part of the band specified","lastModifiedDate":"2023-10-19"},{"lineNumber":560,"author":{"gitId":"shuyangk"},"content":"* 2a1. System shows a message showing that the musician is already part of the band.","lastModifiedDate":"2023-10-19"},{"lineNumber":561,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":562,"author":{"gitId":"shuyangk"},"content":"* 2b. User enters input wrongly","lastModifiedDate":"2023-10-19"},{"lineNumber":563,"author":{"gitId":"shuyangk"},"content":"* 2b1. System shows a message showing the proper input format.","lastModifiedDate":"2023-10-19"},{"lineNumber":564,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":565,"author":{"gitId":"shuyangk"},"content":"  Use case ends.","lastModifiedDate":"2023-10-19"},{"lineNumber":566,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":567,"author":{"gitId":"shuyangk"},"content":"**Use case: UC09 - Delete band**","lastModifiedDate":"2023-10-27"},{"lineNumber":568,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":569,"author":{"gitId":"shuyangk"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":570,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":571,"author":{"gitId":"shuyangk"},"content":"1. User enters the band details they want to delete.","lastModifiedDate":"2023-10-27"},{"lineNumber":572,"author":{"gitId":"shuyangk"},"content":"2. User requests to delete band.","lastModifiedDate":"2023-10-27"},{"lineNumber":573,"author":{"gitId":"shuyangk"},"content":"3. BandConnect++ deletes the band.","lastModifiedDate":"2023-10-27"},{"lineNumber":574,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":575,"author":{"gitId":"shuyangk"},"content":"   Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":576,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":577,"author":{"gitId":"shuyangk"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":578,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":579,"author":{"gitId":"shuyangk"},"content":"* 2a. User enters input wrongly","lastModifiedDate":"2023-10-27"},{"lineNumber":580,"author":{"gitId":"shuyangk"},"content":"* 2a1. System shows a message showing the proper input format.","lastModifiedDate":"2023-10-27"},{"lineNumber":581,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":582,"author":{"gitId":"shuyangk"},"content":"  Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":583,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":584,"author":{"gitId":"shuyangk"},"content":"**Use case: UC10 - View all musicians inside a band**","lastModifiedDate":"2023-10-27"},{"lineNumber":585,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":586,"author":{"gitId":"shuyangk"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":587,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":588,"author":{"gitId":"shuyangk"},"content":"1. User enters the band details they want to view the members of.","lastModifiedDate":"2023-10-27"},{"lineNumber":589,"author":{"gitId":"shuyangk"},"content":"2. User requests view musicians inside the band.","lastModifiedDate":"2023-10-27"},{"lineNumber":590,"author":{"gitId":"shuyangk"},"content":"3. BandConnect++ shows the musicians inside the specified band.","lastModifiedDate":"2023-10-27"},{"lineNumber":591,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":592,"author":{"gitId":"shuyangk"},"content":"   Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":593,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":594,"author":{"gitId":"shuyangk"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":595,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":596,"author":{"gitId":"shuyangk"},"content":"* 2a. User enters input wrongly","lastModifiedDate":"2023-10-27"},{"lineNumber":597,"author":{"gitId":"shuyangk"},"content":"* 2a1. System shows a message showing the proper input format.","lastModifiedDate":"2023-10-27"},{"lineNumber":598,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":599,"author":{"gitId":"shuyangk"},"content":"  Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":600,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":601,"author":{"gitId":"yytan25"},"content":"**Use case: UC11 - Remove a musician from a band**","lastModifiedDate":"2023-10-27"},{"lineNumber":602,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":603,"author":{"gitId":"yytan25"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":604,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":605,"author":{"gitId":"yytan25"},"content":"1. User enters the band details and musician details.","lastModifiedDate":"2023-10-27"},{"lineNumber":606,"author":{"gitId":"yytan25"},"content":"2. User requests to remove the musician from the band.","lastModifiedDate":"2023-10-27"},{"lineNumber":607,"author":{"gitId":"yytan25"},"content":"3. BandConnect++ removes the musician from the band.","lastModifiedDate":"2023-10-27"},{"lineNumber":608,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":609,"author":{"gitId":"yytan25"},"content":"   Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":610,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":611,"author":{"gitId":"yytan25"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":612,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":613,"author":{"gitId":"yytan25"},"content":"* 2a. User enters input wrongly","lastModifiedDate":"2023-10-27"},{"lineNumber":614,"author":{"gitId":"yytan25"},"content":"* 2a1. System shows a message showing the proper input format.","lastModifiedDate":"2023-10-27"},{"lineNumber":615,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":616,"author":{"gitId":"yytan25"},"content":"  Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":617,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":618,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"wanghejin"},"content":"1.  Should be able to hold up to 1000 musician contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-06"},{"lineNumber":624,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"wanghejin"},"content":"4. The GUI should be intuitive enough for musicians who are not IT-savvy.","lastModifiedDate":"2023-10-06"},{"lineNumber":626,"author":{"gitId":"wanghejin"},"content":"5. The response to any use action should become visible within 5 seconds.","lastModifiedDate":"2023-10-06"},{"lineNumber":627,"author":{"gitId":"wanghejin"},"content":"6. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-10-06"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"shuyangk"},"content":"* **Genre**: Genre of music, including but not limited to: Jazz, Classical, Rock","lastModifiedDate":"2023-10-04"},{"lineNumber":633,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"wanghejin"},"content":"### Deleting a musician","lastModifiedDate":"2023-10-10"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"wanghejin"},"content":"1. Deleting a musician while all musicians are being shown","lastModifiedDate":"2023-10-10"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"wanghejin"},"content":"    1. Prerequisites: List all musicians using the `list` command. Multiple musicians in the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"wanghejin"},"content":"       Expected: No musician is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-10"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanyyyming":36,"DeltonCheng":40,"wanghejin":78,"shuyangk":163,"yytan25":16,"-":353}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"# BandConnect++ User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"BandConnect++ is a powerful desktop app that helps musicians manage contact with other musicians to easily form a band. You can use it to manage musician contacts, select band members, and form a band of your preference, all within a few clicks or a few seconds of typing!","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"## About this guide","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"Welcome to the *BandConnect++ User Guide*! This user guide provides an in-depth documentation on everything about *BandConnect++*, including installation, set up, features, common FAQ and troubleshooting recommendations. ","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"For first-time users, please go to the [Quick start](#quick-start) section below to start an end-to-end tutorial that gets you onboard. Should you encounter any difficulty understanding the terminology, don\u0027t forget to refer to the [Glossary](#glossary)!","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"### Table of Contents","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"* [Features](#features)","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"* [Troubleshooting](#troubleshooting)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"## Glossary","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"To be added.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"To be added.","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"### Formatting Convention","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"### Adding a musician contact: `add`","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"Adds a musician to the contact book. Name, phone number, email, and instrument can be recorded.","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"**Format:** `add n/NAME p/PHONE_NUMBER e/EMAIL i/INSTRUMENT`","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"**Examples:**","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com i/Violin`","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"* `add n/Betsy Crowe e/pianistbetsy@smtp.com p/87988039 i/Piano`","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"**Upon success:**","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"You will see a message indicating successful addition of the musician like below:","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"![img.png](images/addJohnDoe.png)","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"**Upon failure:**","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"Should you input a musician which is already in your contact book (ie. have the same phone number or email as an existing contact),","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"you will see an error message showing the possible error. Please input a different phone/email for the current contact or modify the original contact\u0027s relevant details.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"### Removing a musician contact: `remove`","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"yytan25"},"content":"Removes a musician contact from the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"**Format:** `remove INDEX`","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"**Examples:**","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"yytan25"},"content":"* `remove 1`","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"**Upon success:**","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"You will see a message indicating successful removal of the musician contact like below:","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"[insert image]","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"**Upon failure:**","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"yytan25"},"content":"Should you input an index greater than the number of musicians in your address book (e.g. `remove 6` in an address book","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"yytan25"},"content":"containing 5 musicians), or input a non-positive index (e.g. `remove 0` or `remove -1`), you will see a message like below.","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"[insert image]","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"yytan25"},"content":"Please verify that the index is correct and try again.","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"yytan25"},"content":"### Tagging a musician with instruments: `tag instrument`","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"yytan25"},"content":"Tags a musician with one or more instruments he/she is proficient in.","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"yytan25"},"content":"**Format:** `tag instrument INDEX i/INSTRUMENT…`","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"yytan25"},"content":"**Constraints:**","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"yytan25"},"content":"* `INDEX` must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"yytan25"},"content":"* The instrument tag must be *non-empty*.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"yytan25"},"content":"* You have to supply *at least one instrument tag* to the musician you are tagging.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"yytan25"},"content":"**Examples:**","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"yytan25"},"content":"* `tag instrument 1 i/Piano i/Violin`","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"yytan25"},"content":"* `tag instrument 2 i/Drums`","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"yytan25"},"content":"**Upon success:**","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"yytan25"},"content":"You will see a message indicating successful addition of instruments like below:","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"yytan25"},"content":"[insert image]","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"yytan25"},"content":"**Upon failure:**","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"yytan25"},"content":"Should you try to tag a musician with zero instrument tags or empty tags, i.e., `tag instrument 1 i/` or","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"yytan25"},"content":"`tag instrument 1`, you will see a message like below:","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"yytan25"},"content":"[insert image]","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"yytan25"},"content":"### Tagging a musician with genres: `tag genre`","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"yytan25"},"content":"Tags a musician with one or more genres he/she is proficient in.","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"yytan25"},"content":"**Format:** `tag genre INDEX g/GENRE…`","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"tanyyyming"},"content":"**Constraints:**","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"tanyyyming"},"content":"* `INDEX` must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"tanyyyming"},"content":"* The genre tag must be *non-empty*.","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"tanyyyming"},"content":"* You have to supply *at least one genre tag* to the musician you are tagging.","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"yytan25"},"content":"**Examples:**","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"yytan25"},"content":"* `tag genre 1 g/rock g/pop`","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"yytan25"},"content":"* `tag genre 2 g/jazz`","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"yytan25"},"content":"**Upon success:**","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"yytan25"},"content":"You will see a message indicating successful addition of tags like below:","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"yytan25"},"content":"[insert image]","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"yytan25"},"content":"**Upon failure:**","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"yytan25"},"content":"Should you try to tag a musician with zero genre tags or empty tags, i.e., `tag genre 1 g/` or `tag genre 1`,","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"yytan25"},"content":"you will see a message like below:","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"yytan25"},"content":"[insert image]","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"yytan25"},"content":"### Locating musicians by name: `find`","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"yytan25"},"content":"Finds all musicians whose names contain any of the given keywords.","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"yytan25"},"content":"**Format:** `find KEYWORD`","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"yytan25"},"content":"**Upon success:**","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"yytan25"},"content":"You will see a list of musicians as follows:","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"yytan25"},"content":"[insert image]","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"yytan25"},"content":"**Upon failure:**","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"yytan25"},"content":"Should you input `find` without any keyword, you will see a message like below:","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"yytan25"},"content":"[insert image]","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"shuyangk"},"content":"### Creating a band: `addb`","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"shuyangk"},"content":"Creates a band with the specified band name.","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"shuyangk"},"content":"**Format:** `addb n/BANDNAME`","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"shuyangk"},"content":"* `addb n/My Garage Band`","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"shuyangk"},"content":"**Upon success:**","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"shuyangk"},"content":"You will see a message indicating successful addition of the band like below:","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"shuyangk"},"content":"[insert image]","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"shuyangk"},"content":"**Upon failure:**","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"shuyangk"},"content":"Should you input a band which is already in your contact book (ie. have the same name as an ","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"shuyangk"},"content":"existing band), you will see an error message showing the possible error. Please input a different name for the new ","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"shuyangk"},"content":"band or change the name of the existing band.","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"shuyangk"},"content":"[insert image]","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"shuyangk"},"content":"### Adding a musician to a band: `addm`","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"shuyangk"},"content":"Adds a musician to a specified band.","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"shuyangk"},"content":"**Format:** `addm bin/BANDINDEX min/MUSICIANINDEX`","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"shuyangk"},"content":"Examples:","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"shuyangk"},"content":"* `addm bin/1 min/2` adds the second musician in the contact list to the first band in the list of bands.","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"shuyangk"},"content":"**Upon success:**","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"shuyangk"},"content":"You will see a message indicating successful addition of the musician into the band like below:","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"shuyangk"},"content":"[insert image]","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"shuyangk"},"content":"**Upon failure:**","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"shuyangk"},"content":"Should you input an index that does not exist, you will see an error message showing the possible error. ","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"shuyangk"},"content":"Please input a different index as pointed out by the error message.","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"shuyangk"},"content":"[insert image]","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"yytan25"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"yytan25"},"content":"Exits the program.","lastModifiedDate":"2023-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"yytan25"},"content":"Format: `exit`","lastModifiedDate":"2023-10-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":198,"author":{"gitId":"yytan25"},"content":"### Saving the data","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"yytan25"},"content":"BandConnect++ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"wanghejin"},"content":"## Troubleshooting","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"yytan25"},"content":"[to be added soon]","lastModifiedDate":"2023-10-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":214,"author":{"gitId":"yytan25"},"content":"| Action             | Format, Examples                                                                                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"yytan25"},"content":"|--------------------|----------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-06"},{"lineNumber":216,"author":{"gitId":"yytan25"},"content":"| **Add**            | `add n/NAME p/PHONE_NUMBER e/EMAIL i/INSTRUMENT`\u003cbr\u003e e.g., `add n/John Doe p/98928479 e/johndpiano@xmail.com i/Piano` |","lastModifiedDate":"2023-10-06"},{"lineNumber":217,"author":{"gitId":"yytan25"},"content":"| **Remove**         | `remove INDEX`\u003cbr\u003e e.g., `remove 1`                                                                            |","lastModifiedDate":"2023-10-06"},{"lineNumber":218,"author":{"gitId":"yytan25"},"content":"| **Tag Instrument** | `tag instrument INDEX i/INSTRUMENT…​`\u003cbr\u003e e.g.,`tag instrument 1 i/piano i/guitar`                             |","lastModifiedDate":"2023-10-06"},{"lineNumber":219,"author":{"gitId":"yytan25"},"content":"| **Tag Genre**      | `tag genre INDEX g/GENRE…​`\u003cbr\u003e e.g., `tag genre 1 g/rock g/pop`                                               |","lastModifiedDate":"2023-10-06"},{"lineNumber":220,"author":{"gitId":"yytan25"},"content":"| **Find**           | `find KEYWORD`                                                                                                 |","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"tanyyyming":5,"wanghejin":32,"shuyangk":24,"yytan25":63,"-":96}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"ecp -\u003e ec ++: index, editMusicianDescriptor","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"wanghejin":1,"-":21}},{"path":"docs/team/deltoncheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"layout: page","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"title: Delton\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"### Project: BandConnect+","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"BandConnect+ is a desktop address book application used by musicians and producers to keep track of their contacts. ","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"DeltonCheng"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"* **New Feature**: TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"  * What it does: TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"  * Justification: TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"  * Highlights: TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"  * Credits: *TBA*","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddeltoncheng\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":"* **Project management**:","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"  * TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"  * TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"  * User Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"    * TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"    * TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"    * TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"* **Community**:","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"  * PRs reviewed (with non-trivial review comments): TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"  * Contributed to forum discussions (TBA)","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"* **Tools**:","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"  * TBA","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"  ","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"  ","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"DeltonCheng":41}},{"path":"docs/team/shuyangk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shuyangk"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"shuyangk"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"shuyangk"},"content":"title: Koh Shu Yang\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"shuyangk"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"shuyangk"},"content":"### Project: BandConnect+","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"shuyangk"},"content":"BandConnect+ is a desktop address book application used by musicians and producers to keep track of their contacts. ","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"shuyangk"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"shuyangk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"shuyangk"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"shuyangk"},"content":"  * What it does: To be added soon.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"shuyangk"},"content":"  * Justification: To be added soon.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"shuyangk"},"content":"  * Highlights: To be added soon.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"shuyangk"},"content":"  * Credits: *To be added soon.*","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"shuyangk"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dshuyangk\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"shuyangk"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"shuyangk"},"content":"  * To be added soon.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"shuyangk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"shuyangk"},"content":"  * To be added soon.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"shuyangk"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"shuyangk"},"content":"  * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"shuyangk"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"shuyangk"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"shuyangk"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"shuyangk"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"shuyangk"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"shuyangk"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#29](https://github.com/nus-cs2103-AY2324S1/ip/pull/29), [\\#52](https://github.com/nus-cs2103-AY2324S1/ip/pull/52)","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"shuyangk"},"content":"  * Contributed to forum discussions (To be added soon)","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"shuyangk"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"shuyangk"},"content":"  * To be added soon.","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"shuyangk"},"content":"  ","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"shuyangk"},"content":"  ","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"shuyangk":41}},{"path":"docs/team/tanyyyming.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"layout: page","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"title: Tan Yiming\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"### Project: BandConnect++","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"BandConnect++ is a desktop address book application that helps music producers contact with potential musicians to form a band to perform his or her music. It is optimised for CLI users so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"  * What it does: ","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"  * Justification: ","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"  * Credits:","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtanyyyming\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtanyyyming\u0026tabRepo\u003dAY2324S1-CS2103T-W11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"  * To be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"  * To be added soon (Pull requests [\\#9999](), [\\#9999]())","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"    * To be added soon [\\#9999]()","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"    * To be added soon [\\#9999]()","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#9999]()","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"tanyyyming":40}},{"path":"docs/team/wanghejin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"title: Wang Hejin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"### Project: BandConnect++","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"BandConnect++ helps musicians manage contact with other musicians to easily form a band of their preference. It is optimised for CLI users so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"  * What it does: ","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"  * Justification: ","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"  * Highlights: ","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"  * Credits: ","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/#/widget/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026chartGroupIndex\u003d76\u0026chartIndex\u003d4)","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"  * to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"  * to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"  * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    * to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    * to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"  * to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"  * to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"wanghejin":38}},{"path":"docs/team/yytan25.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"layout: page","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"title: Tan Yang Yi\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"### Project: BandConnect++","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"BandConnect++ helps musicians manage contact with other musicians to easily form a band of their preference. It is optimised for CLI users so that frequent tasks can be done faster by typing in commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"  * What it does:","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"  * Justification:","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"  * Highlights:","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"  * Credits:","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dyytan25\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"yytan25":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":" * Changes the remark of an existing musician in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"            + \": Edits the remark of the musician identified \"","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"            + \"by the index number used in the last musician listing. \"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"     * @param index of the musician in the filtered musician list to edit the remark","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"wanghejin"},"content":"     * @param remark of the musician to be updated to","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"wanghejin"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of musician data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the musician’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"wanghejin"},"content":"Create a new `Remark` in `seedu.address.model.musician`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"wanghejin"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"wanghejin"},"content":"public PersonCard(Person musician, int displayedIndex) {","lastModifiedDate":"2023-10-10"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"wanghejin"},"content":"    remark.setText(musician.getRemark().value);","lastModifiedDate":"2023-10-10"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"wanghejin"},"content":"        Person musicianToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":345,"author":{"gitId":"wanghejin"},"content":"        Person editedMusician \u003d new Person(","lastModifiedDate":"2023-10-10"},{"lineNumber":346,"author":{"gitId":"wanghejin"},"content":"                musicianToEdit.getName(), musicianToEdit.getPhone(), musicianToEdit.getEmail(),","lastModifiedDate":"2023-10-10"},{"lineNumber":347,"author":{"gitId":"wanghejin"},"content":"                musicianToEdit.getAddress(), remark, musicianToEdit.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"wanghejin"},"content":"        model.setPerson(musicianToEdit, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"wanghejin"},"content":"        return new CommandResult(generateSuccessMessage(editedMusician));","lastModifiedDate":"2023-10-10"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"wanghejin"},"content":"     * {@code musicianToEdit}.","lastModifiedDate":"2023-10-10"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"wanghejin"},"content":"    private String generateSuccessMessage(Person musicianToEdit) {","lastModifiedDate":"2023-10-10"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"wanghejin"},"content":"        return String.format(message, musicianToEdit);","lastModifiedDate":"2023-10-10"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"wanghejin":19,"-":380}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.musician.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"  \"musicians\": [ {","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wanghejin":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"wanghejin"},"content":"       Person musicianToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":193,"author":{"gitId":"wanghejin"},"content":"       Person editedMusician \u003d createEditedPerson(musicianToEdit, editMusicianDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":194,"author":{"gitId":"wanghejin"},"content":"       if (!musicianToEdit.isSamePerson(editedMusician) \u0026\u0026 model.hasPerson(editedMusician)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"wanghejin"},"content":"       model.setPerson(musicianToEdit, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"wanghejin"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedMusician));","lastModifiedDate":"2023-10-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"wanghejin"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the musician data.","lastModifiedDate":"2023-10-10"},{"lineNumber":205,"author":{"gitId":"wanghejin"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ musicians.\u003cbr\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":206,"author":{"gitId":"wanghejin"},"content":"     FYI, The \u0027filtered list\u0027 is the list of musicians resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the musicians so that the user can see the edited musician along with all other musicians. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":207,"author":{"gitId":"wanghejin"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of musicians is being tracked.","lastModifiedDate":"2023-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"wanghejin"},"content":"        musicians.addAll(","lastModifiedDate":"2023-10-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wanghejin":10,"-":291}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"    private static final double DEFAULT_HEIGHT \u003d 800;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"    private static final double DEFAULT_WIDTH \u003d 700;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wanghejin":2,"-":80}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    ObservableList\u003cMusician\u003e getFilteredMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"    /** Returns an unmodifiable view of the filtered list of bands */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    ObservableList\u003cBand\u003e getFilteredBandList();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wanghejin":5,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"    public ObservableList\u003cMusician\u003e getFilteredMusicianList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        return model.getFilteredMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"    public ObservableList\u003cBand\u003e getFilteredBandList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        return model.getFilteredBandList();","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wanghejin":7,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX \u003d \"The musician index provided is invalid\";","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_MUSICIANS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_UNKNOWN_BAND \u003d \"Band does not exist!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"    public static final String MESSAGE_INVALID_BAND_DISPLAYED_INDEX \u003d \"The band index provided is invalid\";","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"     * Formats the {@code musician} for display to the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    public static String format(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        builder.append(musician.getName())","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"                .append(musician.getPhone())","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"                .append(musician.getEmail())","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"        musician.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"     * Formats the {@code band} for display to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"DeltonCheng"},"content":"    public static String format(Band band) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"DeltonCheng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"        builder.append(band.getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"DeltonCheng"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"     * Formats the {@code band} for display to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"yytan25"},"content":"    public static String format(Band band, Musician musician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"        builder.append(\"Band Name: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"yytan25"},"content":"                .append(band.getName())","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"yytan25"},"content":"                .append(\"; Musician Name: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"yytan25"},"content":"                .append(musician.getName());","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DeltonCheng":14,"wanghejin":10,"yytan25":6,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/band/AddBandCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.band;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":" * Adds a band to the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"public class AddBandCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"    public static final String COMMAND_WORD \u003d \"addb\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a band to the address book. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"            + PREFIX_NAME + \"NAME\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"            + PREFIX_NAME + \"My garage band\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New band added: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MESSAGE_DUPLICATE_BAND \u003d \"This band already exists in the address book\";","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"    private final Band toAdd;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"    public AddBandCommand(Band band) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(band);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"        toAdd \u003d band;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"        if (model.hasBand(toAdd)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BAND);","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"        model.addBand(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"DeltonCheng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"        if (!(other instanceof AddBandCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"DeltonCheng"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommand otherAddCommand \u003d (AddBandCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"DeltonCheng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"DeltonCheng"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"DeltonCheng":69,"yytan25":3}},{"path":"src/main/java/seedu/address/logic/commands/band/AddMusicianToBandCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.band;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BINDEX;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MINDEX;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":" * Adds a musician to a band.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"public class AddMusicianToBandCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"    public static final String COMMAND_WORD \u003d \"addm\";","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a musician to a band. \"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"            + PREFIX_BINDEX + \"INDEX OF BAND \"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"            + PREFIX_MINDEX + \"INDEX OF MUSICIAN\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"            + PREFIX_BINDEX + \"1 \"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"            + PREFIX_MINDEX + \"1\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New musician added to band: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MESSAGE_DUPLICATE_MUSICIAN \u003d \"This musician already exists in the band\";","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"    private final Index bandToAddInto;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"    private final Index musicianToAdd;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"     * Creates an AddCommand to add the specified {@code Musician}","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"    public AddMusicianToBandCommand(Index bandToAddInto, Index musicianToAdd) {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"        requireNonNull(bandToAddInto);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"        requireNonNull(musicianToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"        this.bandToAddInto \u003d bandToAddInto;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"        this.musicianToAdd \u003d musicianToAdd;","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"        List\u003cBand\u003e lastShownBandList \u003d model.getFilteredBandList();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"        List\u003cMusician\u003e lastShownMusicianList \u003d model.getFilteredMusicianList();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"        if (bandToAddInto.getZeroBased() \u003e\u003d lastShownBandList.size()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BAND_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"        if (musicianToAdd.getZeroBased() \u003e\u003d lastShownMusicianList.size()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"        if (model.hasMusicianInBand(bandToAddInto.getZeroBased(), musicianToAdd.getZeroBased())) {","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"DeltonCheng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MUSICIAN);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"yytan25"},"content":"        Band band \u003d lastShownBandList.get(bandToAddInto.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"yytan25"},"content":"        Musician musician \u003d lastShownMusicianList.get(musicianToAdd.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"yytan25"},"content":"        model.addMusicianToBand(bandToAddInto.getZeroBased(), musicianToAdd.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(band, musician)));","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"DeltonCheng":40,"yytan25":29}},{"path":"src/main/java/seedu/address/logic/commands/band/DeleteBandCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.band;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":" * Deletes a band identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"public class DeleteBandCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    public static final String COMMAND_WORD \u003d \"deleteb\";","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"        + \": Deletes the band identified by the index number used in the displayed band list.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"    public static final String MESSAGE_DELETE_BAND_SUCCESS \u003d \"Deleted Band: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"    public DeleteBandCommand(Index targetIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"        List\u003cBand\u003e lastShownList \u003d model.getFilteredBandList();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BAND_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"        Band bandToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"        model.deleteBand(bandToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BAND_SUCCESS, Messages.format(bandToDelete)));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yytan25":47}},{"path":"src/main/java/seedu/address/logic/commands/band/FindBandCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.logic.commands.band;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":" * Lists all musicians in a band input by the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"public class FindBandCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    public static final String COMMAND_WORD \u003d \"findb\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"    public static final Object MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all musicians who are members of \"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"        + \"the band with a specific band name and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"        + \"Parameters: BAND NAME\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"        + \"Example: \" + COMMAND_WORD + \" BlackPink\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    private final Predicate\u003cBand\u003e predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"    public FindBandCommand(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        model.updateFilteredBandMusicianList(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"        // If the band exists, filtered band list is guaranteed to have only one band,","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        // (because add a band enforce no band with the same name (case-insensitive) is allowed).","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"        // If filtered band list size \u003e 1 or size \u003d\u003d 1 but the band filtered does not pass the predicate,","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"        // it means that the band name is invalid, exception is thrown.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        if (model.getFilteredBandList().size() \u003e 1 || !predicate.test(model.getFilteredBandList().get(0))) {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"            throw new CommandException(Messages.MESSAGE_UNKNOWN_BAND);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"            String.format(Messages.MESSAGE_MUSICIANS_LISTED_OVERVIEW, model.getFilteredMusicianList().size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"        if (!(other instanceof FindBandCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand otherFindBandCommand \u003d (FindBandCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"        return predicate.equals(otherFindBandCommand.predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wanghejin":48,"yytan25":23}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yytan25":2,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/general/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.general;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yytan25":3,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/general/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.general;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yytan25":3,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/general/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.general;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yytan25":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/musician/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":" * Adds a musician to the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a musician to the address book. \"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New musician added: %1$s\";","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_DUPLICATE_MUSICIAN \u003d \"This musician already exists in the address book\";","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    private final Musician toAdd;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"     * Creates an AddCommand to add the specified {@code Musician}","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"    public AddCommand(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        toAdd \u003d musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        if (model.hasMusician(toAdd)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"        model.addMusician(toAdd);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanghejin":13,"yytan25":3,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/musician/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":" * Deletes a musician identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"            + \": Deletes the musician identified by the index number used in the displayed musician list.\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_DELETE_MUSICIAN_SUCCESS \u003d \"Deleted Musician: %1$s\";","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        List\u003cMusician\u003e lastShownList \u003d model.getFilteredMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        Musician musicianToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        model.deleteMusician(musicianToDelete);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MUSICIAN_SUCCESS, Messages.format(musicianToDelete)));","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanghejin":10,"yytan25":3,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/musician/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":" * Edits the details of an existing musician in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the musician identified \"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"            + \"by the index number used in the displayed musician list. \"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_EDIT_MUSICIAN_SUCCESS \u003d \"Edited Musician: %1$s\";","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_DUPLICATE_MUSICIAN \u003d \"This musician already exists in the address book.\";","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"    private final EditMusicianDescriptor editMusicianDescriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"     * @param index of the musician in the filtered musician list to edit","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"     * @param editMusicianDescriptor details to edit the musician with","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"    public EditCommand(Index index, EditMusicianDescriptor editMusicianDescriptor) {","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(editMusicianDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"        this.editMusicianDescriptor \u003d new EditMusicianDescriptor(editMusicianDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"        List\u003cMusician\u003e lastShownList \u003d model.getFilteredMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        Musician musicianToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"        Musician editedMusician \u003d createEditedMusician(musicianToEdit, editMusicianDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"        if (!musicianToEdit.isSameMusician(editedMusician) \u0026\u0026 model.hasMusician(editedMusician)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"        // update musician list to show all, update band list to show all, update bands musicians","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"        model.setMusician(musicianToEdit, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MUSICIAN_SUCCESS, Messages.format(editedMusician)));","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"     * Creates and returns a {@code Musician} with the details of {@code musicianToEdit}","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"     * edited with {@code editMusicianDescriptor}.","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"    private static Musician createEditedMusician(","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"            Musician musicianToEdit, EditMusicianDescriptor editMusicianDescriptor) {","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"        assert musicianToEdit !\u003d null;","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"        Name updatedName \u003d editMusicianDescriptor.getName().orElse(musicianToEdit.getName());","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"        Phone updatedPhone \u003d editMusicianDescriptor.getPhone().orElse(musicianToEdit.getPhone());","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"        Email updatedEmail \u003d editMusicianDescriptor.getEmail().orElse(musicianToEdit.getEmail());","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"        Set\u003cTag\u003e updatedTags \u003d editMusicianDescriptor.getTags().orElse(musicianToEdit.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"tanyyyming"},"content":"        Set\u003cTag\u003e updatedInstrumentTags \u003d editMusicianDescriptor.getInstruments()","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"tanyyyming"},"content":"                .orElse(musicianToEdit.getInstruments());","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"tanyyyming"},"content":"        Set\u003cTag\u003e updatedGenreTags \u003d editMusicianDescriptor.getGenres().orElse(musicianToEdit.getGenres());","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"shuyangk"},"content":"        return new Musician(updatedName, updatedPhone, updatedEmail, updatedTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"tanyyyming"},"content":"                updatedInstrumentTags, updatedGenreTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"wanghejin"},"content":"                \u0026\u0026 editMusicianDescriptor.equals(otherEditCommand.editMusicianDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"                .add(\"editMusicianDescriptor\", editMusicianDescriptor)","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"wanghejin"},"content":"     * Stores the details to edit the musician with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"wanghejin"},"content":"     * corresponding field value of the musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"wanghejin"},"content":"    public static class EditMusicianDescriptor {","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"tanyyyming"},"content":"        private Set\u003cTag\u003e instruments;","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"tanyyyming"},"content":"        private Set\u003cTag\u003e genres;","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"wanghejin"},"content":"        public EditMusicianDescriptor() {}","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"wanghejin"},"content":"        public EditMusicianDescriptor(EditMusicianDescriptor toCopy) {","lastModifiedDate":"2023-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"tanyyyming"},"content":"            setInstruments(toCopy.instruments);","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"tanyyyming"},"content":"            setGenres(toCopy.genres);","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"shuyangk"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags, instruments, genres);","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"tanyyyming"},"content":"        public void setInstruments(Set\u003cTag\u003e instrumentTags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"tanyyyming"},"content":"            this.instruments \u003d (instrumentTags !\u003d null) ? new HashSet\u003c\u003e(instrumentTags) : null;","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"tanyyyming"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getInstruments() {","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"tanyyyming"},"content":"            return (instruments !\u003d null)","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"tanyyyming"},"content":"                    ? Optional.of(Collections.unmodifiableSet(instruments))","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"tanyyyming"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"tanyyyming"},"content":"        public void setGenres(Set\u003cTag\u003e genreTags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"tanyyyming"},"content":"            this.genres \u003d (genreTags !\u003d null) ? new HashSet\u003c\u003e(genreTags) : null;","lastModifiedDate":"2023-10-12"},{"lineNumber":222,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"tanyyyming"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getGenres() {","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"tanyyyming"},"content":"            return (genres !\u003d null)","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"tanyyyming"},"content":"                    ? Optional.of(Collections.unmodifiableSet(genres))","lastModifiedDate":"2023-10-12"},{"lineNumber":227,"author":{"gitId":"tanyyyming"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"wanghejin"},"content":"            if (!(other instanceof EditMusicianDescriptor)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"wanghejin"},"content":"            EditMusicianDescriptor otherEditMusicianDescriptor \u003d (EditMusicianDescriptor) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":242,"author":{"gitId":"wanghejin"},"content":"            return Objects.equals(name, otherEditMusicianDescriptor.name)","lastModifiedDate":"2023-10-10"},{"lineNumber":243,"author":{"gitId":"wanghejin"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditMusicianDescriptor.phone)","lastModifiedDate":"2023-10-10"},{"lineNumber":244,"author":{"gitId":"wanghejin"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditMusicianDescriptor.email)","lastModifiedDate":"2023-10-10"},{"lineNumber":245,"author":{"gitId":"tanyyyming"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditMusicianDescriptor.tags)","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"tanyyyming"},"content":"                    \u0026\u0026 Objects.equals(instruments, otherEditMusicianDescriptor.instruments)","lastModifiedDate":"2023-10-12"},{"lineNumber":247,"author":{"gitId":"tanyyyming"},"content":"                    \u0026\u0026 Objects.equals(genres, otherEditMusicianDescriptor.genres);","lastModifiedDate":"2023-10-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"tanyyyming"},"content":"                    .add(\"instruments\", instruments)","lastModifiedDate":"2023-10-12"},{"lineNumber":258,"author":{"gitId":"tanyyyming"},"content":"                    .add(\"genres\", genres)","lastModifiedDate":"2023-10-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tanyyyming":33,"wanghejin":46,"shuyangk":2,"yytan25":3,"-":178}},{"path":"src/main/java/seedu/address/logic/commands/musician/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"shuyangk"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all musicians whose names, tags, \"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"            + \"instruments, and genres contain any of \"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"            + \"Parameters: At least one of the following prefixes with at least one argument must be provided: \"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]... \"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"            + \"[\" + PREFIX_INSTRUMENT + \"INSTRUMENT]...\"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"            + \"[\" + PREFIX_GENRE + \"GENRE]...\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alice i/piano\";","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"    private final HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"     * Creates a FindCommand to find the specified {@code Musician}.","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"     * @param predicates the list of predicates to filter the list of musicians.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"    public FindCommand(HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"        // predicates is guaranteed to have at least one element because we cannot pass","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        // empty arguments to the FindCommand. Hence, we can safely pass the identity as x -\u003e true","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"        // since it will always be overridden by the first predicate.","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"        Predicate\u003cMusician\u003e combinedPredicate \u003d predicates.stream().reduce(x -\u003e true, Predicate::and);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"        model.updateFilteredMusicianList(combinedPredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        model.updateFilteredBandList(Model.PREDICATE_SHOW_ALL_BANDS);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"                String.format(Messages.MESSAGE_MUSICIANS_LISTED_OVERVIEW, model.getFilteredMusicianList().size()));","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"        return predicates.equals(otherFindCommand.predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"                .add(\"predicate\", predicates)","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tanyyyming":32,"wanghejin":2,"shuyangk":1,"yytan25":3,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/musician/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BANDS;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MUSICIANS;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"shuyangk"},"content":" * Lists all musicians in the address book to the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all musicians and all bands\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"        model.updateFilteredMusicianList(PREDICATE_SHOW_ALL_MUSICIANS);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"        model.updateFilteredBandList(PREDICATE_SHOW_ALL_BANDS);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanghejin":5,"shuyangk":1,"yytan25":3,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.AddBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.AddMusicianToBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.DeleteBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.logic.commands.band.FindBandCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.general.ClearCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.general.ExitCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.general.HelpCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.AddCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.DeleteCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.FindCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.ListCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.band.AddBandCommandParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.band.AddMusicianToBandCommandParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.band.DeleteBandCommandParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.musician.AddCommandParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.musician.DeleteCommandParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.musician.EditCommandParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.musician.FindCommandParser;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"        case FindBandCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"            return new FindBandCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":94,"author":{"gitId":"DeltonCheng"},"content":"        case AddBandCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"DeltonCheng"},"content":"            return new AddBandCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"yytan25"},"content":"        case AddMusicianToBandCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"yytan25"},"content":"            return new AddMusicianToBandCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"yytan25"},"content":"        case DeleteBandCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"yytan25"},"content":"            return new DeleteBandCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DeltonCheng":4,"wanghejin":3,"yytan25":24,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"    public static final Prefix PREFIX_INSTRUMENT \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public static final Prefix PREFIX_GENRE \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"    public static final Prefix PREFIX_BINDEX \u003d new Prefix(\"bin/\");","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"    public static final Prefix PREFIX_MINDEX \u003d new Prefix(\"min/\");","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanyyyming":2,"DeltonCheng":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/FindBandCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import seedu.address.logic.commands.band.FindBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.BandName;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.BandNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":" * Parses input arguments and creates a new FindBandCommand object.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"public class FindBandCommandParser implements Parser\u003cFindBandCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    public FindBandCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"            BandName bandName \u003d ParserUtil.parseBandName(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"            Predicate\u003cBand\u003e bandNamePredicate \u003d new BandNameContainsKeywordsPredicate(bandName.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"            return new FindBandCommand(bandNamePredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBandCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wanghejin":14,"yytan25":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.BandName;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.Genre;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.Instrument;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"DeltonCheng"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"DeltonCheng"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"DeltonCheng"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"    public static BandName parseBandName(String name) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"        if (!BandName.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"        return new BandName(trimmedName);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"tanyyyming"},"content":"     * Parses a {@code String instrument} into a {@code Instrument}.","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"tanyyyming"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"tanyyyming"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"tanyyyming"},"content":"     * @throws ParseException if the given {@code instrument} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"tanyyyming"},"content":"    public static Instrument parseInstrument(String instrument) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"tanyyyming"},"content":"        requireNonNull(instrument);","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"tanyyyming"},"content":"        String trimmedInstrument \u003d instrument.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"tanyyyming"},"content":"        if (!Instrument.isValidInstrumentName(trimmedInstrument)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"tanyyyming"},"content":"            throw new ParseException(Instrument.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"tanyyyming"},"content":"        return new Instrument(trimmedInstrument);","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"tanyyyming"},"content":"     * Parses {@code Collection\u003cString\u003e instruments} into a {@code Set\u003cInstrument\u003e}.","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"tanyyyming"},"content":"    public static Set\u003cTag\u003e parseInstruments(Collection\u003cString\u003e instruments) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"tanyyyming"},"content":"        requireNonNull(instruments);","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"tanyyyming"},"content":"        final Set\u003cTag\u003e instrumentSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"tanyyyming"},"content":"        for (String instrumentName : instruments) {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"tanyyyming"},"content":"            instrumentSet.add(parseInstrument(instrumentName));","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"tanyyyming"},"content":"        return instrumentSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"tanyyyming"},"content":"     * Parses a {@code String genre} into a {@code Genre}.","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"tanyyyming"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"tanyyyming"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"tanyyyming"},"content":"     * @throws ParseException if the given {@code genre} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"tanyyyming"},"content":"    public static Genre parseGenre(String genre) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"tanyyyming"},"content":"        requireNonNull(genre);","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"tanyyyming"},"content":"        String trimmedGenre \u003d genre.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"tanyyyming"},"content":"        if (!Genre.isValidGenreName(trimmedGenre)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"tanyyyming"},"content":"            throw new ParseException(Genre.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"tanyyyming"},"content":"        return new Genre(trimmedGenre);","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"tanyyyming"},"content":"     * Parses {@code Collection\u003cString\u003e genres} into a {@code Set\u003cGenre\u003e}.","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"tanyyyming"},"content":"    public static Set\u003cTag\u003e parseGenres(Collection\u003cString\u003e genres) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"tanyyyming"},"content":"        requireNonNull(genres);","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"tanyyyming"},"content":"        final Set\u003cTag\u003e genreSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"tanyyyming"},"content":"        for (String genreName : genres) {","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"tanyyyming"},"content":"            genreSet.add(parseGenre(genreName));","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"tanyyyming"},"content":"        return genreSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"DeltonCheng":15,"tanyyyming":57,"wanghejin":4,"-":105}},{"path":"src/main/java/seedu/address/logic/parser/band/AddBandCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.band;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.AddBandCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.BandName;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":" * Parses input arguments and creates a new AddBandCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"public class AddBandCommandParser implements Parser\u003cAddBandCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBandCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"     * and returns an AddBandCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"    public AddBandCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBandCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"        BandName name \u003d ParserUtil.parseBandName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"DeltonCheng"},"content":"        // tags and musicians to be implemented later on","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"        Band band \u003d new Band(name, new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"        return new AddBandCommand(band);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"DeltonCheng":47,"yytan25":8}},{"path":"src/main/java/seedu/address/logic/parser/band/AddMusicianToBandCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.band;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BINDEX;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MINDEX;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.AddMusicianToBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":" * Parses input arguments and creates a new AddMusiciantoBandCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"public class AddMusicianToBandCommandParser implements Parser\u003cAddMusicianToBandCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMusiciantoBandCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"     * and returns an AddMusiciantoBandCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"    public AddMusicianToBandCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_BINDEX, PREFIX_MINDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_BINDEX, PREFIX_MINDEX) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"                    AddMusicianToBandCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"            Index bandIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_BINDEX).get());","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"            Index musicianIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MINDEX).get());","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"            return new AddMusicianToBandCommand(bandIndex, musicianIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMusicianToBandCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"DeltonCheng":33,"yytan25":19}},{"path":"src/main/java/seedu/address/logic/parser/band/DeleteBandCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.band;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.DeleteBandCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":" * Parses input arguments and creates a new DeleteBandCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"public class DeleteBandCommandParser implements Parser\u003cDeleteBandCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBandCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"     * and returns a DeleteBandCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    public DeleteBandCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"            return new DeleteBandCommand(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBandCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yytan25":31}},{"path":"src/main/java/seedu/address/logic/parser/musician/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"shuyangk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"                        PREFIX_INSTRUMENT, PREFIX_GENRE);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"shuyangk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"shuyangk"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        Set\u003cTag\u003e instrumentList \u003d ParserUtil.parseInstruments(argMultimap.getAllValues(PREFIX_INSTRUMENT));","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"        Set\u003cTag\u003e genreList \u003d ParserUtil.parseGenres(argMultimap.getAllValues(PREFIX_GENRE));","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"shuyangk"},"content":"        Musician musician \u003d new Musician(name, phone, email, tagList, instrumentList, genreList);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"        return new AddCommand(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tanyyyming":5,"wanghejin":5,"shuyangk":4,"yytan25":7,"-":47}},{"path":"src/main/java/seedu/address/logic/parser/musician/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.DeleteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yytan25":4,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/musician/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand.EditMusicianDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"shuyangk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"                        PREFIX_INSTRUMENT, PREFIX_GENRE);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"shuyangk"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        EditMusicianDescriptor editMusicianDescriptor \u003d new EditMusicianDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"            editMusicianDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"            editMusicianDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"            editMusicianDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"                .ifPresent(editMusicianDescriptor::setTags);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"        parseInstrumentsForEdit(argMultimap.getAllValues(PREFIX_INSTRUMENT))","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"                .ifPresent(editMusicianDescriptor::setInstruments);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"        parseGenresForEdit(argMultimap.getAllValues(PREFIX_GENRE))","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"                .ifPresent(editMusicianDescriptor::setGenres);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        if (!editMusicianDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"        return new EditCommand(index, editMusicianDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"tanyyyming"},"content":"     * Parses {@code Collection\u003cString\u003e instruments} into a {@code Set\u003cTag\u003e} if {@code instruments} is a valid","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"tanyyyming"},"content":"     * collection of instruments.","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"tanyyyming"},"content":"     * If {@code instruments} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"tanyyyming"},"content":"     * {@code Set\u003cTag\u003e} containing zero instruments.","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"tanyyyming"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseInstrumentsForEdit(Collection\u003cString\u003e instruments) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"tanyyyming"},"content":"        assert instruments !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"tanyyyming"},"content":"        if (instruments.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"tanyyyming"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"tanyyyming"},"content":"        Collection\u003cString\u003e instrumentSet \u003d instruments.size() \u003d\u003d 1 \u0026\u0026 instruments.contains(\"\")","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"tanyyyming"},"content":"                ? Collections.emptySet() : instruments;","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"tanyyyming"},"content":"        return Optional.of(ParserUtil.parseInstruments(instrumentSet));","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"tanyyyming"},"content":"     * Parses {@code Collection\u003cString\u003e genres} into a {@code Set\u003cTag\u003e} if {@code genres} is a valid collection of","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"tanyyyming"},"content":"     * genres.","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"tanyyyming"},"content":"     * If {@code genres} contain only one element which is an empty string, it will be parsed into a {@code Set\u003cTag\u003e}","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"tanyyyming"},"content":"     * containing zero genres.","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"tanyyyming"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseGenresForEdit(Collection\u003cString\u003e genres) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"tanyyyming"},"content":"        assert genres !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"tanyyyming"},"content":"        if (genres.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"tanyyyming"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"tanyyyming"},"content":"        Collection\u003cString\u003e genreSet \u003d genres.size() \u003d\u003d 1 \u0026\u0026 genres.contains(\"\") ? Collections.emptySet() : genres;","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"tanyyyming"},"content":"        return Optional.of(ParserUtil.parseGenres(genreSet));","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanyyyming":42,"wanghejin":6,"shuyangk":2,"yytan25":7,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/musician/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.FindCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.GenreMatchesPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.InstrumentMatchesPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.TagMatchesPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG, PREFIX_INSTRUMENT, PREFIX_GENRE);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        if (!argMultimap.getPreamble().isEmpty() || args.trim().isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"        List\u003cString\u003e names \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"        List\u003cString\u003e tags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"        List\u003cString\u003e instruments \u003d argMultimap.getAllValues(PREFIX_INSTRUMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"        List\u003cString\u003e genres \u003d argMultimap.getAllValues(PREFIX_GENRE);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"        if (!names.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"            predicates.add(new NameContainsKeywordsPredicate(names));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"            predicates.add(new TagMatchesPredicate(tags));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"        if (!instruments.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"            predicates.add(new InstrumentMatchesPredicate(instruments));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"        if (!genres.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"            predicates.add(new GenreMatchesPredicate(genres));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"        return new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanyyyming":34,"wanghejin":1,"yytan25":5,"-":25}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.UniqueBandList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.UniqueMusicianList;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":" * Duplicates are not allowed (by .isSameMusician comparison)","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    private final UniqueMusicianList musicians;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"    private final UniqueBandList bands;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"        musicians \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"        bands \u003d new UniqueBandList();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"     * Creates an AddressBook using the Musicians in the {@code toBeCopied}","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"     * Replaces the contents of the musician list with {@code musicians}.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"     * {@code musicians} must not contain duplicate musicians.","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians(List\u003cMusician\u003e musicians) {","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        this.musicians.setMusicians(musicians);","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"DeltonCheng"},"content":"     * Replaces the contents of the band list with {@code bands}.","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"     * {@code bands} must not contain duplicate bands.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"    public void setBands(List\u003cBand\u003e bands) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"        this.bands.setBand(bands);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"        setMusicians(newData.getMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"DeltonCheng"},"content":"        setBands(newData.getBandList());","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"    //// musician-level operations","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"     * Returns true if a musician with the same identity as {@code musician} exists in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"    public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"        return musicians.contains(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"     * Adds a musician to the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"     * The musician must not already exist in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"    public void addMusician(Musician p) {","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"        musicians.add(p);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"     * Replaces the given musician {@code target} in the list with {@code editedMusician}.","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"     * The musician identity of {@code editedMusician} must not be the same as another existing musician in the","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"     * address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"    public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"        musicians.setMusician(target, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"    public void removeMusician(Musician key) {","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"        musicians.remove(key);","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"yytan25"},"content":"     * Adds a band to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"yytan25"},"content":"     * The band must not already exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"yytan25"},"content":"    public void addBand(Band band) {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"yytan25"},"content":"        bands.add(band);","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"yytan25"},"content":"     * Returns true if a band with the same identity as {@code musician} exists in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"yytan25"},"content":"    public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"yytan25"},"content":"        requireNonNull(band);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"yytan25"},"content":"        return bands.contains(band);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"DeltonCheng"},"content":"     * Returns true if the musician already exists in the band.","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"yytan25"},"content":"    public boolean hasMusicianInBand(int bandIndex, Musician musician) {","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"yytan25"},"content":"        requireNonNull(musician);","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"yytan25"},"content":"        return bands.hasMusician(bandIndex, musician);","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"     * For all bands, remove target and replace with editedMusician. If editedMusician is null, just remove target.","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"wanghejin"},"content":"    public void updateMusicianInAllBands(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"wanghejin"},"content":"        bands.updateMusicianInAllBands(target, editedMusician);","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"DeltonCheng"},"content":"     * Adds a musician to a band.","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"DeltonCheng"},"content":"    public void addMusicianToBand(int bandIndex, Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(bandIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"DeltonCheng"},"content":"        bands.addMusician(bandIndex, musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"yytan25"},"content":"     * Removes a band from the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"yytan25"},"content":"     * The band must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"yytan25"},"content":"    public void removeBand(Band key) {","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"yytan25"},"content":"        bands.remove(key);","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"wanghejin"},"content":"                .add(\"musicians\", musicians)","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"wanghejin"},"content":"    public ObservableList\u003cMusician\u003e getMusicianList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"wanghejin"},"content":"        return musicians.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":168,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"DeltonCheng"},"content":"    public ObservableList\u003cBand\u003e getBandList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"DeltonCheng"},"content":"        return bands.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"wanghejin"},"content":"        return musicians.equals(otherAddressBook.musicians);","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"wanghejin"},"content":"        return musicians.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DeltonCheng":22,"wanghejin":43,"yytan25":32,"-":95}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"    Predicate\u003cMusician\u003e PREDICATE_SHOW_ALL_MUSICIANS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    Predicate\u003cBand\u003e PREDICATE_SHOW_ALL_BANDS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"     * Returns true if a musician with the same identity as {@code musician} exists in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"    boolean hasMusician(Musician musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"     * Deletes the given musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"     * The musician must exist in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"    void deleteMusician(Musician target);","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"     * Adds the given musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"     * {@code musician} must not already exist in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"    void addMusician(Musician musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"     * Replaces the given musician {@code target} with {@code editedMusician}.","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"     * The musician identity of {@code editedMusician} must not be the same as another existing musician","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"     * in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"    void setMusician(Musician target, Musician editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"    /** Returns an unmodifiable view of the filtered musician list */","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"    ObservableList\u003cMusician\u003e getFilteredMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"     * Updates the filter of the filtered musician list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"    void updateFilteredMusicianList(Predicate\u003cMusician\u003e predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"    /** Returns an unmodifiable view of the filtered band list */","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"    ObservableList\u003cBand\u003e getFilteredBandList();","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"    void updateFilteredBandList(Predicate\u003cBand\u003e predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"     * Updates the filter of the filtered band list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"     * Updates the musician list to reflect the members of the filtered band.","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"     * An abstraction for FindBandCommand which requires updating both panels simultaneously.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"    void updateFilteredBandMusicianList(Predicate\u003cBand\u003e predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"DeltonCheng"},"content":"     * Returns true if a band with the same identity as {@code band} exists in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"DeltonCheng"},"content":"    boolean hasBand(Band band);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"DeltonCheng"},"content":"     * Adds the given band.","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"DeltonCheng"},"content":"     * {@code band} must not already exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"DeltonCheng"},"content":"    void addBand(Band band);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"yytan25"},"content":"     * Deletes the given band.","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"yytan25"},"content":"     * The band must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"yytan25"},"content":"    void deleteBand(Band bandToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"DeltonCheng"},"content":"     * Returns true if a band already contains the musician.","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"DeltonCheng"},"content":"     * {@code musician} must not already exist in the band.","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"DeltonCheng"},"content":"    boolean hasMusicianInBand(int addInto, int toAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"DeltonCheng"},"content":"     * Adds the given musician into the band.","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"DeltonCheng"},"content":"     * {@code musician} must not already exist in the band.","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"DeltonCheng"},"content":"    void addMusicianToBand(int addInto, int toAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"DeltonCheng":24,"wanghejin":31,"yytan25":7,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.musician.MusicianInBandPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    private final FilteredList\u003cMusician\u003e filteredMusicians;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    private final FilteredList\u003cBand\u003e filteredBands;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        filteredMusicians \u003d new FilteredList\u003c\u003e(this.addressBook.getMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"        filteredBands \u003d new FilteredList\u003c\u003e(this.addressBook.getBandList());","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"    public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"        return addressBook.hasMusician(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"    public void deleteMusician(Musician target) {","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"        addressBook.removeMusician(target);","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"        updateFilteredMusicianList(PREDICATE_SHOW_ALL_MUSICIANS);","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"wanghejin"},"content":"        updateFilteredBandList(PREDICATE_SHOW_ALL_BANDS);","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"wanghejin"},"content":"        updateMusicianInAllBands(target, null);","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"wanghejin"},"content":"    public void addMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"wanghejin"},"content":"        addressBook.addMusician(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"wanghejin"},"content":"        updateFilteredMusicianList(PREDICATE_SHOW_ALL_MUSICIANS);","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"wanghejin"},"content":"        updateFilteredBandList(Model.PREDICATE_SHOW_ALL_BANDS);","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"wanghejin"},"content":"    public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"wanghejin"},"content":"        requireAllNonNull(target, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"wanghejin"},"content":"        addressBook.setMusician(target, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"wanghejin"},"content":"        updateFilteredMusicianList(PREDICATE_SHOW_ALL_MUSICIANS);","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"wanghejin"},"content":"        updateFilteredBandList(PREDICATE_SHOW_ALL_BANDS);","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"wanghejin"},"content":"        updateMusicianInAllBands(target, editedMusician);","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"wanghejin"},"content":"     * Used by edit and delete musician commands to simultaneously update the","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"     * corresponding musician in band list.","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"wanghejin"},"content":"    private void updateMusicianInAllBands(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"wanghejin"},"content":"        addressBook.updateMusicianInAllBands(target, editedMusician);","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"DeltonCheng"},"content":"    public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(band);","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"DeltonCheng"},"content":"        return addressBook.hasBand(band);","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"DeltonCheng"},"content":"    public void addBand(Band band) {","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"DeltonCheng"},"content":"        requireAllNonNull(band);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"DeltonCheng"},"content":"        addressBook.addBand(band);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"DeltonCheng"},"content":"    public boolean hasMusicianInBand(int bandIndex, int musicianIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(bandIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(musicianIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"yytan25"},"content":"        return addressBook.hasMusicianInBand(bandIndex, filteredMusicians.get(musicianIndex));","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"DeltonCheng"},"content":"    public void addMusicianToBand(int bandIndex, int musicianIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(bandIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(musicianIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"DeltonCheng"},"content":"        addressBook.addMusicianToBand(bandIndex, filteredMusicians.get(musicianIndex));","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"yytan25"},"content":"    public void deleteBand(Band target) {","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"yytan25"},"content":"        addressBook.removeBand(target);","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"wanghejin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Musician List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":171,"author":{"gitId":"wanghejin"},"content":"     * Returns an unmodifiable view of the list of {@code Musician} backed by the internal list of","lastModifiedDate":"2023-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"wanghejin"},"content":"    public ObservableList\u003cMusician\u003e getFilteredMusicianList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":176,"author":{"gitId":"wanghejin"},"content":"        return filteredMusicians;","lastModifiedDate":"2023-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"wanghejin"},"content":"    public void updateFilteredMusicianList(Predicate\u003cMusician\u003e predicate) {","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":182,"author":{"gitId":"wanghejin"},"content":"        filteredMusicians.setPredicate(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"yytan25"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Band List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"wanghejin"},"content":"     * Returns an unmodifiable view of the list of {@code Band} backed by the internal list of","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"wanghejin"},"content":"    public ObservableList\u003cBand\u003e getFilteredBandList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"wanghejin"},"content":"        return filteredBands;","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"wanghejin"},"content":"    public void updateFilteredBandList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"wanghejin"},"content":"        filteredBands.setPredicate(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"wanghejin"},"content":"     * Returns an unmodifiable view of the list of {@code Band} backed by the internal list of","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"wanghejin"},"content":"     * {@code versionedAddressBook}. Returns an unmodifiable view of the list of {@code Musician}","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"wanghejin"},"content":"     * backed by the internal list of {@code versionedAddressBook}","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"wanghejin"},"content":"     * If there is no band with the corresponding name, an error message will be displayed","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"wanghejin"},"content":"     * And the panel will show initial state of listing all.","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"wanghejin"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"wanghejin"},"content":"    public void updateFilteredBandMusicianList(Predicate\u003cBand\u003e bandPredicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"wanghejin"},"content":"        filteredBands.setPredicate(bandPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"wanghejin"},"content":"        if (filteredBands.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"wanghejin"},"content":"            updateFilteredMusicianList(PREDICATE_SHOW_ALL_MUSICIANS);","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"wanghejin"},"content":"            updateFilteredBandList(PREDICATE_SHOW_ALL_BANDS);","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"wanghejin"},"content":"            return;","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"wanghejin"},"content":"        Predicate\u003cMusician\u003e musicianPredicate \u003d new MusicianInBandPredicate(filteredBands.get(0));","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"wanghejin"},"content":"        filteredMusicians.setPredicate(musicianPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"wanghejin"},"content":"                \u0026\u0026 filteredMusicians.equals(otherModelManager.filteredMusicians);","lastModifiedDate":"2023-10-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DeltonCheng":26,"wanghejin":66,"yytan25":8,"-":140}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"    ObservableList\u003cMusician\u003e getMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"    ObservableList\u003cBand\u003e getBandList();","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DeltonCheng":3,"wanghejin":2,"-":16}},{"path":"src/main/java/seedu/address/model/band/Band.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":" * Represents a Band in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"public class Band {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"    private final BandName name;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    private final Set\u003cTag\u003e genres \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"    private final Set\u003cMusician\u003e musicians \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"    public Band(BandName name, Set\u003cTag\u003e genreTags, Set\u003cMusician\u003e musicians) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"        requireAllNonNull(name, genreTags, musicians);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"        this.genres.addAll(genreTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"        this.musicians.addAll(musicians);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"    public BandName getName() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"        return name;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"    public Set\u003cTag\u003e getGenres() {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"        return Collections.unmodifiableSet(genres);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"    public Set\u003cMusician\u003e getMusicians() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"        return Collections.unmodifiableSet(musicians);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"    public Set\u003cMusician\u003e getModifiableMusicianList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"        return musicians;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"    public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"        return musicians.contains(musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"    public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        if (musicians.contains(target)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"            musicians.remove(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"        if (editedMusician !\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"            musicians.add(editedMusician);","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"     * Returns true if both bands have the same name.","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"    public boolean isSameBand(Band otherBand) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"DeltonCheng"},"content":"        if (otherBand \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"DeltonCheng"},"content":"        return otherBand !\u003d null","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"DeltonCheng"},"content":"                \u0026\u0026 otherBand.getName().equals(getName());","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"yytan25"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"yytan25"},"content":"            .add(\"name\", name)","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"yytan25"},"content":"            .add(\"genres\", genres)","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"yytan25"},"content":"            .add(\"musicians\", musicians)","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"yytan25"},"content":"            .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DeltonCheng":21,"wanghejin":11,"yytan25":50}},{"path":"src/main/java/seedu/address/model/band/BandIsSamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuyangk"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"shuyangk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"shuyangk"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"shuyangk"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"shuyangk"},"content":" * Tests that a {@code Band} is equal to another {@code Band}.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"shuyangk"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"shuyangk"},"content":"public class BandIsSamePredicate implements Predicate\u003cBand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"shuyangk"},"content":"    private final Band bandToCheck;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"shuyangk"},"content":"    public BandIsSamePredicate(Band bandToCheck) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"shuyangk"},"content":"        this.bandToCheck \u003d bandToCheck;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"shuyangk"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"shuyangk"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"shuyangk"},"content":"    public boolean test(Band band) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"shuyangk"},"content":"        return bandToCheck.equals(band);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"shuyangk"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"shuyangk"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"shuyangk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"shuyangk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"shuyangk"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"shuyangk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"shuyangk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"shuyangk"},"content":"        if (!(other instanceof seedu.address.model.band.BandIsSamePredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"shuyangk"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"shuyangk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"shuyangk"},"content":"        seedu.address.model.band.BandIsSamePredicate otherBandIsSamePredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"shuyangk"},"content":"                (seedu.address.model.band.BandIsSamePredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"shuyangk"},"content":"        return bandToCheck.equals(otherBandIsSamePredicate.bandToCheck);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"shuyangk"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"shuyangk"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"shuyangk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"shuyangk"},"content":"        return new ToStringBuilder(this).add(\"bandToCheck\", bandToCheck).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"shuyangk"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"shuyangk"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"shuyangk":43}},{"path":"src/main/java/seedu/address/model/band/BandMusicians.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":" * Represents the list of musicians in a Band.","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"public class BandMusicians {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"    private Set\u003cMusician\u003e musicians;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"     * Musician list can be empty.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"    public BandMusicians(Set\u003cMusician\u003e musicians) {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"        this.musicians \u003d musicians;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"        if (musicians.contains(target)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"            musicians.remove(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"        if (editedMusician !\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"            musicians.add(editedMusician);","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"        return musicians.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"DeltonCheng"},"content":"        if (!(other instanceof BandMusicians)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"        BandMusicians otherList \u003d (BandMusicians) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"        return musicians.equals(otherList);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"DeltonCheng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"        return musicians.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"DeltonCheng":44,"wanghejin":10}},{"path":"src/main/java/seedu/address/model/band/BandName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":" * Represents a Band\u0027s name in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"public class BandName {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"    public final String fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"    public BandName(String name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"        return fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yytan25"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yytan25"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yytan25"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"        if (!(other instanceof BandName)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"yytan25"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"        BandName otherName \u003d (BandName) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        return fullName.equalsIgnoreCase(otherName.fullName);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yytan25"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yytan25"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DeltonCheng":4,"wanghejin":1,"yytan25":62}},{"path":"src/main/java/seedu/address/model/band/BandNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":" * Tests that a {@code Band}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"public class BandNameContainsKeywordsPredicate implements Predicate\u003cBand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"    private final String bandName;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    public BandNameContainsKeywordsPredicate(String bandName) {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"        this.bandName \u003d bandName;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"    public boolean test(Band band) {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"        return band.getName().fullName.equalsIgnoreCase(bandName);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"        if (!(other instanceof BandNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"        BandNameContainsKeywordsPredicate otherBandNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"            (BandNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"        return bandName.equals(otherBandNameContainsKeywordsPredicate.bandName);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"        return new ToStringBuilder(this).add(\"bandName\", bandName).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wanghejin":3,"yytan25":39}},{"path":"src/main/java/seedu/address/model/band/UniqueBandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.exceptions.BandNotFoundException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.exceptions.DuplicateBandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.exceptions.DuplicateMusicianException;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":" * A list of bands that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":" * A band is considered unique by comparing using {@code Band#isSameBand(Band)}.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":" * As such, adding and updating of persons uses Band#isSameBand(Band) for equality","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":" * so as to ensure that the band being added or updated is unique in terms of identity in the UniqueBandList.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":" * However, the removal of a band uses Band#equals(Object) so as to ensure that","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":" * the band with exactly the same fields will be removed.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":" *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":" *","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":" * @see Band#isSameBand(Band)","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"public class UniqueBandList implements Iterable\u003cBand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"    private final ObservableList\u003cBand\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"    private final ObservableList\u003cBand\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"     * Returns true if the list contains an equivalent band as the given argument.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"    public boolean contains(Band toCheck) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"        return internalList.stream().anyMatch(toCheck::isSameBand);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"     * Adds a band to the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"     * The musician must not already exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"    public void add(Band toAdd) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yytan25"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"            throw new DuplicateBandException();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"     * Returns the band at the index","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"    public Band get(Index index) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        return internalList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"     * Replaces musician {@code target} in every band she is in with {@code editedMusician}.","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"    public void updateMusicianInAllBands(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"            internalList.get(i).setMusician(target, editedMusician);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"     * Replaces the band {@code target} in the list with {@code editedMusician}.","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"     * The band identity of {@code editedBand} must not be the same as another existing band in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"    public void setBand(Band target, Band editedBand) {","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"        requireAllNonNull(target, editedBand);","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"            throw new BandNotFoundException();","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"        if (!target.isSameBand(editedBand) \u0026\u0026 contains(editedBand)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"            throw new DuplicateBandException();","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"        internalList.set(index, editedBand);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"yytan25"},"content":"    public void setBand(UniqueBandList replacement) {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"yytan25"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"yytan25"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"yytan25"},"content":"     * Replaces the contents of this list with {@code musicians}.","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"yytan25"},"content":"     * {@code musicians} must not contain duplicate musicians.","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"yytan25"},"content":"    public void setBand(List\u003cBand\u003e band) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yytan25"},"content":"        requireAllNonNull(band);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"yytan25"},"content":"        if (!bandsAreUnique(band)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"yytan25"},"content":"            throw new DuplicateBandException();","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"yytan25"},"content":"        internalList.setAll(band);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"yytan25"},"content":"     * Replaces the contents of this list with all bands in {@code replacement}.","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"yytan25"},"content":"     * {@code replacement} must not contain duplicate bands.","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"yytan25"},"content":"    public void setBands(UniqueBandList replacement) {","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"yytan25"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"yytan25"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"yytan25"},"content":"     * Replaces the contents of this list with {@code bands}.","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"yytan25"},"content":"     * {@code bands} must not contain duplicate musicians.","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"yytan25"},"content":"    public void setBands(List\u003cBand\u003e bands) {","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"yytan25"},"content":"        requireAllNonNull(bands);","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"yytan25"},"content":"        if (!bandsAreUnique(bands)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"yytan25"},"content":"            throw new DuplicateBandException();","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"yytan25"},"content":"        internalList.setAll(bands);","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"DeltonCheng"},"content":"     * Removes the equivalent band from the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"DeltonCheng"},"content":"     * The band must exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"yytan25"},"content":"    public void remove(Band toRemove) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"yytan25"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"yytan25"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"yytan25"},"content":"            throw new BandNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"DeltonCheng"},"content":"     * Returns true if musician already exists in the band.","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"DeltonCheng"},"content":"    public boolean hasMusician(int bandIndex, Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(bandIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"DeltonCheng"},"content":"        return internalList.get(bandIndex).hasMusician(musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"DeltonCheng"},"content":"     * Adds a musician to a band.","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"DeltonCheng"},"content":"    public void addMusician(int bandIndex, Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(bandIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"DeltonCheng"},"content":"        if (internalList.get(bandIndex).getModifiableMusicianList().contains((musician))) {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"DeltonCheng"},"content":"            throw new DuplicateMusicianException();","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"DeltonCheng"},"content":"        internalList.get(bandIndex).getModifiableMusicianList().add(musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"yytan25"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"yytan25"},"content":"    public ObservableList\u003cBand\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"yytan25"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"yytan25"},"content":"    public Iterator\u003cBand\u003e iterator() {","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"yytan25"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"yytan25"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"yytan25"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"yytan25"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"yytan25"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"yytan25"},"content":"        if (!(other instanceof UniqueBandList)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"yytan25"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"yytan25"},"content":"        UniqueBandList otherUniqueBandList \u003d (UniqueBandList) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"yytan25"},"content":"        return internalList.equals(otherUniqueBandList.internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"yytan25"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"yytan25"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"yytan25"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"yytan25"},"content":"     * Returns true if {@code musicians} contains only unique musicians.","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"yytan25"},"content":"    private boolean bandsAreUnique(List\u003cBand\u003e bands) {","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"yytan25"},"content":"        for (int i \u003d 0; i \u003c bands.size() - 1; i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"yytan25"},"content":"            for (int j \u003d i + 1; j \u003c bands.size(); j++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"yytan25"},"content":"                if (bands.get(i).isSameBand(bands.get(j))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"yytan25"},"content":"                    return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"yytan25"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"yytan25"},"content":"        return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"DeltonCheng":34,"wanghejin":34,"yytan25":145}},{"path":"src/main/java/seedu/address/model/band/exceptions/BandNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"package seedu.address.model.band.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":" * Signals that the operation is unable to find the specified band.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"public class BandNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"DeltonCheng":7}},{"path":"src/main/java/seedu/address/model/band/exceptions/DuplicateBandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"package seedu.address.model.band.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":" * Signals that the operation will result in duplicate Bands (Bands are considered duplicates if they have the same","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":" * identity).","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"public class DuplicateBandException extends RuntimeException {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"    public DuplicateBandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"DeltonCheng"},"content":"        super(\"Operation would result in duplicate bands\");","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"DeltonCheng":12}},{"path":"src/main/java/seedu/address/model/musician/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":" * Represents a Musician\u0027s email in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanghejin":2,"-":77}},{"path":"src/main/java/seedu/address/model/musician/Musician.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":" * Represents a Musician in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"public class Musician {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"    private final Set\u003cTag\u003e instruments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    private final Set\u003cTag\u003e genres \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"shuyangk"},"content":"    public Musician(Name name, Phone phone, Email email, Set\u003cTag\u003e tags, Set\u003cTag\u003e instrumentTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"                    Set\u003cTag\u003e genreTags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"shuyangk"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"        this.instruments.addAll(instrumentTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"        this.genres.addAll(genreTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"    public Set\u003cTag\u003e getInstruments() {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"        return Collections.unmodifiableSet(instruments);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"    public Set\u003cTag\u003e getGenres() {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"        return Collections.unmodifiableSet(genres);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"    public boolean isSameMusician(Musician otherMusician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        if (otherMusician \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"        return otherMusician !\u003d null","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"                \u0026\u0026 otherMusician.getName().equals(getName());","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"        if (!(other instanceof Musician)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"        Musician otherMusician \u003d (Musician) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"        return name.equals(otherMusician.name)","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"                \u0026\u0026 phone.equals(otherMusician.phone)","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"                \u0026\u0026 email.equals(otherMusician.email)","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"tanyyyming"},"content":"                \u0026\u0026 tags.equals(otherMusician.tags)","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"tanyyyming"},"content":"                \u0026\u0026 instruments.equals(otherMusician.instruments)","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"tanyyyming"},"content":"                \u0026\u0026 genres.equals(otherMusician.genres);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"shuyangk"},"content":"        return Objects.hash(name, phone, email, tags, instruments, genres);","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"tanyyyming"},"content":"                .add(\"instruments\", instruments)","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"tanyyyming"},"content":"                .add(\"genres\", genres)","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanyyyming":18,"wanghejin":12,"shuyangk":3,"-":94}},{"path":"src/main/java/seedu/address/model/musician/MusicianInBandPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":" * Tests that a {@code Musician} is contained in a {@code Band}.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"public class MusicianInBandPredicate implements Predicate\u003cMusician\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"    private final Band bandToCheck;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"    public MusicianInBandPredicate(Band bandToCheck) {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"        this.bandToCheck \u003d bandToCheck;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    public boolean test(Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"        return bandToCheck.getMusicians().contains(musician);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"        if (!(other instanceof MusicianInBandPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"        MusicianInBandPredicate otherMusicianInBandPredicate \u003d (MusicianInBandPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"        return bandToCheck.equals(otherMusicianInBandPredicate.bandToCheck);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"        return new ToStringBuilder(this).add(\"bandToCheck\", bandToCheck).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"yytan25":43}},{"path":"src/main/java/seedu/address/model/musician/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":" * Represents a Musician\u0027s name in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanyyyming":1,"wanghejin":2,"-":64}},{"path":"src/main/java/seedu/address/model/musician/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":" * Tests that a {@code Musician}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cMusician\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    public boolean test(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(musician.getName().fullName, keyword));","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"        return keywords.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tanyyyming":5,"wanghejin":5,"-":39}},{"path":"src/main/java/seedu/address/model/musician/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":" * Represents a Musician\u0027s phone number in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanghejin":2,"-":59}},{"path":"src/main/java/seedu/address/model/musician/UniqueMusicianList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.exceptions.DuplicateMusicianException;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.exceptions.MusicianNotFoundException;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":" * A musician is considered unique by comparing using {@code Musician#isSameMusician(Musician)}.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":" * As such, adding and updating of persons uses Musician#isSameMusician(Musician) for equality","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":" * so as to ensure that the musician being added or updated is unique in terms of identity in the UniqueMusicianList.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":" * However, the removal of a musician uses Musician#equals(Object) so as to ensure that","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":" * the musician with exactly the same fields will be removed.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":" * @see Musician#isSameMusician(Musician)","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"public class UniqueMusicianList implements Iterable\u003cMusician\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"    private final ObservableList\u003cMusician\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    private final ObservableList\u003cMusician\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"     * Returns true if the list contains an equivalent musician as the given argument.","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"    public boolean contains(Musician toCheck) {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"     * Adds a musician to the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"     * The musician must not already exist in the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"    public void add(Musician toAdd) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"            throw new DuplicateMusicianException();","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"     * Returns the musician at the index","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"    public Musician get(Index index) {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"DeltonCheng"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"DeltonCheng"},"content":"        return internalList.get(index.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"     * Replaces the musician {@code target} in the list with {@code editedMusician}.","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"     * The musician identity of {@code editedMusician} must not be the same as another existing musician in the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"    public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"        requireAllNonNull(target, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"            throw new MusicianNotFoundException();","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"        if (!target.isSameMusician(editedMusician) \u0026\u0026 contains(editedMusician)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"            throw new DuplicateMusicianException();","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        internalList.set(index, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"     * Removes the equivalent musician from the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"     * The musician must exist in the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"    public void remove(Musician toRemove) {","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"            throw new MusicianNotFoundException();","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians(UniqueMusicianList replacement) {","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"     * Replaces the contents of this list with {@code musicians}.","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"     * {@code musicians} must not contain duplicate musicians.","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians(List\u003cMusician\u003e musicians) {","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"        requireAllNonNull(musicians);","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"        if (!musiciansAreUnique(musicians)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"            throw new DuplicateMusicianException();","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"        internalList.setAll(musicians);","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"DeltonCheng"},"content":"    public Musician getMusician(int index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"DeltonCheng"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"wanghejin"},"content":"    public ObservableList\u003cMusician\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"    public Iterator\u003cMusician\u003e iterator() {","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"wanghejin"},"content":"        if (!(other instanceof UniqueMusicianList)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"wanghejin"},"content":"        UniqueMusicianList otherUniqueMusicianList \u003d (UniqueMusicianList) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"wanghejin"},"content":"        return internalList.equals(otherUniqueMusicianList.internalList);","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"wanghejin"},"content":"     * Returns true if {@code musicians} contains only unique musicians.","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"wanghejin"},"content":"    private boolean musiciansAreUnique(List\u003cMusician\u003e musicians) {","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"wanghejin"},"content":"        for (int i \u003d 0; i \u003c musicians.size() - 1; i++) {","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"wanghejin"},"content":"            for (int j \u003d i + 1; j \u003c musicians.size(); j++) {","lastModifiedDate":"2023-10-10"},{"lineNumber":152,"author":{"gitId":"wanghejin"},"content":"                if (musicians.get(i).isSameMusician(musicians.get(j))) {","lastModifiedDate":"2023-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DeltonCheng":11,"wanghejin":50,"-":98}},{"path":"src/main/java/seedu/address/model/musician/exceptions/DuplicateMusicianException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"public class DuplicateMusicianException extends RuntimeException {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"    public DuplicateMusicianException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wanghejin":3,"-":8}},{"path":"src/main/java/seedu/address/model/musician/exceptions/MusicianNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician.exceptions;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":" * Signals that the operation is unable to find the specified musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"public class MusicianNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"wanghejin":3,"-":3}},{"path":"src/main/java/seedu/address/model/tag/Genre.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":" * Represents a Genre Tag in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidGenreName(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"public class Genre extends Tag {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Genre tags names should be a valid genre name\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    public static final HashSet\u003cString\u003e VALID_GENRES \u003d new HashSet\u003cString\u003e(Arrays.asList(","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"            \"pop\", \"rock\", \"jazz\", \"r\u0026b\", \"classical\", \"hiphop\", \"country\", \"metal\"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    ));","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"     * Constructs a {@code GenreTag}.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"     * @param tagName A valid genre tag name.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    public Genre(String tagName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        super(tagName);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"        checkArgument(isValidGenreName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"     * Returns true if a given string is a valid genre tag name.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"    public static boolean isValidGenreName(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"        return VALID_GENRES.contains(test);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"tanyyyming":35}},{"path":"src/main/java/seedu/address/model/tag/GenreMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":" * Tests that a {@code Musician}\u0027s {@code Genre} tag matches any of the keywords given.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"public class GenreMatchesPredicate extends TagMatchesPredicate {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public GenreMatchesPredicate(List\u003cString\u003e genre) {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"        super(genre);","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    public boolean test(Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        List\u003cString\u003e genres \u003d super.getTagNames();","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"        return genres.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"                .anyMatch(genreToMatch -\u003e musician.getGenres().stream().anyMatch(","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"                        musicianGenre -\u003e StringUtil.containsWordIgnoreCase(musicianGenre.tagName, genreToMatch)","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"                ));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"        if (!(other instanceof GenreMatchesPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        return super.equals(other);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"        return super.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"        return new ToStringBuilder(this).add(\"genres\", super.getTagNames()).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tanyyyming":51}},{"path":"src/main/java/seedu/address/model/tag/Instrument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":" * Represents an Instrument Tag in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidInstrumentName(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"public class Instrument extends Tag {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Instrument tags names should be a valid instrument name\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    public static final HashSet\u003cString\u003e VALID_INSTRUMENTS \u003d new HashSet\u003cString\u003e(Arrays.asList(","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"            \"piano\", \"guitar\", \"bass\", \"violin\", \"saxophone\", \"trumpet\", \"drums\"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    ));","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"     * Constructs a {@code InstrumentTag}.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"     * @param tagName A valid instrument tag name.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    public Instrument(String tagName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        super(tagName);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"        checkArgument(isValidInstrumentName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"     * Returns true if a given string is a valid instrument tag name.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"    public static boolean isValidInstrumentName(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"        return VALID_INSTRUMENTS.contains(test);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"tanyyyming":35}},{"path":"src/main/java/seedu/address/model/tag/InstrumentMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":" * Tests that a {@code Musician}\u0027s {@code Instrument} tag matches any of the keywords given.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"public class InstrumentMatchesPredicate extends TagMatchesPredicate {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    public InstrumentMatchesPredicate(List\u003cString\u003e instrument) {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"        super(instrument);","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    public boolean test(Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        List\u003cString\u003e instruments \u003d super.getTagNames();","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"        return instruments.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"                .anyMatch(instrumentToMatch -\u003e musician.getInstruments().stream().anyMatch(","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"                        musicianInstrument -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"                                musicianInstrument.tagName, instrumentToMatch","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"                )));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"        if (!(other instanceof InstrumentMatchesPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"        return super.equals(other);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"        return super.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"        return new ToStringBuilder(this).add(\"instruments\", super.getTagNames()).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tanyyyming":52}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanyyyming":1,"-":62}},{"path":"src/main/java/seedu/address/model/tag/TagMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":" * Tests that a {@code Musician}\u0027s {@code Genre} tag matches any of the keywords given.","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"public class TagMatchesPredicate implements Predicate\u003cMusician\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    private final List\u003cString\u003e tagNames;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    public TagMatchesPredicate(List\u003cString\u003e tagNames) {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"        this.tagNames \u003d tagNames;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    public boolean test(Musician musician) {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"        return tagNames.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"                .anyMatch(tagToMatch -\u003e musician.getTags().stream().anyMatch(","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"                        musicianTag -\u003e StringUtil.containsWordIgnoreCase(musicianTag.tagName, tagToMatch)","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"                ));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"    protected List\u003cString\u003e getTagNames() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"        return tagNames;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"        if (!(other instanceof TagMatchesPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate otherNameContainsKeywordsPredicate \u003d (TagMatchesPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"        return tagNames.equals(otherNameContainsKeywordsPredicate.tagNames);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"        return tagNames.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"        return new ToStringBuilder(this).add(\"tags\", tagNames).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tanyyyming":56}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    public static Musician[] getSampleMusicians() {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"        return new Musician[] {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"            new Musician(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"                getTagSet(\"friends\"), getTagSet(), getTagSet()),","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"            new Musician(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"                getTagSet(\"colleagues\", \"friends\"), getTagSet(), getTagSet()),","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"            new Musician(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"                getTagSet(\"neighbours\"), getTagSet(), getTagSet()),","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"            new Musician(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"                getTagSet(\"family\"), getTagSet(), getTagSet()),","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"            new Musician(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"                getTagSet(\"classmates\"), getTagSet(), getTagSet()),","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"            new Musician(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"                getTagSet(\"colleagues\"), getTagSet(), getTagSet())","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"        for (Musician sampleMusician : getSampleMusicians()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"            sampleAb.addMusician(sampleMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"     * Returns a musician set containing the list of musicians given.","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"    public static Set\u003cMusician\u003e getMusicianSet(Musician... musicians) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"        return Arrays.stream(musicians).collect(Collectors.toSet());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tanyyyming":6,"wanghejin":14,"yytan25":7,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"DeltonCheng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.BandName;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":" * Jackson-friendly version of {@link Band}.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"public class JsonAdaptedBand {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Band\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"    private final String name;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"    private final List\u003cJsonAdaptedMusician\u003e musicians \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"    private final List\u003cJsonAdaptedTag\u003e genres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"     * Constructs a {@code JsonAdaptedMusician} with the given band details.","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"    public JsonAdaptedBand(@JsonProperty(\"name\") String name, @JsonProperty(\"genres\") HashSet genres,","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"                               @JsonProperty(\"musicians\") List\u003cJsonAdaptedMusician\u003e musicians) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"        if (musicians !\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"            this.musicians.addAll(musicians);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"        // if (genres !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"        //    this.genres.addAll(genres);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"DeltonCheng"},"content":"        //}","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"     * Converts a given {@code Band} into this class for Jackson use.","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"    public JsonAdaptedBand(Band source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"        //genres.addAll(source.getGenres().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"DeltonCheng"},"content":"        //.map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"        //.collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"        musicians.addAll(source.getMusicians().stream().map(JsonAdaptedMusician::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"DeltonCheng"},"content":"     * Converts this Jackson-friendly adapted musician object into the model\u0027s {@code Musician} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"DeltonCheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted musician.","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"DeltonCheng"},"content":"    public Band toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"        // final List\u003cTag\u003e bandGenres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"        final HashSet\u003cMusician\u003e bandMusicians \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"        // for (JsonAdaptedTag genre : genres) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"DeltonCheng"},"content":"        //    bandGenres.add(genre.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"        // }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"DeltonCheng"},"content":"        for (JsonAdaptedMusician musician : musicians) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"            bandMusicians.add(musician.toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"DeltonCheng"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"DeltonCheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"DeltonCheng"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"DeltonCheng"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"DeltonCheng"},"content":"        final BandName modelName \u003d new BandName(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"DeltonCheng"},"content":"        final Set\u003cTag\u003e modelGenres \u003d new HashSet\u003c\u003e(); // bandGenres","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"DeltonCheng"},"content":"        return new Band(modelName, modelGenres, bandMusicians);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"DeltonCheng":82}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGenre.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.Genre;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":" * Jackson-friendly version of {@link Genre}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"public class JsonAdaptedGenre extends JsonAdaptedTag {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    public JsonAdaptedGenre(String genre) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"        super(genre);","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    public JsonAdaptedGenre(Tag source) {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        super(source);","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        if (!Genre.isValidGenreName(super.getTagName())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"            throw new IllegalValueException(Genre.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"        return new Genre(super.getTagName());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tanyyyming":32}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInstrument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.Instrument;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":" * Jackson-friendly version of {@link Instrument}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"public class JsonAdaptedInstrument extends JsonAdaptedTag {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    public JsonAdaptedInstrument(String instrument) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"        super(instrument);","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"    public JsonAdaptedInstrument(Tag source) {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        super(source);","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        if (!Instrument.isValidInstrumentName(super.getTagName())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"            throw new IllegalValueException(Instrument.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"        return new Instrument(super.getTagName());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tanyyyming":32}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMusician.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":" * Jackson-friendly version of {@link Musician}.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"class JsonAdaptedMusician {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Musician\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"    private final List\u003cJsonAdaptedInstrument\u003e instruments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"    private final List\u003cJsonAdaptedGenre\u003e genres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"     * Constructs a {@code JsonAdaptedMusician} with the given musician details.","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"    public JsonAdaptedMusician(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"shuyangk"},"content":"                               @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"                               @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"                               @JsonProperty(\"instruments\") List\u003cJsonAdaptedInstrument\u003e instruments,","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"                               @JsonProperty(\"genres\") List\u003cJsonAdaptedGenre\u003e genres) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"        if (instruments !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"            this.instruments.addAll(instruments);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"        if (genres !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"            this.genres.addAll(genres);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"     * Converts a given {@code Musician} into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"    public JsonAdaptedMusician(Musician source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"        instruments.addAll(source.getInstruments().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"                .map(JsonAdaptedInstrument::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"        genres.addAll(source.getGenres().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"                .map(JsonAdaptedGenre::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"     * Converts this Jackson-friendly adapted musician object into the model\u0027s {@code Musician} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"    public Musician toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"        final List\u003cTag\u003e musicianTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"        final List\u003cTag\u003e musicianInstruments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"        final List\u003cTag\u003e musicianGenres \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":85,"author":{"gitId":"tanyyyming"},"content":"            musicianTags.add(tag.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"tanyyyming"},"content":"        for (JsonAdaptedTag instrument : instruments) {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"tanyyyming"},"content":"            musicianInstruments.add(instrument.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"tanyyyming"},"content":"        for (JsonAdaptedTag genre : genres) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"tanyyyming"},"content":"            musicianGenres.add(genre.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"tanyyyming"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(musicianTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"tanyyyming"},"content":"        final Set\u003cTag\u003e modelInstruments \u003d new HashSet\u003c\u003e(musicianInstruments);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"tanyyyming"},"content":"        final Set\u003cTag\u003e modelGenres \u003d new HashSet\u003c\u003e(musicianGenres);","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"shuyangk"},"content":"        return new Musician(modelName, modelPhone, modelEmail, modelTags, modelInstruments, modelGenres);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanyyyming":31,"wanghejin":14,"shuyangk":2,"-":77}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    public static final String MESSAGE_DUPLICATE_MUSICIAN \u003d \"Persons list contains duplicate musician(s).\";","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"    public static final String MESSAGE_DUPLICATE_BAND \u003d \"Band list contains duplicate band(s).\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    private final List\u003cJsonAdaptedMusician\u003e musicians \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"    private final List\u003cJsonAdaptedBand\u003e bands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given musicians.","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"musicians\") List\u003cJsonAdaptedMusician\u003e musicians,","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"                                       @JsonProperty(\"bands\") List\u003cJsonAdaptedBand\u003e bands) {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"        this.musicians.addAll(musicians);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"        this.bands.addAll(bands);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        musicians.addAll(source.getMusicianList().stream().map(JsonAdaptedMusician::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"        bands.addAll(source.getBandList().stream().map(JsonAdaptedBand::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        for (JsonAdaptedMusician jsonAdaptedMusician : musicians) {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"            Musician musician \u003d jsonAdaptedMusician.toModelType();","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"            if (addressBook.hasMusician(musician)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"            addressBook.addMusician(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"        for (JsonAdaptedBand jsonAdaptedBand : bands) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"            Band band \u003d jsonAdaptedBand.toModelType();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"DeltonCheng"},"content":"            if (addressBook.hasBand(band)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_BAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"DeltonCheng"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"            addressBook.addBand(band);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DeltonCheng":16,"wanghejin":10,"-":48}},{"path":"src/main/java/seedu/address/ui/BandCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":" * An UI component that displays information of a {@code Band}.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"public class BandCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    private static final String FXML \u003d \"BandListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    public final Band band;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    private Label name;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"    private FlowPane genres;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"     * Creates a {@code BandCode} with the given {@code Band} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"    public BandCard(Band band, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        this.band \u003d band;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        name.setText(band.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        band.getGenres().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"                .forEach(tag -\u003e genres.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wanghejin":51}},{"path":"src/main/java/seedu/address/ui/BandListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"public class BandListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    private static final String FXML \u003d \"BandListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BandListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    private ListView\u003cBand\u003e bandListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     * Creates a {@code BandListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    public BandListPanel(ObservableList\u003cBand\u003e bandList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        bandListView.setItems(bandList);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"        bandListView.setCellFactory(listView -\u003e new BandListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Musician} using a {@code PersonCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    class BandListViewCell extends ListCell\u003cBand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        protected void updateItem(Band band, boolean empty) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"            super.updateItem(band, empty);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"            if (empty || band \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"                setGraphic(new BandCard(band, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wanghejin":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"shuyangk"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"shuyangk"},"content":"            \"https://github.com/AY2324S1-CS2103T-W11-3/tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"shuyangk":2,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    private BandListPanel bandListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"    private StackPane bandListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"wanghejin"},"content":"        bandListPanel \u003d new BandListPanel(logic.getFilteredBandList());","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"wanghejin"},"content":"        bandListPanelPlaceholder.getChildren().add(bandListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wanghejin":8,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":" * An UI component that displays information of a {@code Musician}.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    public final Musician musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"    private FlowPane instruments;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"    private FlowPane genres;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"     * Creates a {@code PersonCode} with the given {@code Musician} and index to display.","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"    public PersonCard(Musician musician, int displayedIndex) {","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"        this.musician \u003d musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        name.setText(musician.getName().fullName);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        phone.setText(musician.getPhone().value);","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        email.setText(musician.getEmail().value);","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        musician.getTags().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"        musician.getInstruments().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"                .forEach(tag -\u003e instruments.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"        musician.getGenres().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"                .forEach(tag -\u003e genres.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tanyyyming":10,"wanghejin":10,"-":46}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    private ListView\u003cMusician\u003e personListView;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    public PersonListPanel(ObservableList\u003cMusician\u003e musicianList) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        personListView.setItems(musicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Musician} using a {@code PersonCard}.","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"    class PersonListViewCell extends ListCell\u003cMusician\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        protected void updateItem(Musician musician, boolean empty) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"            super.updateItem(musician, empty);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"            if (empty || musician \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"                setGraphic(new PersonCard(musician, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wanghejin":10,"-":39}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/logo.png\";","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wanghejin":1,"-":87}},{"path":"src/main/resources/view/BandListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"      \u003cVBox spacing\u003d\"5\" fx:id\u003d\"tagsDisplayBox\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"        \u003c!-- Add conditional rendering to HBox containing genres FlowPane --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"        \u003cHBox fx:id\u003d\"genresBox\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"          \u003cFlowPane fx:id\u003d\"genres\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wanghejin":38}},{"path":"src/main/resources/view/BandListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"  \u003cListView fx:id\u003d\"bandListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wanghejin":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":355,"author":{"gitId":"tanyyyming"},"content":"#instruments {","lastModifiedDate":"2023-10-12"},{"lineNumber":356,"author":{"gitId":"tanyyyming"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-12"},{"lineNumber":357,"author":{"gitId":"tanyyyming"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-12"},{"lineNumber":358,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":359,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":360,"author":{"gitId":"tanyyyming"},"content":"#instruments .label {","lastModifiedDate":"2023-10-12"},{"lineNumber":361,"author":{"gitId":"tanyyyming"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-12"},{"lineNumber":362,"author":{"gitId":"tanyyyming"},"content":"    -fx-background-color: #43A944;","lastModifiedDate":"2023-10-12"},{"lineNumber":363,"author":{"gitId":"tanyyyming"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-12"},{"lineNumber":364,"author":{"gitId":"tanyyyming"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-12"},{"lineNumber":365,"author":{"gitId":"tanyyyming"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-12"},{"lineNumber":366,"author":{"gitId":"tanyyyming"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-12"},{"lineNumber":367,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":368,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":369,"author":{"gitId":"tanyyyming"},"content":"#genres {","lastModifiedDate":"2023-10-12"},{"lineNumber":370,"author":{"gitId":"tanyyyming"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-12"},{"lineNumber":371,"author":{"gitId":"tanyyyming"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-12"},{"lineNumber":372,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":373,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":374,"author":{"gitId":"tanyyyming"},"content":"#genres .label {","lastModifiedDate":"2023-10-12"},{"lineNumber":375,"author":{"gitId":"tanyyyming"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-12"},{"lineNumber":376,"author":{"gitId":"tanyyyming"},"content":"    -fx-background-color: #C8890D;","lastModifiedDate":"2023-10-12"},{"lineNumber":377,"author":{"gitId":"tanyyyming"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-12"},{"lineNumber":378,"author":{"gitId":"tanyyyming"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-12"},{"lineNumber":379,"author":{"gitId":"tanyyyming"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-12"},{"lineNumber":380,"author":{"gitId":"tanyyyming"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-12"},{"lineNumber":381,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"tanyyyming":28,"wanghejin":1,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"         title\u003d\"BandConnect++\" minWidth\u003d\"900\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    \u003cImage url\u003d\"@/images/logo.png\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"        \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"          \u003cVBox fx:id\u003d\"musicianList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"                HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"            \u003cLabel text\u003d\"My Musicians\" style\u003d\"-fx-font-size: 20px;\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"          \u003cVBox fx:id\u003d\"bandList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"                HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"            \u003cLabel text\u003d\"My Bands\" style\u003d\"-fx-font-size: 22px;\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"            \u003cStackPane fx:id\u003d\"bandListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"wanghejin":17,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"      \u003cVBox spacing\u003d\"5\" fx:id\u003d\"tagsDisplayBox\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"        \u003c!-- Add conditional rendering to HBox containing tags FlowPane --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"        \u003cHBox fx:id\u003d\"tagsBox\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"        \u003c!-- Add conditional rendering to HBox containing instruments FlowPane --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"        \u003cHBox fx:id\u003d\"instrumentsBox\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"          \u003cFlowPane fx:id\u003d\"instruments\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"        \u003c!-- Add conditional rendering to HBox containing genres FlowPane --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"        \u003cHBox fx:id\u003d\"genresBox\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"          \u003cFlowPane fx:id\u003d\"genres\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanyyyming":13,"-":35}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"        assertNotNull(AppUtil.getImage(\"/images/logo.png\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wanghejin":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.ListCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"    public void getFilteredMusicianList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredMusicianList().remove(0));","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"shuyangk"},"content":"                + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"wanghejin"},"content":"        Musician expectedMusician \u003d new MusicianBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"wanghejin"},"content":"        expectedModel.addMusician(expectedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wanghejin":9,"shuyangk":1,"yytan25":2,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddBandCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.ACE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"DeltonCheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.AddBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.testutil.BandBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"public class AddBandCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"    public void constructor_nullBand_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBandCommand(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"    public void execute_musicianAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommandTest.ModelStubAcceptingBandAdded modelStub \u003d new AddBandCommandTest.ModelStubAcceptingBandAdded();","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"        Band validBand \u003d new BandBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"DeltonCheng"},"content":"        CommandResult commandResult \u003d new AddBandCommand(validBand).execute(modelStub);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(String.format(AddBandCommand.MESSAGE_SUCCESS, Messages.format(validBand)),","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(Arrays.asList(validBand), modelStub.bandsAdded);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"DeltonCheng"},"content":"    public void execute_duplicateBand_throwsCommandException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"DeltonCheng"},"content":"        Band validBand \u003d new BandBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommand addBandCommand \u003d new AddBandCommand(validBand);","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommandTest.ModelStub modelStub \u003d new AddBandCommandTest.ModelStubWithBand(validBand);","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"DeltonCheng"},"content":"                AddBandCommand.MESSAGE_DUPLICATE_BAND, () -\u003e addBandCommand.execute(modelStub));","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"DeltonCheng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"DeltonCheng"},"content":"        Band coldplay \u003d new BandBuilder().withName(\"Coldplay\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"DeltonCheng"},"content":"        Band imagineDragons \u003d new BandBuilder().withName(\"ImagineDragons\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommand addColdplayCommand \u003d new AddBandCommand(coldplay);","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommand addImagineDragonsCommand \u003d new AddBandCommand(imagineDragons);","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"DeltonCheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(addColdplayCommand.equals(addColdplayCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommand addColdplayCommandCopy \u003d new AddBandCommand(coldplay);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(addColdplayCommand.equals(addColdplayCommandCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"DeltonCheng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(addColdplayCommand.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"DeltonCheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(addColdplayCommand.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"DeltonCheng"},"content":"        // different musician -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(addColdplayCommand.equals(addImagineDragonsCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"DeltonCheng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"DeltonCheng"},"content":"        AddBandCommand addBandCommand \u003d new AddBandCommand(ACE);","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"DeltonCheng"},"content":"        String expected \u003d AddBandCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ACE + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(expected, addBandCommand.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"DeltonCheng"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"DeltonCheng"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"DeltonCheng"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"DeltonCheng"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"DeltonCheng"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"DeltonCheng"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"DeltonCheng"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"DeltonCheng"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"DeltonCheng"},"content":"        public void addMusician(Musician musician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"DeltonCheng"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"DeltonCheng"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"DeltonCheng"},"content":"        public void deleteMusician(Musician target) {","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"DeltonCheng"},"content":"        public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"DeltonCheng"},"content":"        public ObservableList\u003cMusician\u003e getFilteredMusicianList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"DeltonCheng"},"content":"        public ObservableList\u003cBand\u003e getFilteredBandList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"DeltonCheng"},"content":"        public void updateFilteredMusicianList(Predicate\u003cMusician\u003e predicate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredBandMusicianList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"wanghejin"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredBandList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"wanghejin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"DeltonCheng"},"content":"        public void addBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasMusicianInBand(int addInto, int toAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"DeltonCheng"},"content":"        public void addMusicianToBand(int addInto, int toAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"DeltonCheng"},"content":"        public void deleteBand(Band target) {","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"DeltonCheng"},"content":"     * A Model stub that contains a single band.","lastModifiedDate":"2023-10-20"},{"lineNumber":203,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"DeltonCheng"},"content":"    private class ModelStubWithBand extends AddBandCommandTest.ModelStub {","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"DeltonCheng"},"content":"        private final Band band;","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"DeltonCheng"},"content":"        ModelStubWithBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"DeltonCheng"},"content":"            this.band \u003d band;","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"DeltonCheng"},"content":"            return this.band.isSameBand(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"DeltonCheng"},"content":"     * A Model stub that always accept the band being added.","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"DeltonCheng"},"content":"    private class ModelStubAcceptingBandAdded extends AddBandCommandTest.ModelStub {","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"DeltonCheng"},"content":"        final ArrayList\u003cBand\u003e bandsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"DeltonCheng"},"content":"            return bandsAdded.stream().anyMatch(band::isSameBand);","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"DeltonCheng"},"content":"        public void addBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"DeltonCheng"},"content":"            bandsAdded.add(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"DeltonCheng"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"DeltonCheng"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"DeltonCheng":232,"wanghejin":7,"yytan25":1}},{"path":"src/test/java/seedu/address/logic/commands/AddMusicianToBandCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DeltonCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"DeltonCheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"DeltonCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"DeltonCheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"DeltonCheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.AddBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.band.AddMusicianToBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.AddCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.UniqueBandList;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.musician.UniqueMusicianList;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.testutil.BandBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"public class AddMusicianToBandCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"    public void constructor_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"        Index bandIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMusicianToBandCommand(bandIndex, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"DeltonCheng"},"content":"    public void constructor_nullBand_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"DeltonCheng"},"content":"        Index musicianIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMusicianToBandCommand(null, musicianIndex));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"    public void constructor_nullBandAndMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMusicianToBandCommand(null, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"DeltonCheng"},"content":"    public void execute_musicianAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"yytan25"},"content":"        AddMusicianToBandCommandTest.ModelStubAcceptingMusicianAddedToBand modelBandStub \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"                new AddMusicianToBandCommandTest.ModelStubAcceptingMusicianAddedToBand();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"DeltonCheng"},"content":"        Musician validMusician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"DeltonCheng"},"content":"        Band validBand \u003d new BandBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"DeltonCheng"},"content":"        CommandResult addCommandResult \u003d new AddCommand(validMusician).execute(modelBandStub);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"DeltonCheng"},"content":"        CommandResult addBandCommandResult \u003d new AddBandCommand(validBand).execute(modelBandStub);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"DeltonCheng"},"content":"        Index bandIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"        Index musicianIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"yytan25"},"content":"        CommandResult commandResult \u003d new AddMusicianToBandCommand(bandIndex, musicianIndex).execute(modelBandStub);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"yytan25"},"content":"        assertEquals(String.format(AddMusicianToBandCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"DeltonCheng"},"content":"                        Messages.format(modelBandStub.bandsAdded.get(bandIndex),","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"DeltonCheng"},"content":"                                modelBandStub.musiciansAdded.get(musicianIndex))),","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"DeltonCheng"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(validBand, modelBandStub.bandsAdded.get(bandIndex));","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(validBand.getMusicians(), modelBandStub.bandsAdded.get(bandIndex).getMusicians());","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"DeltonCheng"},"content":"    public void execute_duplicateMusicianAddedtoBand_throwsCommandException() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"yytan25"},"content":"        AddMusicianToBandCommandTest.ModelStubAcceptingMusicianAddedToBand modelBandStub \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"yytan25"},"content":"                new AddMusicianToBandCommandTest.ModelStubAcceptingMusicianAddedToBand();","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"DeltonCheng"},"content":"        Musician validMusician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"DeltonCheng"},"content":"        Band validBand \u003d new BandBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"DeltonCheng"},"content":"        CommandResult addCommandResult \u003d new AddCommand(validMusician).execute(modelBandStub);","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"DeltonCheng"},"content":"        CommandResult addBandCommandResult \u003d new AddBandCommand(validBand).execute(modelBandStub);","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"DeltonCheng"},"content":"        Index bandIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"DeltonCheng"},"content":"        Index musicianIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"DeltonCheng"},"content":"        CommandResult firstAddMusiciancommandResult \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"yytan25"},"content":"                new AddMusicianToBandCommand(bandIndex, musicianIndex).execute(modelBandStub);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"yytan25"},"content":"                AddMusicianToBandCommand.MESSAGE_DUPLICATE_MUSICIAN, () -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"yytan25"},"content":"                        new AddMusicianToBandCommand(bandIndex, musicianIndex).execute(modelBandStub));","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"DeltonCheng"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"DeltonCheng"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"DeltonCheng"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"DeltonCheng"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"DeltonCheng"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"DeltonCheng"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"DeltonCheng"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"DeltonCheng"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"DeltonCheng"},"content":"        public void addMusician(Musician musician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"DeltonCheng"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"DeltonCheng"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"DeltonCheng"},"content":"        public void deleteMusician(Musician target) {","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"DeltonCheng"},"content":"        public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"DeltonCheng"},"content":"        public ObservableList\u003cMusician\u003e getFilteredMusicianList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"DeltonCheng"},"content":"        public ObservableList\u003cBand\u003e getFilteredBandList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredMusicianList(Predicate\u003cMusician\u003e predicate) {","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"wanghejin"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredBandList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"wanghejin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredBandMusicianList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"shuyangk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"DeltonCheng"},"content":"        public void addBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasMusicianInBand(int addInto, int toAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"DeltonCheng"},"content":"        public void addMusicianToBand(int addInto, int toAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"DeltonCheng"},"content":"        public void deleteBand(Band target) {","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"DeltonCheng"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"DeltonCheng"},"content":"     * A Model stub that always accept the musician being added into the band.","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"DeltonCheng"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":203,"author":{"gitId":"yytan25"},"content":"    private class ModelStubAcceptingMusicianAddedToBand extends AddMusicianToBandCommandTest.ModelStub {","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"DeltonCheng"},"content":"        final UniqueBandList bandsAdded \u003d new UniqueBandList();","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"DeltonCheng"},"content":"        final UniqueMusicianList musiciansAdded \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasMusicianInBand(int bandToAddInto, int musicianToAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(bandToAddInto);","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(musicianToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"DeltonCheng"},"content":"            Index bandIndex \u003d Index.fromZeroBased(bandToAddInto);","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"DeltonCheng"},"content":"            Index musicianIndex \u003d Index.fromZeroBased(musicianToAdd);","lastModifiedDate":"2023-10-22"},{"lineNumber":212,"author":{"gitId":"DeltonCheng"},"content":"            return bandsAdded.get(bandIndex)","lastModifiedDate":"2023-10-22"},{"lineNumber":213,"author":{"gitId":"DeltonCheng"},"content":"                    .hasMusician(musiciansAdded.get(musicianIndex));","lastModifiedDate":"2023-10-22"},{"lineNumber":214,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"DeltonCheng"},"content":"        public void addMusicianToBand(int bandToAddInto, int musicianToAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"DeltonCheng"},"content":"            Index bandIndex \u003d Index.fromZeroBased(bandToAddInto);","lastModifiedDate":"2023-10-22"},{"lineNumber":218,"author":{"gitId":"DeltonCheng"},"content":"            Index musicianIndex \u003d Index.fromZeroBased(musicianToAdd);","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"DeltonCheng"},"content":"            bandsAdded.get(bandIndex).getModifiableMusicianList()","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"DeltonCheng"},"content":"                    .add(musiciansAdded.get(musicianIndex));","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"DeltonCheng"},"content":"        public void addMusician(Musician musician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(musician);","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"DeltonCheng"},"content":"            musiciansAdded.add(musician);","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"DeltonCheng"},"content":"        public void addBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"DeltonCheng"},"content":"            bandsAdded.add(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"DeltonCheng"},"content":"            return bandsAdded.contains(band);","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"DeltonCheng"},"content":"            requireNonNull(musician);","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"DeltonCheng"},"content":"            return musiciansAdded.contains(musician);","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"DeltonCheng"},"content":"        public ObservableList\u003cBand\u003e getFilteredBandList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"DeltonCheng"},"content":"            return new FilteredList\u003c\u003e(bandsAdded.asUnmodifiableObservableList());","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":246,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":247,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredBandList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-28"},{"lineNumber":248,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":249,"author":{"gitId":"wanghejin"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":250,"author":{"gitId":"DeltonCheng"},"content":"        public ObservableList\u003cMusician\u003e getFilteredMusicianList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"DeltonCheng"},"content":"            return new FilteredList\u003c\u003e(musiciansAdded.asUnmodifiableObservableList());","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"DeltonCheng"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":255,"author":{"gitId":"DeltonCheng"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"DeltonCheng"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"DeltonCheng":231,"wanghejin":10,"shuyangk":1,"yytan25":17}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.EditMusicianDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"    public static final EditCommand.EditMusicianDescriptor DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"    public static final EditCommand.EditMusicianDescriptor DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        DESC_AMY \u003d new EditMusicianDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"shuyangk"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        DESC_BOB \u003d new EditMusicianDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"shuyangk"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"shuyangk"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"     * - the address book, filtered musician list and selected musician in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"        List\u003cMusician\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":109,"author":{"gitId":"wanghejin"},"content":"     * Updates {@code model}\u0027s filtered list to show only the musician at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":112,"author":{"gitId":"wanghejin"},"content":"    public static void showMusicianAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"wanghejin"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMusicianList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"wanghejin"},"content":"        Musician musician \u003d model.getFilteredMusicianList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"wanghejin"},"content":"        final String[] splitName \u003d musician.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"        model.updateFilteredMusicianList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"wanghejin"},"content":"        assertEquals(1, model.getFilteredMusicianList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wanghejin":17,"shuyangk":3,"yytan25":1,"-":101}},{"path":"src/test/java/seedu/address/logic/commands/FindBandCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MUSICIANS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getOneBandAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.ACE;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.BOOM;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.CANDY;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.DRAGON;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.ELISE;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.CARL;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.DANIEL;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ELLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.FIONA;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.GEORGE;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"import seedu.address.logic.commands.band.FindBandCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.BandNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"class FindBandCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"    void execute_validBandNameNoMusician_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MUSICIANS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate predicate \u003d new BandNameContainsKeywordsPredicate(\"ACE JAZZ\");","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        expectedModel.updateFilteredBandMusicianList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand command \u003d new FindBandCommand(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(), model.getFilteredMusicianList());","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(ACE), model.getFilteredBandList());","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"    void execute_validBandNameHasMusician_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MUSICIANS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate predicate \u003d new BandNameContainsKeywordsPredicate(\"dragon metal\");","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        expectedModel.updateFilteredBandMusicianList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand command \u003d new FindBandCommand(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL), model.getFilteredMusicianList());","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(DRAGON), model.getFilteredBandList());","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"    void execute_invalidBandNameListLengthOne_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"        // Reset model and expectedModel to contain only one band","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"        model \u003d new ModelManager(getOneBandAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"        expectedModel \u003d new ModelManager(getOneBandAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"        // unit test","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate predicate \u003d new BandNameContainsKeywordsPredicate(\"Black Pink\");","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        expectedModel.updateFilteredBandMusicianList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand command \u003d new FindBandCommand(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_UNKNOWN_BAND);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"                model.getFilteredMusicianList());","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(DRAGON), model.getFilteredBandList());","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"        // Reset model and expectedModel back for other tests","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"    void execute_invalidBandNameListLengthMoreThanOne_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate predicate \u003d new BandNameContainsKeywordsPredicate(\"Meowmeow\");","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        expectedModel.updateFilteredBandMusicianList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand command \u003d new FindBandCommand(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_UNKNOWN_BAND);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"                model.getFilteredMusicianList());","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(ACE, BOOM, CANDY, DRAGON, ELISE), model.getFilteredBandList());","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"                new BandNameContainsKeywordsPredicate(\"first_band\");","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"                new BandNameContainsKeywordsPredicate(\"second_band\");","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand listBandFirstCommand \u003d new FindBandCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand listBandSecondCommand \u003d new FindBandCommand(secondPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"wanghejin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"wanghejin"},"content":"        assertTrue(listBandFirstCommand.equals(listBandFirstCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"wanghejin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"wanghejin"},"content":"                new BandNameContainsKeywordsPredicate(\"first_band\");","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand listBandFirstCommandDeepCopy \u003d new FindBandCommand(firstPredicateCopy);","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand listBandFirstCommandCopy \u003d new FindBandCommand(firstPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"        assertTrue(listBandFirstCommand.equals(listBandFirstCommandDeepCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"wanghejin"},"content":"        assertTrue(listBandFirstCommand.equals(listBandFirstCommandCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"wanghejin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"wanghejin"},"content":"        assertFalse(listBandFirstCommand.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"wanghejin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"wanghejin"},"content":"        assertFalse(listBandFirstCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"wanghejin"},"content":"        // different musician -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"wanghejin"},"content":"        assertFalse(listBandFirstCommand.equals(listBandSecondCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"wanghejin"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"wanghejin"},"content":"        BandNameContainsKeywordsPredicate predicate \u003d new BandNameContainsKeywordsPredicate(\"Prima Donna\");","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"wanghejin"},"content":"        FindBandCommand findBandCommand \u003d new FindBandCommand(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"wanghejin"},"content":"        String expected \u003d FindBandCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expected, findBandCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"wanghejin":137}},{"path":"src/test/java/seedu/address/logic/commands/general/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.general;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wanghejin":1,"yytan25":1,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/general/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.general;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import static seedu.address.logic.commands.general.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yytan25":3,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/general/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.general;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import static seedu.address.logic.commands.general.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yytan25":3,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/musician/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"    public void execute_newMusician_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"        Musician validMusician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"        expectedModel.addMusician(validMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        assertCommandSuccess(new AddCommand(validMusician), model,","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validMusician)),","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"    public void execute_duplicateMusician_throwsCommandException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        Musician musicianInList \u003d model.getAddressBook().getMusicianList().get(0);","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(new AddCommand(musicianInList), model,","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"                AddCommand.MESSAGE_DUPLICATE_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wanghejin":12,"yytan25":1,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/musician/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"    public void constructor_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    public void execute_musicianAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        ModelStubAcceptingMusicianAdded modelStub \u003d new ModelStubAcceptingMusicianAdded();","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"        Musician validMusician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        CommandResult commandResult \u003d new AddCommand(validMusician).execute(modelStub);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validMusician)),","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(validMusician), modelStub.musiciansAdded);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"    public void execute_duplicateMusician_throwsCommandException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"        Musician validMusician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"        AddCommand addCommand \u003d new AddCommand(validMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        ModelStub modelStub \u003d new ModelStubWithMusician(validMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"                AddCommand.MESSAGE_DUPLICATE_MUSICIAN, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        Musician alice \u003d new MusicianBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"        Musician bob \u003d new MusicianBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"        // different musician -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"wanghejin"},"content":"        public void addMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"wanghejin"},"content":"        public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"wanghejin"},"content":"        public void deleteMusician(Musician target) {","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"wanghejin"},"content":"        public void setMusician(Musician target, Musician editedMusician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"wanghejin"},"content":"        public ObservableList\u003cMusician\u003e getFilteredMusicianList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"yytan25"},"content":"        public ObservableList\u003cBand\u003e getFilteredBandList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"yytan25"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredMusicianList(Predicate\u003cMusician\u003e predicate) {","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"wanghejin"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredBandList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"wanghejin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"wanghejin"},"content":"        public void updateFilteredBandMusicianList(Predicate\u003cBand\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"yytan25"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"yytan25"},"content":"        public boolean hasBand(Band band) {","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"yytan25"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"DeltonCheng"},"content":"        public void addBand(Band band) {","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"DeltonCheng"},"content":"        public boolean hasMusicianInBand(int addInto, int toAdd) {","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"DeltonCheng"},"content":"        public void addMusicianToBand(int addInto, int toAdd) {","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"DeltonCheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"DeltonCheng"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"yytan25"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"yytan25"},"content":"        public void deleteBand(Band target) {","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"wanghejin"},"content":"     * A Model stub that contains a single musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"wanghejin"},"content":"    private class ModelStubWithMusician extends ModelStub {","lastModifiedDate":"2023-10-10"},{"lineNumber":209,"author":{"gitId":"wanghejin"},"content":"        private final Musician musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"wanghejin"},"content":"        ModelStubWithMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":212,"author":{"gitId":"wanghejin"},"content":"            requireNonNull(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":213,"author":{"gitId":"wanghejin"},"content":"            this.musician \u003d musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"wanghejin"},"content":"        public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":218,"author":{"gitId":"wanghejin"},"content":"            requireNonNull(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":219,"author":{"gitId":"wanghejin"},"content":"            return this.musician.isSameMusician(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"wanghejin"},"content":"     * A Model stub that always accept the musician being added.","lastModifiedDate":"2023-10-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"wanghejin"},"content":"    private class ModelStubAcceptingMusicianAdded extends ModelStub {","lastModifiedDate":"2023-10-10"},{"lineNumber":227,"author":{"gitId":"wanghejin"},"content":"        final ArrayList\u003cMusician\u003e musiciansAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"wanghejin"},"content":"        public boolean hasMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":231,"author":{"gitId":"wanghejin"},"content":"            requireNonNull(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":232,"author":{"gitId":"wanghejin"},"content":"            return musiciansAdded.stream().anyMatch(musician::isSameMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"wanghejin"},"content":"        public void addMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":237,"author":{"gitId":"wanghejin"},"content":"            requireNonNull(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":238,"author":{"gitId":"wanghejin"},"content":"            musiciansAdded.add(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"DeltonCheng":18,"wanghejin":48,"yytan25":17,"-":164}},{"path":"src/test/java/seedu/address/logic/commands/musician/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMusicianAtIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"        Musician musicianToDelete \u003d model.getFilteredMusicianList().get(INDEX_FIRST_MUSICIAN.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MUSICIAN_SUCCESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"                Messages.format(musicianToDelete));","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        expectedModel.deleteMusician(musicianToDelete);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMusicianList().size() + 1);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        showMusicianAtIndex(model, INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        Musician musicianToDelete \u003d model.getFilteredMusicianList().get(INDEX_FIRST_MUSICIAN.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MUSICIAN_SUCCESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"                Messages.format(musicianToDelete));","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        expectedModel.deleteMusician(musicianToDelete);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"        showMusicianAtIndex(model, INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMusicianList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"        // different musician -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"wanghejin"},"content":"    private void showNoMusician(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"wanghejin"},"content":"        model.updateFilteredMusicianList(p -\u003e false);","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"        assertTrue(model.getFilteredMusicianList().isEmpty());","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wanghejin":29,"yytan25":1,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/musician/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMusicianAtIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.general.ClearCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand.EditMusicianDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.EditMusicianDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"        Musician editedMusician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor descriptor \u003d new EditMusicianDescriptorBuilder(editedMusician).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_MUSICIAN, descriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MUSICIAN_SUCCESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"                Messages.format(editedMusician));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"        expectedModel.setMusician(model.getFilteredMusicianList().get(0), editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        Index indexLastMusician \u003d Index.fromOneBased(model.getFilteredMusicianList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"        Musician lastMusician \u003d model.getFilteredMusicianList().get(indexLastMusician.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        MusicianBuilder musicianInList \u003d new MusicianBuilder(lastMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"        Musician editedMusician \u003d musicianInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor descriptor \u003d new EditMusicianDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastMusician, descriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MUSICIAN_SUCCESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"                Messages.format(editedMusician));","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"        expectedModel.setMusician(lastMusician, editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_MUSICIAN, new EditMusicianDescriptor());","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"wanghejin"},"content":"        Musician editedMusician \u003d model.getFilteredMusicianList().get(INDEX_FIRST_MUSICIAN.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MUSICIAN_SUCCESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"                Messages.format(editedMusician));","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"        showMusicianAtIndex(model, INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"        Musician musicianInFilteredList \u003d model.getFilteredMusicianList().get(INDEX_FIRST_MUSICIAN.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"        Musician editedMusician \u003d new MusicianBuilder(musicianInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_MUSICIAN,","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"                new EditMusicianDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MUSICIAN_SUCCESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"                Messages.format(editedMusician));","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"        expectedModel.setMusician(model.getFilteredMusicianList().get(0), editedMusician);","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"wanghejin"},"content":"    public void execute_duplicateMusicianUnfilteredList_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"wanghejin"},"content":"        Musician firstMusician \u003d model.getFilteredMusicianList().get(INDEX_FIRST_MUSICIAN.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor descriptor \u003d new EditMusicianDescriptorBuilder(firstMusician).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"wanghejin"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_MUSICIAN, descriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"    public void execute_duplicateMusicianFilteredList_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"wanghejin"},"content":"        showMusicianAtIndex(model, INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"wanghejin"},"content":"        // edit musician in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"wanghejin"},"content":"        Musician musicianInList \u003d model.getAddressBook().getMusicianList().get(INDEX_SECOND_MUSICIAN.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"wanghejin"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_MUSICIAN,","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"wanghejin"},"content":"                new EditMusicianDescriptorBuilder(musicianInList).build());","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"wanghejin"},"content":"    public void execute_invalidMusicianIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMusicianList().size() + 1);","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor descriptor \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"wanghejin"},"content":"                new EditMusicianDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"wanghejin"},"content":"    public void execute_invalidMusicianIndexFilteredList_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"wanghejin"},"content":"        showMusicianAtIndex(model, INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"wanghejin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"wanghejin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMusicianList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"wanghejin"},"content":"                new EditMusicianDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"wanghejin"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_MUSICIAN_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"wanghejin"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_MUSICIAN, DESC_AMY);","lastModifiedDate":"2023-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor copyDescriptor \u003d new EditMusicianDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"wanghejin"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_MUSICIAN, copyDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"wanghejin"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_MUSICIAN, DESC_AMY)));","lastModifiedDate":"2023-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"wanghejin"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_MUSICIAN, DESC_BOB)));","lastModifiedDate":"2023-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor editMusicianDescriptor \u003d new EditMusicianDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":184,"author":{"gitId":"wanghejin"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editMusicianDescriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":185,"author":{"gitId":"wanghejin"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editMusicianDescriptor\u003d\"","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"wanghejin"},"content":"                + editMusicianDescriptor + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"wanghejin":66,"yytan25":3,"-":121}},{"path":"src/test/java/seedu/address/logic/commands/musician/EditMusicianDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand.EditMusicianDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.EditMusicianDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"public class EditMusicianDescriptorTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"        EditMusicianDescriptor descriptorWithSameValues \u003d new EditMusicianDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor editedAmy \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"                new EditMusicianDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        editedAmy \u003d new EditMusicianDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        editedAmy \u003d new EditMusicianDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        editedAmy \u003d new EditMusicianDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        EditMusicianDescriptor editMusicianDescriptor \u003d new EditCommand.EditMusicianDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"        String expected \u003d EditCommand.EditMusicianDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"                + editMusicianDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"                + editMusicianDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"shuyangk"},"content":"                + editMusicianDescriptor.getEmail().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"                + editMusicianDescriptor.getTags().orElse(null) + \", instruments\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"                + editMusicianDescriptor.getInstruments().orElse(null) + \", genres\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"                + editMusicianDescriptor.getGenres().orElse(null) + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expected, editMusicianDescriptor.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tanyyyming":3,"wanghejin":13,"shuyangk":1,"yytan25":2,"-":50}},{"path":"src/test/java/seedu/address/logic/commands/musician/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.Messages.MESSAGE_MUSICIANS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.CARL;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ELLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.FIONA;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.TagMatchesPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e firstPredicates \u003d new HashSet\u003c\u003e(Arrays.asList(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e secondPredicates \u003d new HashSet\u003c\u003e(Arrays.asList(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e firstPredicatesCopy \u003d new HashSet\u003c\u003e(Arrays.asList(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"        FindCommand findFirstCommandDeepCopy \u003d new FindCommand(firstPredicatesCopy);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandDeepCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"        // different musician -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"    public void execute_zeroKeywords_noMusicianFound() {","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MUSICIANS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNameKeywordsPredicate(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(predicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"        expectedModel.updateFilteredMusicianList(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"    public void execute_multipleNameKeywords_multipleMusiciansFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MUSICIANS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNameKeywordsPredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(predicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"tanyyyming"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        expectedModel.updateFilteredMusicianList(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"tanyyyming"},"content":"    public void execute_mixedPredicates_singleMusicianFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"tanyyyming"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MUSICIANS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"tanyyyming"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNameKeywordsPredicate(\"Benson\");","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate tagPredicate \u003d prepareTagMatchesPredicate(\"friends\");","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(namePredicate, tagPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"tanyyyming"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"tanyyyming"},"content":"        expectedModel.updateFilteredMusicianList(namePredicate.and(tagPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"tanyyyming"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"tanyyyming"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredMusicianList());","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"tanyyyming"},"content":"    public void execute_mixedPredicates_noMusicianFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"tanyyyming"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MUSICIANS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"tanyyyming"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNameKeywordsPredicate(\"Kunz\");","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate tagPredicate \u003d prepareTagMatchesPredicate(\"friends\");","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(namePredicate, tagPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"tanyyyming"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"tanyyyming"},"content":"        expectedModel.updateFilteredMusicianList(namePredicate.and(tagPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"tanyyyming"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"tanyyyming"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMusicianList());","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(predicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"tanyyyming"},"content":"        FindCommand findCommand \u003d new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"tanyyyming"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicates + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"tanyyyming"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}. This parsing method is used","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"tanyyyming"},"content":"     * for the convenience of testing.","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":132,"author":{"gitId":"tanyyyming"},"content":"    private NameContainsKeywordsPredicate prepareNameKeywordsPredicate(String userInput) {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"tanyyyming"},"content":"     * Parses {@code userInput} into a {@code TagMatchesPredicate}. This parsing method is used for the","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"tanyyyming"},"content":"     * convenience of testing.","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"tanyyyming"},"content":"    private TagMatchesPredicate prepareTagMatchesPredicate(String userInput) {","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"tanyyyming"},"content":"        return new TagMatchesPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tanyyyming":63,"wanghejin":15,"yytan25":1,"-":64}},{"path":"src/test/java/seedu/address/logic/commands/musician/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.commands.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMusicianAtIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        showMusicianAtIndex(model, INDEX_FIRST_MUSICIAN);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wanghejin":4,"yytan25":1,"-":34}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.general.ClearCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.general.ExitCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.general.HelpCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.DeleteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.FindCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.ListCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.EditMusicianDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        Musician musician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(MusicianUtil.getAddCommand(musician));","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"        assertEquals(new AddCommand(musician), command);","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_MUSICIAN.getOneBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_MUSICIAN), command);","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        Musician musician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor descriptor \u003d new EditMusicianDescriptorBuilder(musician).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"                + INDEX_FIRST_MUSICIAN.getOneBased() + \" \" + MusicianUtil.getEditMusicianDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_MUSICIAN, descriptor), command);","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" n/\")));","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"                new NameContainsKeywordsPredicate(keywords)","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"        ));","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"        assertEquals(new FindCommand(predicates), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tanyyyming":7,"wanghejin":15,"yytan25":8,"-":75}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"        assertEquals(INDEX_FIRST_MUSICIAN, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        assertEquals(INDEX_FIRST_MUSICIAN, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"wanghejin":6,"-":167}},{"path":"src/test/java/seedu/address/logic/parser/musician/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        Musician expectedMusician \u003d new MusicianBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"shuyangk"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedMusician));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        Musician expectedMusicianMultipleTags \u003d new MusicianBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"shuyangk"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"                new AddCommand(expectedMusicianMultipleTags));","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"shuyangk"},"content":"               + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"shuyangk"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"shuyangk"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"wanghejin"},"content":"        Musician expectedMusician \u003d new MusicianBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"shuyangk"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"wanghejin"},"content":"                new AddCommand(expectedMusician));","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"shuyangk"},"content":"                + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"shuyangk"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wanghejin":12,"shuyangk":17,"yytan25":2,"-":144}},{"path":"src/test/java/seedu/address/logic/parser/musician/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.DeleteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_MUSICIAN));","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wanghejin":2,"yytan25":2,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/musician/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand.EditMusicianDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.EditMusicianDescriptorBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"        assertParseFailure(parser, \"1 k/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Musician} being edited,","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"shuyangk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"        Index targetIndex \u003d INDEX_SECOND_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":103,"author":{"gitId":"shuyangk"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"wanghejin"},"content":"        EditMusicianDescriptor descriptor \u003d new EditMusicianDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"shuyangk"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"wanghejin"},"content":"        Index targetIndex \u003d INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor descriptor \u003d new EditMusicianDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"wanghejin"},"content":"        Index targetIndex \u003d INDEX_THIRD_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"        EditCommand.EditMusicianDescriptor descriptor \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"wanghejin"},"content":"                new EditMusicianDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"wanghejin"},"content":"        descriptor \u003d new EditMusicianDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"wanghejin"},"content":"        descriptor \u003d new EditMusicianDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"wanghejin"},"content":"        descriptor \u003d new EditMusicianDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"wanghejin"},"content":"        Index targetIndex \u003d INDEX_FIRST_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"shuyangk"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"shuyangk"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"shuyangk"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"shuyangk"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"shuyangk"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"shuyangk"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"shuyangk"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":188,"author":{"gitId":"wanghejin"},"content":"        Index targetIndex \u003d INDEX_THIRD_MUSICIAN;","lastModifiedDate":"2023-10-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"wanghejin"},"content":"        EditMusicianDescriptor descriptor \u003d new EditMusicianDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tanyyyming":1,"wanghejin":21,"shuyangk":10,"yytan25":3,"-":161}},{"path":"src/test/java/seedu/address/logic/parser/musician/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.logic.parser.musician;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.FindCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.GenreMatchesPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.InstrumentMatchesPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.model.tag.TagMatchesPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"        assertParseFailure(parser, \" non-empty preamble\",","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"    public void parse_validArgsWithNameKeywords_returnsFindCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"))","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"        ));","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"        assertParseSuccess(parser, \" n/Alice n/Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"        assertParseSuccess(parser, \" \\n n/Alice \\n \\t n/Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"    public void parse_validArgsWithTagMatches_returnsFindCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"                new TagMatchesPredicate(Arrays.asList(\"friends\", \"cool\"))","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"        ));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"        assertParseSuccess(parser, \" t/friends t/cool\", expectedFindCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"        assertParseSuccess(parser, \" \\n t/friends \\n \\t t/cool  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"    public void parse_validArgsWithMixedPredicates_returnsFindCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"        HashSet\u003cPredicate\u003cMusician\u003e\u003e predicates \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\")),","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"                new InstrumentMatchesPredicate(Arrays.asList(\"guitar\", \"drums\")),","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"                new GenreMatchesPredicate(Arrays.asList(\"rock\"))","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"        ));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"                new FindCommand(predicates);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"        assertParseSuccess(parser, \" n/Alice g/rock i/guitar i/drums\", expectedFindCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"        // multiple whitespaces between keywords and interchanged order","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"        assertParseSuccess(parser, \" \\n n/Alice \\n \\t i/guitar \\t g/rock \\t i/drums\", expectedFindCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"tanyyyming":47,"wanghejin":1,"yytan25":2,"-":27}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.exceptions.DuplicateMusicianException;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"        assertEquals(Collections.emptyList(), addressBook.getMusicianList());","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"    public void resetData_withDuplicateMusicians_throwsDuplicateMusicianException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        // Two musicians with the same identity fields","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"shuyangk"},"content":"        Musician editedAlice \u003d new MusicianBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"        List\u003cMusician\u003e newMusicians \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newMusicians);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        assertThrows(DuplicateMusicianException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"    public void hasMusician_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasMusician(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"    public void hasMusician_musicianNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"        assertFalse(addressBook.hasMusician(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"    public void hasMusician_musicianInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"        addressBook.addMusician(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"        assertTrue(addressBook.hasMusician(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"    public void hasMusician_musicianWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"        addressBook.addMusician(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"shuyangk"},"content":"        Musician editedAlice \u003d new MusicianBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"wanghejin"},"content":"        assertTrue(addressBook.hasMusician(editedAlice));","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"    public void getMusicianList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getMusicianList().remove(0));","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{musicians\u003d\" + addressBook.getMusicianList() + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"     * A stub ReadOnlyAddressBook whose musicians list can violate interface constraints.","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"        private final ObservableList\u003cMusician\u003e musicians \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"        AddressBookStub(Collection\u003cMusician\u003e musicians) {","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"            this.musicians.setAll(musicians);","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"        public ObservableList\u003cMusician\u003e getMusicianList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"            return musicians;","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"DeltonCheng"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"DeltonCheng"},"content":"        public ObservableList\u003cBand\u003e getBandList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"DeltonCheng"},"content":"            return null; // to be implemented","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"DeltonCheng":5,"wanghejin":30,"shuyangk":2,"-":76}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MUSICIANS;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"    public void hasMusician_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasMusician(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"    public void hasMusician_musicianNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"        assertFalse(modelManager.hasMusician(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"    public void hasMusician_musicianInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"        modelManager.addMusician(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"wanghejin"},"content":"        assertTrue(modelManager.hasMusician(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"wanghejin"},"content":"    public void getFilteredMusicianList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"wanghejin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredMusicianList().remove(0));","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMusician(ALICE).withMusician(BENSON).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"wanghejin"},"content":"        modelManager.updateFilteredMusicianList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"wanghejin"},"content":"        modelManager.updateFilteredMusicianList(PREDICATE_SHOW_ALL_MUSICIANS);","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"wanghejin":16,"-":116}},{"path":"src/test/java/seedu/address/model/band/BandNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"public class BandNameTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BandName(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BandName(invalidName));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"    public void isValidName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"        // null name","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e BandName.isValidName(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"        // invalid name","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(BandName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(BandName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(BandName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(BandName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"        // valid name","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(BandName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(BandName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(BandName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(BandName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(BandName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"DeltonCheng"},"content":"        BandName name \u003d new BandName(\"Valid Name\");","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(name.equals(new BandName(\"Valid Name\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yytan25"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yytan25"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yytan25"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(name.equals(new BandName(\"Other Valid Name\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DeltonCheng":15,"yytan25":46}},{"path":"src/test/java/seedu/address/model/band/BandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.ACE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.testutil.BandBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"public class BandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"        Band band \u003d new BandBuilder().build();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e band.getGenres().remove(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"        String expected \u003d Band.class.getCanonicalName() + \"{name\u003d\" + ACE.getName()","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"                + \", genres\u003d\" + ACE.getGenres() + \", musicians\u003d\" + ACE.getMusicians() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"        assertEquals(expected, ACE.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wanghejin":1,"yytan25":24}},{"path":"src/test/java/seedu/address/model/band/UniqueBandListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.model.band;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.ACE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.BOOM;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.CANDY;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.ELISE;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ELLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.exceptions.BandNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.exceptions.DuplicateBandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.musician.exceptions.DuplicateMusicianException;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"import seedu.address.testutil.BandBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"public class UniqueBandListTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"    private final UniqueBandList uniqueBandList \u003d new UniqueBandList();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"    public void contains_nullBand_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.contains(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"    public void contains_bandNotInList_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"        assertFalse(uniqueBandList.contains(ACE));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"    public void contains_bandInList_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"        assertTrue(uniqueBandList.contains(ACE));","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"    public void add_nullBand_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.add(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"    public void add_duplicateBand_throwsDuplicateBandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"        assertThrows(DuplicateBandException.class, () -\u003e uniqueBandList.add(ACE));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"yytan25"},"content":"    public void add_duplicateBandWithNewMusician_throwsDuplicateBandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"        Band newAce \u003d new BandBuilder(ACE).withMusicians(ALICE)","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"yytan25"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"yytan25"},"content":"        assertThrows(DuplicateBandException.class, () -\u003e uniqueBandList.add(newAce));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"yytan25"},"content":"    public void setBand_nullTargetBand_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.setBand(null, ACE));","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"yytan25"},"content":"    public void setBand_nullEditedBand_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.setBand(ACE, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"yytan25"},"content":"    public void setBand_targetBandNotInList_throwsBandNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"yytan25"},"content":"        assertThrows(BandNotFoundException.class, () -\u003e uniqueBandList.setBand(ACE, ACE));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"yytan25"},"content":"    public void remove_nullBand_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.remove(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"yytan25"},"content":"    public void remove_bandDoesNotExist_throwsBandNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"yytan25"},"content":"        assertThrows(BandNotFoundException.class, () -\u003e uniqueBandList.remove(ACE));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"yytan25"},"content":"    public void remove_existingBandWithoutMusicians_removesBand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.remove(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"yytan25"},"content":"        UniqueBandList expectedUniqueBandList \u003d new UniqueBandList();","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"yytan25"},"content":"        assertEquals(expectedUniqueBandList, uniqueBandList);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"yytan25"},"content":"    public void remove_existingBandWithMusicians_removesBand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(CANDY);","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.remove(CANDY);","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"yytan25"},"content":"        UniqueBandList expectedUniqueBandList \u003d new UniqueBandList();","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"yytan25"},"content":"        assertEquals(expectedUniqueBandList, uniqueBandList);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"yytan25"},"content":"    public void setBands_uniqueBandList_replacesOwnListWithProvidedUniqueBandList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"yytan25"},"content":"        UniqueBandList expectedUniqueBandList \u003d new UniqueBandList();","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"yytan25"},"content":"        expectedUniqueBandList.add(BOOM);","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.setBands(expectedUniqueBandList);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"yytan25"},"content":"        assertEquals(expectedUniqueBandList, uniqueBandList);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"yytan25"},"content":"    public void setBands_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.setBands((List\u003cBand\u003e) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"yytan25"},"content":"    public void setBands_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"yytan25"},"content":"        List\u003cBand\u003e bandList \u003d Collections.singletonList(BOOM);","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.setBands(bandList);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"yytan25"},"content":"        UniqueBandList expectedUniqueBandList \u003d new UniqueBandList();","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"yytan25"},"content":"        expectedUniqueBandList.add(BOOM);","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"yytan25"},"content":"        assertEquals(expectedUniqueBandList, uniqueBandList);","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"yytan25"},"content":"    public void setBands_listWithDuplicateBands_throwsDuplicateBandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"yytan25"},"content":"        List\u003cBand\u003e listWithDuplicateBands \u003d Arrays.asList(ACE, ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"yytan25"},"content":"        assertThrows(DuplicateBandException.class, () -\u003e uniqueBandList.setBands(listWithDuplicateBands));","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"yytan25"},"content":"    public void hasMusician_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.hasMusician(0, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"yytan25"},"content":"    public void hasMusician_bandWithoutMusicians_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"wanghejin"},"content":"        assertFalse(uniqueBandList.hasMusician(0, BOB));","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"yytan25"},"content":"    public void hasMusician_musicianInBand_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ELISE);","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"yytan25"},"content":"        assertTrue(uniqueBandList.hasMusician(0, ELLE));","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"yytan25"},"content":"    public void hasMusician_musicianNotInBand_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ELISE);","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"wanghejin"},"content":"        assertFalse(uniqueBandList.hasMusician(0, BOB));","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"yytan25"},"content":"    public void addMusician_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ACE);","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"yytan25"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBandList.addMusician(","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"yytan25"},"content":"            0, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"yytan25"},"content":"    public void addMusician_duplicateMusician_throwsDuplicateMusicianException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"yytan25"},"content":"        uniqueBandList.add(ELISE);","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"yytan25"},"content":"        assertThrows(DuplicateMusicianException.class, () -\u003e uniqueBandList.addMusician(0, ELLE));","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"yytan25"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"yytan25"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"yytan25"},"content":"            -\u003e uniqueBandList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"yytan25"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"yytan25"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"yytan25"},"content":"        assertEquals(uniqueBandList.asUnmodifiableObservableList().toString(), uniqueBandList.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wanghejin":9,"yytan25":174}},{"path":"src/test/java/seedu/address/model/musician/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"wanghejin":1,"-":87}},{"path":"src/test/java/seedu/address/model/musician/MusicianTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"public class MusicianTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"        Musician musician \u003d new MusicianBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e musician.getTags().remove(0));","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    public void isSameMusician() {","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"        assertTrue(ALICE.isSameMusician(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"        assertFalse(ALICE.isSameMusician(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"        Musician editedAlice \u003d new MusicianBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"shuyangk"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        assertTrue(ALICE.isSameMusician(editedAlice));","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"        editedAlice \u003d new MusicianBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"        assertFalse(ALICE.isSameMusician(editedAlice));","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"        Musician editedBob \u003d new MusicianBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        assertFalse(BOB.isSameMusician(editedBob));","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"        editedBob \u003d new MusicianBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"        assertFalse(BOB.isSameMusician(editedBob));","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        Musician aliceCopy \u003d new MusicianBuilder(ALICE).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"        // different musician -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        Musician editedAlice \u003d new MusicianBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"        editedAlice \u003d new MusicianBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"wanghejin"},"content":"        editedAlice \u003d new MusicianBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"        editedAlice \u003d new MusicianBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"        String expected \u003d Musician.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"shuyangk"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"tanyyyming"},"content":"                + \", instruments\u003d\" + ALICE.getInstruments() + \", genres\u003d\" + ALICE.getGenres() + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tanyyyming":1,"wanghejin":25,"shuyangk":2,"-":68}},{"path":"src/test/java/seedu/address/model/musician/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"        // different musician -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"        assertFalse(predicate.test(new MusicianBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"        assertFalse(predicate.test(new MusicianBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"        assertFalse(predicate.test(new MusicianBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"shuyangk"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wanghejin":10,"shuyangk":1,"-":74}},{"path":"src/test/java/seedu/address/model/musician/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"wanghejin":1,"-":59}},{"path":"src/test/java/seedu/address/model/musician/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"wanghejin":1,"-":59}},{"path":"src/test/java/seedu/address/model/musician/UniqueMusicianListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.model.musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"DeltonCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.CARL;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"DeltonCheng"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.DANIEL;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"DeltonCheng"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"DeltonCheng"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.exceptions.DuplicateMusicianException;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.exceptions.MusicianNotFoundException;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"public class UniqueMusicianListTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"    private final UniqueMusicianList uniqueMusicianList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"    public void contains_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMusicianList.contains(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"    public void contains_musicianNotInList_returnsFalse() {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        assertFalse(uniqueMusicianList.contains(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"    public void contains_musicianInList_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        assertTrue(uniqueMusicianList.contains(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"    public void contains_musicianWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"shuyangk"},"content":"        Musician editedAlice \u003d new MusicianBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"        assertTrue(uniqueMusicianList.contains(editedAlice));","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"    public void add_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMusicianList.add(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"    public void add_duplicateMusician_throwsDuplicateMusicianException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"        assertThrows(DuplicateMusicianException.class, () -\u003e uniqueMusicianList.add(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"    public void setMusician_nullTargetMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMusicianList.setMusician(null, ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"    public void setMusician_nullEditedMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMusicianList.setMusician(ALICE, null));","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"    public void setMusician_targetMusicianNotInList_throwsMusicianNotFoundException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        assertThrows(MusicianNotFoundException.class, () -\u003e uniqueMusicianList.setMusician(ALICE, ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"wanghejin"},"content":"    public void setMusician_editedMusicianIsSameMusician_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.setMusician(ALICE, ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"wanghejin"},"content":"        UniqueMusicianList expectedUniqueMusicianList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"wanghejin"},"content":"        expectedUniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expectedUniqueMusicianList, uniqueMusicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"wanghejin"},"content":"    public void setMusician_editedMusicianHasSameIdentity_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"shuyangk"},"content":"        Musician editedAlice \u003d new MusicianBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.setMusician(ALICE, editedAlice);","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"        UniqueMusicianList expectedUniqueMusicianList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"wanghejin"},"content":"        expectedUniqueMusicianList.add(editedAlice);","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expectedUniqueMusicianList, uniqueMusicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"    public void setMusician_editedMusicianHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.setMusician(ALICE, BOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"        UniqueMusicianList expectedUniqueMusicianList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"wanghejin"},"content":"        expectedUniqueMusicianList.add(BOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expectedUniqueMusicianList, uniqueMusicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"wanghejin"},"content":"    public void setMusician_editedMusicianHasNonUniqueIdentity_throwsDuplicateMusicianException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(BOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"wanghejin"},"content":"        assertThrows(DuplicateMusicianException.class, () -\u003e uniqueMusicianList.setMusician(ALICE, BOB));","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"wanghejin"},"content":"    public void remove_nullMusician_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMusicianList.remove(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"wanghejin"},"content":"    public void remove_musicianDoesNotExist_throwsMusicianNotFoundException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"wanghejin"},"content":"        assertThrows(MusicianNotFoundException.class, () -\u003e uniqueMusicianList.remove(ALICE));","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"wanghejin"},"content":"    public void remove_existingMusician_removesMusician() {","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.remove(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"wanghejin"},"content":"        UniqueMusicianList expectedUniqueMusicianList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expectedUniqueMusicianList, uniqueMusicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians_nullUniqueMusicianList_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMusicianList.setMusicians((UniqueMusicianList) null));","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians_uniqueMusicianList_replacesOwnListWithProvidedUniqueMusicianList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"wanghejin"},"content":"        UniqueMusicianList expectedUniqueMusicianList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"wanghejin"},"content":"        expectedUniqueMusicianList.add(BOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.setMusicians(expectedUniqueMusicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expectedUniqueMusicianList, uniqueMusicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"wanghejin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMusicianList.setMusicians((List\u003cMusician\u003e) null));","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":155,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"wanghejin"},"content":"        List\u003cMusician\u003e musicianList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"wanghejin"},"content":"        uniqueMusicianList.setMusicians(musicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":158,"author":{"gitId":"wanghejin"},"content":"        UniqueMusicianList expectedUniqueMusicianList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-10"},{"lineNumber":159,"author":{"gitId":"wanghejin"},"content":"        expectedUniqueMusicianList.add(BOB);","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"wanghejin"},"content":"        assertEquals(expectedUniqueMusicianList, uniqueMusicianList);","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"wanghejin"},"content":"    public void setMusicians_listWithDuplicateMusicians_throwsDuplicateMusicianException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"wanghejin"},"content":"        List\u003cMusician\u003e listWithDuplicateMusicians \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"wanghejin"},"content":"        assertThrows(DuplicateMusicianException.class, () -\u003e uniqueMusicianList.setMusicians(","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"wanghejin"},"content":"                listWithDuplicateMusicians));","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"wanghejin"},"content":"            -\u003e uniqueMusicianList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"DeltonCheng"},"content":"    public void getMusician_indexWithinList_returnsMusician() {","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"DeltonCheng"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(uniqueMusicianList.getMusician(0), ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"DeltonCheng"},"content":"    public void getMusician_indexNotWithinList_throwsIndexOutOfBoundsError() {","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"DeltonCheng"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e uniqueMusicianList.getMusician(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":190,"author":{"gitId":"wanghejin"},"content":"        assertEquals(uniqueMusicianList.asUnmodifiableObservableList().toString(), uniqueMusicianList.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":192,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"DeltonCheng"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"DeltonCheng"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"DeltonCheng"},"content":"        UniqueMusicianList copyList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"DeltonCheng"},"content":"        copyList.add(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"DeltonCheng"},"content":"        // not same object but same hashcode","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"DeltonCheng"},"content":"        assertNotSame(uniqueMusicianList, copyList);","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(uniqueMusicianList.hashCode(), copyList.hashCode());","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"DeltonCheng"},"content":"    public void iterator() {","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"DeltonCheng"},"content":"        // empty iterator hasNext -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"DeltonCheng"},"content":"        Iterator\u003cMusician\u003e emptyIterated \u003d uniqueMusicianList.iterator();","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(emptyIterated.hasNext());","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"DeltonCheng"},"content":"        // empty iterator next -\u003e throws exception","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"DeltonCheng"},"content":"        assertThrows(NoSuchElementException.class, () -\u003e emptyIterated.next());","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"DeltonCheng"},"content":"        // iterator with a musician hasNext -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"DeltonCheng"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"DeltonCheng"},"content":"        Iterator\u003cMusician\u003e iterated \u003d uniqueMusicianList.iterator();","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(iterated.hasNext());","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"DeltonCheng"},"content":"        // iterator with musician next -\u003e returns the musician","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"DeltonCheng"},"content":"        assertEquals(iterated.next(), ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"DeltonCheng"},"content":"        // iterator with a musician hasNext after next -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(iterated.hasNext());","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"DeltonCheng"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"DeltonCheng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"DeltonCheng"},"content":"        uniqueMusicianList.add(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"DeltonCheng"},"content":"        uniqueMusicianList.add(BOB);","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"DeltonCheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"DeltonCheng"},"content":"        UniqueMusicianList copyList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"DeltonCheng"},"content":"        copyList.add(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"DeltonCheng"},"content":"        copyList.add(BOB);","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(uniqueMusicianList.equals(copyList));","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"DeltonCheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(uniqueMusicianList.equals(uniqueMusicianList));","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"DeltonCheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(uniqueMusicianList.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"DeltonCheng"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(uniqueMusicianList.equals(ALICE));","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"DeltonCheng"},"content":"        // empty list -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"DeltonCheng"},"content":"        UniqueMusicianList emptyList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(uniqueMusicianList.equals(emptyList));","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"DeltonCheng"},"content":"        // different musicians -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"DeltonCheng"},"content":"        UniqueMusicianList differentList \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"DeltonCheng"},"content":"        differentList.add(CARL);","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"DeltonCheng"},"content":"        differentList.add(DANIEL);","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"DeltonCheng"},"content":"        assertFalse(uniqueMusicianList.equals(differentList));","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"DeltonCheng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"DeltonCheng"},"content":"        // empty list and empty list -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"DeltonCheng"},"content":"        UniqueMusicianList emptyListTwo \u003d new UniqueMusicianList();","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"DeltonCheng"},"content":"        assertTrue(emptyList.equals(emptyListTwo));","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"DeltonCheng"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"DeltonCheng":78,"wanghejin":83,"shuyangk":2,"-":90}},{"path":"src/test/java/seedu/address/model/tag/GenreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.model.tag.Genre.VALID_GENRES;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"class GenreTest extends TagTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Genre(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    public void constructor_invalidGenreName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"        String invalidGenreName \u003d \"foo\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"        if (!VALID_GENRES.contains(invalidGenreName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"            assertThrows(IllegalArgumentException.class, () -\u003e new Genre(invalidGenreName));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tanyyyming":22}},{"path":"src/test/java/seedu/address/model/tag/InstrumentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.model.tag.Instrument.VALID_INSTRUMENTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"class InstrumentTest extends TagTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Instrument(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"    public void constructor_invalidInstrumentName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"        String invalidInstrumentName \u003d \"foo\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"        if (!VALID_INSTRUMENTS.contains(invalidInstrumentName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"            assertThrows(IllegalArgumentException.class, () -\u003e new Genre(invalidInstrumentName));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"tanyyyming":22}},{"path":"src/test/java/seedu/address/model/tag/TagMatchesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyyyming"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tanyyyming"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tanyyyming"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tanyyyming"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tanyyyming"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tanyyyming"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tanyyyming"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tanyyyming"},"content":"class TagMatchesPredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tanyyyming"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate firstPredicate \u003d new TagMatchesPredicate(Arrays.asList(\"firstTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate secondPredicate \u003d new TagMatchesPredicate(Arrays.asList(\"firstTag\", \"secondTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tanyyyming"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate firstPredicateCopy \u003d new TagMatchesPredicate(Arrays.asList(\"firstTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tanyyyming"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"        // different tag names -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"    void test_tagMatches_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"        // One tag","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate predicate \u003d new TagMatchesPredicate(Collections.singletonList(\"firstTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withTags(\"firstTag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"        // Fully matching tags","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"        predicate \u003d new TagMatchesPredicate(Arrays.asList(\"firstTag\", \"secondTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withTags(\"firstTag\", \"secondTag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tanyyyming"},"content":"        // Partially matching tag","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"        predicate \u003d new TagMatchesPredicate(Arrays.asList(\"firstTag\", \"secondTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withTags(\"firstTag\", \"thirdTag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tanyyyming"},"content":"        // Repeated tags","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tanyyyming"},"content":"        predicate \u003d new TagMatchesPredicate(Arrays.asList(\"firstTag\", \"firstTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withTags(\"firstTag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"tanyyyming"},"content":"        // Mixed-case tags","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"tanyyyming"},"content":"        predicate \u003d new TagMatchesPredicate(Arrays.asList(\"caseInsensitiveTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"tanyyyming"},"content":"        assertTrue(predicate.test(new MusicianBuilder().withTags(\"CASEinsenSITIVEtag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"tanyyyming"},"content":"    void test_tagMatches_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"tanyyyming"},"content":"        // Zero tags","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate predicate \u003d new TagMatchesPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"        assertFalse(predicate.test(new MusicianBuilder().withTags(\"firstTag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"        // Incomplete-matching tag","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"        predicate \u003d new TagMatchesPredicate(Arrays.asList(\"first\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"        assertFalse(predicate.test(new MusicianBuilder().withTags(\"firstTag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"        // Non-matching tag","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"        predicate \u003d new TagMatchesPredicate(Arrays.asList(\"thirdTag\", \"fourthTag\", \"fifthTag\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"        assertFalse(predicate.test(new MusicianBuilder().withTags(\"firstTag\", \"secondTag\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"    void testToString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"        List\u003cString\u003e tags \u003d List.of(\"tag1\", \"tag2\");","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"        TagMatchesPredicate predicate \u003d new TagMatchesPredicate(tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"        String expected \u003d TagMatchesPredicate.class.getCanonicalName() + \"{tags\u003d\" + tags + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tanyyyming":84}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMusicianTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.storage.JsonAdaptedMusician.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"public class JsonAdaptedMusicianTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"tanyyyming"},"content":"    private static final String INVALID_INSTRUMENT \u003d \"friend\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"tanyyyming"},"content":"    private static final String INVALID_GENRE \u003d \"friend\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"    private static final List\u003cJsonAdaptedInstrument\u003e VALID_INSTRUMENTS \u003d BENSON.getInstruments().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"tanyyyming"},"content":"            .map(JsonAdaptedInstrument::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"tanyyyming"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"tanyyyming"},"content":"    private static final List\u003cJsonAdaptedGenre\u003e VALID_GENRES \u003d BENSON.getGenres().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"            .map(JsonAdaptedGenre::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"    public void toModelType_validMusicianDetails_returnsMusician() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d new JsonAdaptedMusician(BENSON);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        assertEquals(BENSON, musician.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"                new JsonAdaptedMusician(INVALID_NAME,","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"shuyangk"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_TAGS, VALID_INSTRUMENTS, VALID_GENRES);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, musician::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d new JsonAdaptedMusician(null,","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"shuyangk"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_TAGS, VALID_INSTRUMENTS, VALID_GENRES);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, musician::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"                new JsonAdaptedMusician(VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"shuyangk"},"content":"                        VALID_EMAIL, VALID_TAGS, VALID_INSTRUMENTS, VALID_GENRES);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, musician::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d new JsonAdaptedMusician(VALID_NAME, null,","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"shuyangk"},"content":"                VALID_EMAIL, VALID_TAGS, VALID_INSTRUMENTS, VALID_GENRES);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, musician::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"                new JsonAdaptedMusician(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"shuyangk"},"content":"                        VALID_TAGS, VALID_INSTRUMENTS, VALID_GENRES);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, musician::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d new JsonAdaptedMusician(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"shuyangk"},"content":"                VALID_TAGS, VALID_INSTRUMENTS, VALID_GENRES);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, musician::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"wanghejin"},"content":"        JsonAdaptedMusician musician \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"shuyangk"},"content":"                new JsonAdaptedMusician(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"tanyyyming"},"content":"                        invalidTags, VALID_INSTRUMENTS, VALID_GENRES);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, musician::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"tanyyyming"},"content":"    public void toModelType_invalidInstruments_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"tanyyyming"},"content":"        List\u003cJsonAdaptedInstrument\u003e invalidInstruments \u003d new ArrayList\u003c\u003e(VALID_INSTRUMENTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"tanyyyming"},"content":"        invalidInstruments.add(new JsonAdaptedInstrument(INVALID_INSTRUMENT));","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"tanyyyming"},"content":"        JsonAdaptedMusician musician \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"tanyyyming"},"content":"                new JsonAdaptedMusician(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"tanyyyming"},"content":"                        VALID_TAGS, invalidInstruments, VALID_GENRES);","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"tanyyyming"},"content":"        assertThrows(IllegalValueException.class, musician::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"tanyyyming"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"tanyyyming"},"content":"    public void toModelType_invalidGenres_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"tanyyyming"},"content":"        List\u003cJsonAdaptedGenre\u003e invalidGenres \u003d new ArrayList\u003c\u003e(VALID_GENRES);","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"tanyyyming"},"content":"        invalidGenres.add(new JsonAdaptedGenre(INVALID_GENRE));","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"tanyyyming"},"content":"        JsonAdaptedMusician musician \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"tanyyyming"},"content":"                new JsonAdaptedMusician(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"tanyyyming"},"content":"                        VALID_TAGS, VALID_INSTRUMENTS, invalidGenres);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"tanyyyming"},"content":"        assertThrows(IllegalValueException.class, musician::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanyyyming":32,"wanghejin":23,"shuyangk":7,"-":64}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.HOON;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.IDA;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"    public void readAddressBook_invalidMusicianAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidMusicianAddressBook.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"    public void readAddressBook_invalidAndValidMusicianAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidMusicianAddressBook.json\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"        original.addMusician(HOON);","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"        original.removeMusician(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"wanghejin"},"content":"        original.addMusician(IDA);","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wanghejin":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    private static final Path TYPICAL_MUSICIANS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMusiciansAddressBook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"    private static final Path INVALID_MUSICIAN_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMusicianAddressBook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    private static final Path DUPLICATE_MUSICIAN_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMusicianAddressBook.json\");","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"    public void toModelType_typicalMusiciansFile_success() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MUSICIANS_FILE,","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"        AddressBook typicalMusiciansAddressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"        assertEquals(addressBookFromFile, typicalMusiciansAddressBook);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"    public void toModelType_invalidMusicianFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MUSICIAN_FILE,","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    public void toModelType_duplicateMusicians_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MUSICIAN_FILE,","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_MUSICIAN,","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wanghejin":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wanghejin":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withMusician(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"     * Adds a new {@code Musician} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"    public AddressBookBuilder withMusician(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"        addressBook.addMusician(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wanghejin":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/BandBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"DeltonCheng"},"content":"import seedu.address.model.band.BandName;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":" * A utility class to help with building Band objects.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"public class BandBuilder {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"    public static final String DEFAULT_NAME \u003d \"Ace Jazz\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"DeltonCheng"},"content":"    private BandName name;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    private Set\u003cTag\u003e genres;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"    private Set\u003cMusician\u003e musicians;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"     * Creates a {@code BandBuilder} with the default details.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"    public BandBuilder() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"DeltonCheng"},"content":"        name \u003d new BandName(DEFAULT_NAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"        genres \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"        musicians \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"     * Initializes the BandBuilder with the data of {@code bandToCopy}.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"    public BandBuilder(Band bandToCopy) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"        name \u003d bandToCopy.getName();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"        genres \u003d new HashSet\u003c\u003e(bandToCopy.getGenres());","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"        musicians \u003d new HashSet\u003c\u003e(bandToCopy.getMusicians());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"     * Sets the {@code Name} of the {@code Band} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"    public BandBuilder withName(String name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DeltonCheng"},"content":"        this.name \u003d new BandName(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yytan25"},"content":"     * Parses the {@code genres} into a {@code Set\u003cTag\u003e} and set it to the {@code Band} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"    public BandBuilder withGenres(String... genres) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"        this.genres \u003d SampleDataUtil.getTagSet(genres);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yytan25"},"content":"     * Sets the {@code musicians} of the {@code Band} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"    public BandBuilder withMusicians(Musician... musicians) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yytan25"},"content":"        this.musicians \u003d SampleDataUtil.getMusicianSet(musicians);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yytan25"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yytan25"},"content":"    public Band build() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"yytan25"},"content":"        return new Band(name, genres, musicians);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DeltonCheng":4,"yytan25":65}},{"path":"src/test/java/seedu/address/testutil/EditMusicianDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand.EditMusicianDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":" * A utility class to help with building EditMusicianDescriptor objects.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"public class EditMusicianDescriptorBuilder {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"    private EditMusicianDescriptor descriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptorBuilder() {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"        descriptor \u003d new EditMusicianDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptorBuilder(EditMusicianDescriptor descriptor) {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        this.descriptor \u003d new EditMusicianDescriptor(descriptor);","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"     * Returns an {@code EditMusicianDescriptor} with fields containing {@code musician}\u0027s details","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptorBuilder(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"        descriptor \u003d new EditMusicianDescriptor();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"        descriptor.setName(musician.getName());","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"        descriptor.setPhone(musician.getPhone());","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        descriptor.setEmail(musician.getEmail());","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        descriptor.setTags(musician.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        descriptor.setInstruments(musician.getInstruments());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"tanyyyming"},"content":"        descriptor.setGenres(musician.getGenres());","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"     * Sets the {@code Name} of the {@code EditMusicianDescriptor} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"     * Sets the {@code Phone} of the {@code EditMusicianDescriptor} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"wanghejin"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"wanghejin"},"content":"     * Sets the {@code Email} of the {@code EditMusicianDescriptor} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"wanghejin"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"wanghejin"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditMusicianDescriptor}","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"wanghejin"},"content":"     * that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"wanghejin"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"wanghejin"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"wanghejin"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"     * Parses the {@code instruments} into a {@code Set\u003cTag\u003e} and set it to the {@code EditMusicianDescriptor}","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"     * that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"    public EditMusicianDescriptorBuilder withInstruments(String... instruments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"        Set\u003cTag\u003e instrumentSet \u003d Stream.of(instruments).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"        descriptor.setInstruments(instrumentSet);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"tanyyyming"},"content":"     * Parses the {@code genres} into a {@code Set\u003cTag\u003e} and set it to the {@code EditMusicianDescriptor}","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"tanyyyming"},"content":"     * that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"tanyyyming"},"content":"    public EditMusicianDescriptorBuilder withGenres(String... genres) {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"tanyyyming"},"content":"        Set\u003cTag\u003e genreSet \u003d Stream.of(genres).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"tanyyyming"},"content":"        descriptor.setGenres(genreSet);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"tanyyyming"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"    public EditMusicianDescriptor build() {","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"wanghejin"},"content":"        return descriptor;","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"tanyyyming":22,"wanghejin":77,"yytan25":1}},{"path":"src/test/java/seedu/address/testutil/MusicianBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":" * A utility class to help with building Musician objects.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"public class MusicianBuilder {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"tanyyyming"},"content":"    private Set\u003cTag\u003e instruments;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"tanyyyming"},"content":"    private Set\u003cTag\u003e genres;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"     * Creates a {@code MusicianBuilder} with the default details.","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    public MusicianBuilder() {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"tanyyyming"},"content":"        instruments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"tanyyyming"},"content":"        genres \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"     * Initializes the MusicianBuilder with the data of {@code musicianToCopy}.","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"wanghejin"},"content":"    public MusicianBuilder(Musician musicianToCopy) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"wanghejin"},"content":"        name \u003d musicianToCopy.getName();","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        phone \u003d musicianToCopy.getPhone();","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"wanghejin"},"content":"        email \u003d musicianToCopy.getEmail();","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"        tags \u003d new HashSet\u003c\u003e(musicianToCopy.getTags());","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"tanyyyming"},"content":"        instruments \u003d new HashSet\u003c\u003e(musicianToCopy.getInstruments());","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"tanyyyming"},"content":"        genres \u003d new HashSet\u003c\u003e(musicianToCopy.getGenres());","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"     * Sets the {@code Name} of the {@code Musician} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"wanghejin"},"content":"    public MusicianBuilder withName(String name) {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Musician} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"wanghejin"},"content":"    public MusicianBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"     * Parses the {@code instruments} into a {@code Set\u003cTag\u003e} and set it to the {@code Musician} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"    public MusicianBuilder withInstruments(String... instruments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"        this.instruments \u003d SampleDataUtil.getTagSet(instruments);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"     * Parses the {@code genres} into a {@code Set\u003cTag\u003e} and set it to the {@code Musician} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"    public MusicianBuilder withGenres(String... genres) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"tanyyyming"},"content":"        this.genres \u003d SampleDataUtil.getTagSet(genres);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"tanyyyming"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"tanyyyming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"tanyyyming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"wanghejin"},"content":"     * Sets the {@code Phone} of the {@code Musician} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"wanghejin"},"content":"    public MusicianBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"wanghejin"},"content":"     * Sets the {@code Email} of the {@code Musician} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"wanghejin"},"content":"    public MusicianBuilder withEmail(String email) {","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"wanghejin"},"content":"    public Musician build() {","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"shuyangk"},"content":"        return new Musician(name, phone, email, tags, instruments, genres);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tanyyyming":22,"wanghejin":23,"shuyangk":1,"-":60}},{"path":"src/test/java/seedu/address/testutil/MusicianUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"tanyyyming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.logic.commands.musician.EditCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":" * A utility class for Musician.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"public class MusicianUtil {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"     * Returns an add command string for adding the {@code musician}.","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    public static String getAddCommand(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getMusicianDetails(musician);","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"     * Returns the part of command string for the given {@code musician}\u0027s details.","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    public static String getMusicianDetails(Musician musician) {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"        sb.append(PREFIX_NAME + musician.getName().fullName + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"        sb.append(PREFIX_PHONE + musician.getPhone().value + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        sb.append(PREFIX_EMAIL + musician.getEmail().value + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        musician.getTags().stream().forEach(","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"tanyyyming"},"content":"        musician.getInstruments().stream().forEach(","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"tanyyyming"},"content":"            s -\u003e sb.append(PREFIX_INSTRUMENT + s.tagName + \" \")","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"tanyyyming"},"content":"        );","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"tanyyyming"},"content":"        musician.getGenres().stream().forEach(","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"tanyyyming"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"tanyyyming"},"content":"        );","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"     * Returns the part of command string for the given {@code EditMusicianDescriptor}\u0027s details.","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"    public static String getEditMusicianDescriptorDetails(EditCommand.EditMusicianDescriptor descriptor) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"tanyyyming"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"tanyyyming"},"content":"        if (descriptor.getInstruments().isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"tanyyyming"},"content":"            Set\u003cTag\u003e instruments \u003d descriptor.getInstruments().get();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"tanyyyming"},"content":"            if (instruments.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"tanyyyming"},"content":"                sb.append(PREFIX_INSTRUMENT).append(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"tanyyyming"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"tanyyyming"},"content":"                instruments.forEach(s -\u003e sb.append(PREFIX_INSTRUMENT).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"tanyyyming"},"content":"        if (descriptor.getGenres().isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"tanyyyming"},"content":"            Set\u003cTag\u003e genres \u003d descriptor.getGenres().get();","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"tanyyyming"},"content":"            if (genres.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"tanyyyming"},"content":"                sb.append(PREFIX_GENRE).append(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"tanyyyming"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"tanyyyming"},"content":"                genres.forEach(s -\u003e sb.append(PREFIX_GENRE).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"tanyyyming"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"tanyyyming"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tanyyyming":25,"wanghejin":14,"yytan25":2,"-":42}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"     * Returns the middle index of the musician in the {@code model}\u0027s musician list.","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"        return Index.fromOneBased(model.getFilteredMusicianList().size() / 2);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"wanghejin"},"content":"     * Returns the last index of the musician in the {@code model}\u0027s musician list.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"        return Index.fromOneBased(model.getFilteredMusicianList().size());","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"wanghejin"},"content":"     * Returns the musician in the {@code model}\u0027s musician list at {@code index}.","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"    public static Musician getMusician(Model model, Index index) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"wanghejin"},"content":"        return model.getFilteredMusicianList().get(index.getZeroBased());","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wanghejin":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"    public static final Index INDEX_FIRST_MUSICIAN \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":"    public static final Index INDEX_SECOND_MUSICIAN \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":"    public static final Index INDEX_THIRD_MUSICIAN \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"wanghejin":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/typicalentities/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.testutil.typicalentities;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalBands.DRAGON;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wanghejin"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wanghejin"},"content":" * A utility class to create a typical address book with the typical musicians and bands to be used in tests.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wanghejin"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wanghejin"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wanghejin"},"content":"    private TypicalAddressBook() {} // prevents instantiation","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wanghejin"},"content":"     * Returns an {@code AddressBook} with all the typical musicians and bands.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wanghejin"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wanghejin"},"content":"        for (Musician musician : TypicalMusicians.getTypicalMusicians()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":"            ab.addMusician(musician);","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"        for (Band band : TypicalBands.getTypicalBands()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wanghejin"},"content":"            ab.addBand(band);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"wanghejin"},"content":"        return ab;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"wanghejin"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wanghejin"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wanghejin"},"content":"     * Returns an {@code AddressBook} with all the typical musicians and only one band.","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"wanghejin"},"content":"    public static AddressBook getOneBandAddressBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wanghejin"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"        for (Musician musician : TypicalMusicians.getTypicalMusicians()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wanghejin"},"content":"            ab.addMusician(musician);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wanghejin"},"content":"        ab.addBand(DRAGON);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"        return ab;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"wanghejin"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wanghejin":40}},{"path":"src/test/java/seedu/address/testutil/typicalentities/TypicalBands.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.testutil.typicalentities;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ALICE;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.CARL;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.DANIEL;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wanghejin"},"content":"import static seedu.address.testutil.typicalentities.TypicalMusicians.ELLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"import seedu.address.model.band.Band;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.BandBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":" * A utility class containing a list of {@code Musician} objects to be used in tests.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"public class TypicalBands {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    // Bands without Musicians","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"    public static final Band ACE \u003d new BandBuilder().withName(\"Ace Jazz\")","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"        .withGenres(\"jazz\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"    public static final Band BOOM \u003d new BandBuilder().withName(\"Boom Rock\")","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"        .withGenres(\"rock\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"    // Bands with Musicians","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"    public static final Band CANDY \u003d new BandBuilder().withName(\"Candy Pop\")","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"        .withGenres(\"pop\").withMusicians(ALICE, BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"    public static final Band DRAGON \u003d new BandBuilder().withName(\"Dragon Metal\")","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"        .withGenres(\"metal\").withMusicians(CARL, DANIEL).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"    public static final Band ELISE \u003d new BandBuilder().withName(\"Elise Classical\")","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"        .withGenres(\"classical\").withMusicians(ELLE).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"    private TypicalBands() {} // prevents instantiation","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"    public static List\u003cBand\u003e getTypicalBands() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ACE, BOOM, CANDY, DRAGON, ELISE));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wanghejin":7,"yytan25":40}},{"path":"src/test/java/seedu/address/testutil/typicalentities/TypicalMusicians.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanghejin"},"content":"package seedu.address.testutil.typicalentities;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"shuyangk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"wanghejin"},"content":"import seedu.address.model.musician.Musician;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"wanghejin"},"content":"import seedu.address.testutil.MusicianBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"wanghejin"},"content":" * A utility class containing a list of {@code Musician} objects to be used in tests.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"wanghejin"},"content":"public class TypicalMusicians {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"wanghejin"},"content":"    public static final Musician ALICE \u003d new MusicianBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"tanyyyming"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"tanyyyming"},"content":"            .withInstruments(\"piano\")","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"tanyyyming"},"content":"            .withGenres(\"rock\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wanghejin"},"content":"    public static final Musician BENSON \u003d new MusicianBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"tanyyyming"},"content":"            .withTags(\"owesMoney\", \"friends\").withInstruments(\"guitar\").withGenres(\"pop\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wanghejin"},"content":"    public static final Musician CARL \u003d new MusicianBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"wanghejin"},"content":"    public static final Musician DANIEL \u003d new MusicianBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"wanghejin"},"content":"    public static final Musician ELLE \u003d new MusicianBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"wanghejin"},"content":"    public static final Musician FIONA \u003d new MusicianBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"wanghejin"},"content":"    public static final Musician GEORGE \u003d new MusicianBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"wanghejin"},"content":"    public static final Musician HOON \u003d new MusicianBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"wanghejin"},"content":"    public static final Musician IDA \u003d new MusicianBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"shuyangk"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"wanghejin"},"content":"    // Manually added - Musician\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"wanghejin"},"content":"    public static final Musician AMY \u003d new MusicianBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"shuyangk"},"content":"            .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"wanghejin"},"content":"    public static final Musician BOB \u003d new MusicianBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"shuyangk"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"wanghejin"},"content":"    private TypicalMusicians() {} // prevents instantiation","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"wanghejin"},"content":"    public static List\u003cMusician\u003e getTypicalMusicians() {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tanyyyming":4,"wanghejin":19,"shuyangk":11,"-":31}}]

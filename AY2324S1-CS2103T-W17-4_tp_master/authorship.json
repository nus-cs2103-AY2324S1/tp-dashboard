[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W17-4/tp/actions)","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"# lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"lesSON is a flashcard software aimed to help individuals with their memory work in school.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"Some of the functions of lesSON includes:","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"  * Customise flashcards","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"  * Managing existing flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"  * Practice using the existing flashcard deck","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"To increase the flexibility and efficiency of the flashcard software, lesSON is optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"## Features","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"1. Adding a new flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"2. Deleting existing flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"3. View all current flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"4. Edit existing flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"5. Practise with existing flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"## Links","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"* [User Guide](https://docs.google.com/document/d/17tfwoslLc0Ky1ygVAM4aDlNsUm8nSdBxpDvt-hqFyWk/edit)","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"winson8222":24,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"    archiveFileName \u003d \u0027lesSON.jar\u0027","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"GSgiansen":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"You can reach us at the email `jason.lee.jia.xuan[at]u.nus.edu`","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"### Gian Sen","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"\u003cimg src\u003d\"images/gsgiansen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"[[github](https://github.com/GSgiansen)]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/gsgiansen.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"### Jason","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"\u003cimg src\u003d\"images/dioclei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/Dioclei)]","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/dioclei.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"* Role: Documentation","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"### Jin Yuan","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"\u003cimg src\u003d\"images/jinyuan0425.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/jinyuan0425)] [[portfolio](team/jinyuan0425.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"* Role: Testing","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"### Wee Yeow","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"\u003cimg src\u003d\"images/weeweh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/weeweh)]","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/weeweh.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"* Role: Code Quality","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"* Responsibilities: UX","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"### Winson","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"\u003cimg src\u003d\"images/winson8222.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/winson8222)]","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/winson8222.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"* Role: Integration","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Dioclei":27,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"weeweh"},"content":"* is a Computer Science University student in NUS","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"weeweh"},"content":"* wishes to excel in their studies","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"weeweh"},"content":"* requires a learning aid that enforces their understanding and memorisation of the content taught","lastModifiedDate":"2023-10-03"},{"lineNumber":263,"author":{"gitId":"weeweh"},"content":"* may take several courses at once and each course is expected to have multiple topics/concepts","lastModifiedDate":"2023-10-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"weeweh"},"content":"**Value proposition**: For Computing students in University who struggle with memorisation and consolidation of knowledge, our app provides users the ability to create categorised flashcards to organise concepts taught to them fast. Optimised for CLI and users who type fast.","lastModifiedDate":"2023-10-03"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                                | I want to …​                                                                                    | So that I can…​                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"weeweh"},"content":"|----------|----------------------------------------|-------------------------------------------------------------------------------------------------|--------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"weeweh"},"content":"| `* * *`  | new user                               | create a new flashcard                                                                          | start adding content                             |","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | edit the content of an existing flashcard                                                       | update my study materials                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | delete a flashcard                                                                              | remove irrelevant content                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | view a list of all my flashcards                                                                | quickly access my study materials                |","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | organise my flashcards with tags                                                                | manage my study materials efficiently            |","lastModifiedDate":"2023-10-03"},{"lineNumber":283,"author":{"gitId":"weeweh"},"content":"| `*`      | user                                   | search for a specific flashcard                                                                 | edit the card accordingly                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":284,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | sort my flashcards by date created or modified                                                  | view them in an organised manner                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":285,"author":{"gitId":"weeweh"},"content":"| `*`      | user who learns better with pictures   | add images to my flashcards                                                                     | enhance my learning experience                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user who wants to update my flashcards | modify answers to my flashcard                                                                  | make sure that my content is up to date          |","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | practise with my flashcards                                                                     | test my knowledge                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | shuffle the order of my flashcards during practice                                              | avoid memorising in a fixed sequence             |","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | mark a flashcard as \"learnt\" during practice                                                    | track my progress                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"weeweh"},"content":"| `*`      | user                                   | see statistics on my practice sessions, such as the number of cards reviewed and the time spent |                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | tag my flashcards with course IDs and coursework                                                | easily categorise them by subject                |","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | tag my flashcards with the type of concept (e.g., definitions, formulas, field)                 | filter them for specific study needs             |","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | can change my tag colours                                                                       | personalise my studying methods                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | enable spaced repetition for my flashcards                                                      | optimise my memorization process                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | adjust the spacing intervals for spaced repetition                                              | personalise my learning experience               |","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"weeweh"},"content":"| `* *`    | diligent user                          | review flashcards due for repetition                                                            | reinforce my memory                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"weeweh"},"content":"| `* *`    | experienced user                       | format the text on my flashcards using Markdown or a similar markup language                    | create personalised rich content                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"weeweh"},"content":"| `*`      | experienced user                       | preview the formatted text on my flashcards                                                     | ensure it appears as intended                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"weeweh"},"content":"| `* *`    | picky user                             | customise the app\u0027s colour scheme and interface                                                 | personalise my learning environment              |","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | reset my progress and start fresh with my flashcards                                            | can reattempt my studies                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | export my flashcards to a file                                                                  | back up my data or share it with others          |","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | import flashcards from an external file                                                         | easily migrate or collaborate on study materials |","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | access a user guide                                                                             | learn how to use the app effectively             |","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | receive notifications to remind me of my study sessions and flashcard reviews                   |                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | set daily or weekly study goals                                                                 | track my progress toward my learning objectives  |","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"weeweh"},"content":"| `*`      | user                                   | provide feedback or report issues to the app developers                                         | contribute to app improvement                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"weeweh"},"content":"| `*`      | multilingual user                      | input non-english characters                                                                    | study in other languages                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"jinyuan0425"},"content":"(For all use cases below, the **System** is `lesSON` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC01 Creating a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"jinyuan0425"},"content":"1. User inputs command to create a card, along with the necessary details.","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"jinyuan0425"},"content":"2. lesSON displays a success message.","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC02 deleting a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"jinyuan0425"},"content":"1. User displays all cards (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"jinyuan0425"},"content":"2. User inputs command to delete a card, along with the index of the card.","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"jinyuan0425"},"content":"3. lesSON displays a success message.","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC03 viewing a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"jinyuan0425"},"content":"1. User displays all cards (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"jinyuan0425"},"content":"2. User inputs command to view a card, along with the index of the card.","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"jinyuan0425"},"content":"3. lesSON displays the selected card.","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"jinyuan0425"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":344,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC04 displaying all cards**","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"jinyuan0425"},"content":"1. User inputs command to view all cards.","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"jinyuan0425"},"content":"2. lesSON displays all cards.","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"jinyuan0425"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":354,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC05 editing a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":356,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":358,"author":{"gitId":"jinyuan0425"},"content":"1. User displays all cards (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":359,"author":{"gitId":"jinyuan0425"},"content":"2. User inputs command to edit a card, along with the necessary details.","lastModifiedDate":"2023-10-03"},{"lineNumber":360,"author":{"gitId":"jinyuan0425"},"content":"3. lesSON displays a success message.","lastModifiedDate":"2023-10-03"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":362,"author":{"gitId":"jinyuan0425"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"weeweh"},"content":"2.  Should be able to hold up to 1000 flashcards without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":371,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"weeweh"},"content":"* **Flashcard**: A two-sided card containing a question and an answer","lastModifiedDate":"2023-10-03"},{"lineNumber":379,"author":{"gitId":"weeweh"},"content":"* **Tag**: A label used to categorise flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jinyuan0425":32,"weeweh":40,"-":360}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"# lesSON User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"lesSON is a **flashcard software aimed to help individuals with their memory work in school, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, lesSON can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"## Feature List","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"### Adding a Flashcard `add`","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"Adds a flashcard to the deck for the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"Format: `add q/question a/answer [t/TAG]​`","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"**Tip**: Tagging is not supported in v1.2 and earlier","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"- add q/What are the three ways to implement binary systems? a/1s Complement, 2s Complement, and Sign and Magnitude","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"- add q/How do you convert from binary to 1s Complement? a/By inverting all the bits, i.e. 0 to 1 and vice versa t/CS2100 t/Number Systems","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"1. No Empty Input after q/, a/ and t/.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"1. add q/What are the three ways to implement binary systems? a/1s Complement, 2s Complement, and Sign and Magnitude","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"“Successfully added flashcard!” message will be returned to the user via the CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"2. add q/What are the three ways to implement binary systems? a/","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"”Missing answer for flashcard” error message will be returned to the user via the CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"3. add a/10111","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"”Missing question for flashcard” error message will be returned to the user via the CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"#### MockUp","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"![mock up of add command](./images/UserGuide/mockup_add.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"### Deleting a Flashcard : `delete`","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"Deletes the flashcard in the deck","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"- delete 2","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":" (deletes the 2nd flashcard in the deck)","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"1. Index must be positive integer","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"2. Index cannot exceed size of the deck","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"1. delete 2","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"“Successfully deleted flashcard!” message will be returned to the user via the CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"2. delete -100","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"“Invalid input - input (\u003cinput\u003e) is not an accepted value. Please enter an integer between 0 and deck.lenght()” message will be displayed on error.","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"#### Mockup:","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"![mock up of delete command](./images/UserGuide/mockup_delete.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"### View All Flashcards : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"Shows a list of all flashcards in the deck.","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"Format: `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"list shows the full list of flashcards.","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"No parameters are needed","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"#### Expected output:","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"1. list","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"   (Questions to all the flashcards that are added with their index)","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"2. list potato","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"   “No parameters are allowed for this command.”","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"#### Mockup","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"![mock up of list command](./images/UserGuide/mockup_list.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"### Editing a specific Flashcard : `edit`","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"Format: `edit index/(q/a) (question/answer)`","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"1. edit 1/q What is the colour of the sun changes the question at index 1 to “What is the colour of the sun”","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"2. edit 1/a Red changes the answer at index 1 to “Red”","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"#### Expected output:","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"“Successfully edited flashcard” message will be returned to the user via the CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"“Invalid input - input (\u003cinput\u003e) is not an accepted value. Please enter an integer between 0 and deck.length()” message will be displayed on error.","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"GSgiansen"},"content":"#### Mockup:","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"GSgiansen"},"content":"![mock up of edit command](./images/UserGuide/mockup_edit.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"GSgiansen"},"content":"### Practise Flashcards: `practise`","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"GSgiansen"},"content":"Practise a single Flashcard in the deck","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"GSgiansen"},"content":"Format: `practise INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"GSgiansen"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"GSgiansen"},"content":"1. Index must be positive integer","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"GSgiansen"},"content":"2. Index cannot exceed size of the deck","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"GSgiansen"},"content":"#### Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"GSgiansen"},"content":"practise 1 displays the question of the card of index 1, click enter to reveal the answer","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"GSgiansen"},"content":"(Practise the Flashcard at the specified INDEX. The index refers to the index number shown in the displayed deck. ​))","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"GSgiansen"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"GSgiansen"},"content":"displays the question of the card of index (\u003cinput\u003e), click enter to reveal the answer","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"GSgiansen"},"content":"“Invalid input - input (\u003cinput\u003e) is not an accepted value. Please enter an integer between 0 and deck.length()” message will be displayed on error.","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"GSgiansen"},"content":"#### Mockup:","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"GSgiansen"},"content":"![mock up of practise command](./images/UserGuide/mockup_practise.png)","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"GSgiansen":99,"-":38}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"GSgiansen"},"content":"    content: \"lesSON\";","lastModifiedDate":"2023-10-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"GSgiansen":1,"-":294}},{"path":"docs/team/dioclei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Jason\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"* **New Feature**: Feature","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddioclei\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"  * Which releases were managed by me.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":52}},{"path":"docs/team/gsgiansen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Gian Sen\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"* **New Feature**: Feature","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dgsgiansen\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"  * Which releases were managed by me.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":52}},{"path":"docs/team/jinyuan0425.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Jin Yuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"* **New Feature**: Feature","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djinyuan0425\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"  * Which releases were managed by me.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    * Added use cases for the functions to be implemented in v1.2 [\\#42](https://github.com/AY2324S1-CS2103T-W17-4/tp/pull/42)","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":53}},{"path":"docs/team/weeweh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Wee Yeow\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"* **New Feature**: Feature","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dweeweh\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"  * Which releases were managed by me.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":52}},{"path":"docs/team/winson8222.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Winson\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"* **New Feature**: Feature","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwinson8222\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"  * Which releases were managed by me.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":52}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Logic2;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.LogicManager2;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ModelManager2;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyUserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.storage.DeckStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.storage.JsonDeckStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.storage.Storage2;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.storage.StorageManager2;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.storage.UserPrefsStorage2;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"    protected Logic2 logic;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    protected Storage2 storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    protected Model2 model;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"        UserPrefsStorage2 userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        DeckStorage deckStorage \u003d new JsonDeckStorage((userPrefs.getDeckFilePath()));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"        storage \u003d new StorageManager2((DeckStorage) deckStorage, userPrefsStorage);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"        logic \u003d new LogicManager2(model, storage);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"    private Model2 initModelManager(Storage2 storage, ReadOnlyUserPrefs2 userPrefs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        logger.info(\"Using data file : \" + storage.getDeckFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        Optional\u003cReadOnlyDeck\u003e addressBookOptional;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        ReadOnlyDeck initialData;","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"            addressBookOptional \u003d storage.readDeck();","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"                logger.info(\"Creating a new data file \" + storage.getDeckFilePath()","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleDeck);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"            logger.warning(\"Data file at \" + storage.getDeckFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"            initialData \u003d new Deck();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"        return new ModelManager2(initialData, userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"GSgiansen"},"content":"    protected UserPrefs2 initPrefs(UserPrefsStorage2 storage) {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 initializedPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"GSgiansen"},"content":"            Optional\u003cUserPrefs2\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"GSgiansen"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs2());","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"GSgiansen"},"content":"            initializedPrefs \u003d new UserPrefs2();","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GSgiansen":36,"-":150}},{"path":"src/main/java/seedu/address/logic/Logic2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"public interface Logic2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     * Returns the Deck.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     * @see seedu.address.model.Model2#getDeck()","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    ReadOnlyDeck getDeck();","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    /** Returns an unmodifiable view of the filtered list of cards */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    ObservableList\u003cCard\u003e getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * Returns the user prefs\u0027 deck file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":12,"-":40}},{"path":"src/main/java/seedu/address/logic/LogicManager2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.Command2;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.DeckParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"import seedu.address.storage.Storage2;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"public class LogicManager2 implements Logic2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager2.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    private final Model2 model;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    private final Storage2 storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    private final DeckParser deckParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    public LogicManager2(Model2 model, Storage2 storage) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        deckParser \u003d new DeckParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        Command2 command \u003d deckParser.parseCommand(commandText);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        String answer;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            storage.saveDeck(model.getDeck());","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"    public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        return model.getDeck();","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e getFilteredCardList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        return model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        return model.getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":23,"-":67}},{"path":"src/main/java/seedu/address/logic/Messages2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"public class Messages2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_INVALID_CARD_DISPLAYED_INDEX \u003d \"The card index provided is invalid\";","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_LISTED_OVERVIEW \u003d \"%1$d cards listed!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_PRACTISE_VIEW_EASY \u003d \"%1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_PRACTISE_VIEW_MEDIUM \u003d \"%1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_PRACTISE_VIEW_HARD \u003d \"%1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_PRACTISE_VIEW_INVALID \u003d \" is not an invalid difficult \"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            + \"level! Please enter easy, medium or hard!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    public static String format(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        builder.append(\"Question: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"                .append(card.getQuestion())","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"                    .append(\"; Answer: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"                     .append(card.getAnswer());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user as an Answer.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    public static String formatAnswer(Card card) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        builder.append(\"Answer: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"                .append(card.getAnswer())","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"                .append(\" (Difficulty level: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"                .append(card.getDifficulty())","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"                .append(\")\");","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user as a Question.","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    public static String formatQuestion(Card card) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        builder.append(\"Question: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"                .append(card.getQuestion());","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":71,"GSgiansen":4}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"public class AddCommand2 extends Command2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a card to the deck. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"            + PREFIX_QUESTION + \"QUESTION \"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"            + PREFIX_ANSWER + \"ANSWER \";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Card added: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DUPLICATE_CARD \u003d \"This Card already exists in the Deck\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    private final Card toAdd;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    public AddCommand2(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        requireNonNull(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        toAdd \u003d card;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model2 model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        if (model.hasCard(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        model.addCard(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages2.format(toAdd)));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof AddCommand2)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        AddCommand2 otherAddCommand \u003d (AddCommand2) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":1,"winson8222":73}},{"path":"src/main/java/seedu/address/logic/commands/Command2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"public abstract class Command2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    public abstract CommandResult execute(Model2 model) throws CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":3,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"public class DeleteCommand2 extends Command2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"            + \": Deletes the card identified by the index number used in the displayed card list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DELETE_CARD_SUCCESS \u003d \"Deleted Card: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    public DeleteCommand2(Index targetIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model2 model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(Messages2.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        Card cardToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        model.deleteCard(cardToDelete);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CARD_SUCCESS, Messages2.format(cardToDelete)));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof DeleteCommand2)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        DeleteCommand2 otherDeleteCommand \u003d (DeleteCommand2) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":1,"winson8222":17,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import static seedu.address.model.Model2.PREDICATE_SHOW_ALL_CARDS;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Answer;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Question;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"public class EditCommand2 extends Command2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the card identified \"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"            + \"by the index number used in the displayed card list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"            + \"[\" + PREFIX_QUESTION + \"QUESTION] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"            + \"[\" + PREFIX_ANSWER + \"ANSWER] \";","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_EDIT_CARD_SUCCESS \u003d \"Edited Card: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DUPLICATE_CARD \u003d \"This card already exists in the address book.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    private final Index index;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    private final EditCardDescriptor editCardDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     * @param editCardDescriptor details to edit the person with","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    public EditCommand2(Index index, EditCardDescriptor editCardDescriptor) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        requireNonNull(editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        this.editCardDescriptor \u003d new EditCardDescriptor(editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model2 model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(Messages2.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        Card personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        Card editedCard \u003d createEditedCard(personToEdit, editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        if (!personToEdit.isSameCard(editedCard) \u0026\u0026 model.hasCard(editedCard)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        model.setCard(personToEdit, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        model.updateFilteredCardList(PREDICATE_SHOW_ALL_CARDS);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CARD_SUCCESS, Messages2.format(editedCard)));","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"     * Creates and returns a {@code Card} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"     * edited with {@code editCardDescriptor}.","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"    private static Card createEditedCard(Card cardToEdit, EditCardDescriptor editCardDescriptor) {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        assert cardToEdit !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"        Question updatedQuestion \u003d editCardDescriptor.getQuestion().orElse(cardToEdit.getQuestion());","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        Answer updatedAnswer \u003d editCardDescriptor.getAnswer().orElse(cardToEdit.getAnswer());","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"        return new Card(updatedQuestion, updatedAnswer, \"new\");","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof EditCommand2)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"        EditCommand2 otherEditCommand \u003d (EditCommand2) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"                \u0026\u0026 editCardDescriptor.equals(otherEditCommand.editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"                .add(\"editCardDescriptor\", editCardDescriptor)","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"    public static class EditCardDescriptor {","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"        private Question question;","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"        private Answer answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"        public EditCardDescriptor() {}","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"        public EditCardDescriptor(EditCardDescriptor toCopy) {","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"            setQuestion(toCopy.question);","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"            setAnswer(toCopy.answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"            return CollectionUtil.isAnyNonNull(question, answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"        public void setQuestion(Question question) {","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"            this.question \u003d question;","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"        public Optional\u003cQuestion\u003e getQuestion() {","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"            return Optional.ofNullable(question);","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"winson8222"},"content":"        public void setAnswer(Answer answer) {","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":"            this.answer \u003d answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"        public Optional\u003cAnswer\u003e getAnswer() {","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"            return Optional.ofNullable(answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"winson8222"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"winson8222"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"winson8222"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"winson8222"},"content":"                return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"winson8222"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"winson8222"},"content":"            if (!(other instanceof EditCardDescriptor)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"winson8222"},"content":"                return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"winson8222"},"content":"            EditCardDescriptor otherEditCardDescriptor \u003d (EditCardDescriptor) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"winson8222"},"content":"            return Objects.equals(question, otherEditCardDescriptor.question)","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"winson8222"},"content":"                    \u0026\u0026 Objects.equals(answer, otherEditCardDescriptor.answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"winson8222"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"winson8222"},"content":"        public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"winson8222"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"winson8222"},"content":"                    .add(\"question\", question)","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"winson8222"},"content":"                    .add(\"answer\", answer)","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"winson8222"},"content":"                    .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":1,"winson8222":184}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"public class ExitCommand2 extends Command2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting lesSON as requested ...\";","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model2 model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":1,"winson8222":4,"-":15}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"public class HelpCommand extends Command2 {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    public CommandResult execute(Model2 model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GSgiansen":5,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.model.Model2.PREDICATE_SHOW_ALL_CARDS;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"public class ListCommand2 extends Command2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all cards\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model2 model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        model.updateFilteredCardList(PREDICATE_SHOW_ALL_CARDS);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":28}},{"path":"src/main/java/seedu/address/logic/commands/PractiseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" * Practises a question using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"public class PractiseCommand extends Command2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static final String COMMAND_WORD \u003d \"practise\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            + \": practise the card identified by the index number used in the displayed card list.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: DIFFICULTY (must not be empty)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" d/ easy\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_PRACTISE_CARD_SUCCESS \u003d \"Practise Card: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    private final String difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     * Constructs a {@code PractiseCommand} with the specified {@code targetIndex} and {@code difficulty}.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     * @param targetIndex The index of the target to card.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     * @param difficulty The difficulty level for the card.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    public PractiseCommand(Index targetIndex, String difficulty) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model2 model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        String newDifficulty \u003d this.difficulty.toLowerCase();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(Messages2.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        Card cardToPractise \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        if (Objects.equals(newDifficulty, \"easy\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"            cardToPractise.setDifficulty(newDifficulty);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"                    String.format(Messages2.MESSAGE_CARDS_PRACTISE_VIEW_EASY, Messages2.formatAnswer(cardToPractise)));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        if (Objects.equals(newDifficulty, \"medium\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"                    String.format(Messages2.MESSAGE_CARDS_PRACTISE_VIEW_MEDIUM,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"                            Messages2.formatAnswer(cardToPractise)));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        if (Objects.equals(newDifficulty, \"hard\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"                    String.format(Messages2.MESSAGE_CARDS_PRACTISE_VIEW_HARD, Messages2.formatAnswer(cardToPractise)));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(newDifficulty + Messages2.MESSAGE_CARDS_PRACTISE_VIEW_INVALID);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof PractiseCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        PractiseCommand otherPractiseCommand \u003d (PractiseCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"        return targetIndex.equals(otherPractiseCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":99}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.AddCommand2;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Answer;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Question;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"public class AddCommandParser2 implements Parser2\u003cAddCommand2\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand2","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     * and returns an AddCommand2 object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    public AddCommand2 parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUESTION, PREFIX_ANSWER);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_QUESTION, PREFIX_ANSWER)","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand2.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_QUESTION, PREFIX_ANSWER);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        Question question \u003d ParserUtil.parseQuestion(argMultimap.getValue(PREFIX_QUESTION).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        Answer answer \u003d ParserUtil.parseAnswer(argMultimap.getValue(PREFIX_ANSWER).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        Card card \u003d new Card(question, answer, \"new\");","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        return new AddCommand2(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":50,"GSgiansen":2}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.AddCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.Command2;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.DeleteCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.EditCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.ExitCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.ListCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    public Command2 parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        case AddCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"            return new AddCommandParser2().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"        case EditCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"            return new EditCommandParser2().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        case DeleteCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"            return new DeleteCommandParser2().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"        case ListCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"            return new ListCommand2();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"        case ExitCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"            return new ExitCommand2();","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GSgiansen":19,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"            throw new ParseException(Messages2.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"GSgiansen":2,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    public static final Prefix PREFIX_ANSWER \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public static final Prefix PREFIX_QUESTION \u003d new Prefix(\"q/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    public static final Prefix PREFIX_DIFFICULTY \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"winson8222":3,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/DeckParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.AddCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.Command2;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.DeleteCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.EditCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.ExitCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.ListCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.PractiseCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":" * Parses user input.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"public class DeckParser {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeckParser.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    public Command2 parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        case AddCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"            return new AddCommandParser2().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        case EditCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"            return new EditCommandParser2().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        case DeleteCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"            return new DeleteCommandParser2().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        case ListCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"            return new ListCommand2();","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        case ExitCommand2.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"            return new ExitCommand2();","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        case PractiseCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"            return new PractiseCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        default:","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":80,"GSgiansen":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.DeleteCommand2;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"public class DeleteCommandParser2 implements Parser2\u003cDeleteCommand2\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public DeleteCommand2 parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            return new DeleteCommand2(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand2.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":6,"GSgiansen":2,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.EditCommand2;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"public class EditCommandParser2 implements Parser2\u003cEditCommand2\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public EditCommand2 parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUESTION, PREFIX_ANSWER);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        Index index;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand2.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_QUESTION, PREFIX_ANSWER);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        EditCommand2.EditCardDescriptor editCardDescriptor \u003d new EditCommand2.EditCardDescriptor();","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        if (argMultimap.getValue(PREFIX_QUESTION).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"            editCardDescriptor.setQuestion(ParserUtil.parseQuestion(argMultimap.getValue(PREFIX_QUESTION).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        if (argMultimap.getValue(PREFIX_ANSWER).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"            editCardDescriptor.setAnswer(ParserUtil.parseAnswer(argMultimap.getValue(PREFIX_ANSWER).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        if (!editCardDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"            throw new ParseException(EditCommand2.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        return new EditCommand2(index, editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":73,"GSgiansen":3}},{"path":"src/main/java/seedu/address/logic/parser/Parser2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.Command2;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"public interface Parser2\u003cT extends Command2\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Answer;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Question;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"     * Parses a {@code String question} into a {@code Question}.","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the given {@code question} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"    public static Question parseQuestion(String question) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"        requireNonNull(question);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"        String trimmedQuestion \u003d question.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"        if (!Question.isValidQuestion(trimmedQuestion)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(Question.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"        return new Question(trimmedQuestion);","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"     * Parses a {@code String answer} into a {@code Answer}.","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the given {@code answer} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"winson8222"},"content":"    public static Answer parseAnswer(String answer) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"winson8222"},"content":"        requireNonNull(answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":"        String trimmedAnswer \u003d answer.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"        if (!Answer.isValidAnswer(answer)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(Answer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"        return new Answer(trimmedAnswer);","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"winson8222":34,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/PractiseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIFFICULTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.PractiseCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":" * Parses input arguments and creates a new ParserCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"public class PractiseCommandParser implements Parser2\u003cPractiseCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    public PractiseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DIFFICULTY);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PractiseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DIFFICULTY)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PractiseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        String difficulty \u003d argMultimap.getValue(PREFIX_DIFFICULTY).get();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        return new PractiseCommand(index, difficulty);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":49,"GSgiansen":2}},{"path":"src/main/java/seedu/address/model/Deck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.UniqueCardList;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" * Duplicates are not allowed (by .isSameCard comparison)","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"public class Deck implements ReadOnlyDeck {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private final UniqueCardList cards;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    /*","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     *   among constructors.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        cards \u003d new UniqueCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    public Deck() {}","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     * Creates a Deck using the Cards in the {@code toBeCopied}","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    public Deck(ReadOnlyDeck toBeCopied) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        this();","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     * Replaces the contents of the card list with {@code cards}.","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     * {@code cards} must not contain duplicate cards.","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    public void setCards(List\u003cCard\u003e cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        this.cards.setCards(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"     * Resets the existing data of this {@code Deck} with {@code newData}.","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"    public void resetData(ReadOnlyDeck newData) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        setCards(newData.getCardList());","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    //// card-level operations","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"     * Returns true if a card with the same identity as {@code card} exists in the deck.","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"    public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        requireNonNull(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        return cards.contains(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"     * Adds a card to the deck.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"     * The card must not already exist in the deck.","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"    public void addCard(Card p) {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"        cards.add(p);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"     * Replaces the given card {@code target} in the list with {@code editedCard}.","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"     * The card identity of {@code editedCard} must not be the same as another existing card in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        requireNonNull(editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        cards.setCard(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"    public void removeCard(Card key) {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        cards.remove(key);","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"    //// util methods","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"                .add(\"card\", cards)","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e getCardList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"        return cards.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof Deck)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"        Deck otherDeck \u003d (Deck) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"        return cards.equals(otherDeck.cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"        return cards.hashCode();","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":132}},{"path":"src/main/java/seedu/address/model/Model2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"public interface Model2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    Predicate\u003cCard\u003e PREDICATE_SHOW_ALL_CARDS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    void setUserPrefs(ReadOnlyUserPrefs2 userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    ReadOnlyUserPrefs2 getUserPrefs();","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * Returns the user prefs\u0027 deck file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"     * Sets the user prefs\u0027 deck file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    void setDeckFilePath(Path cardFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"     * Returns the Deck","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    ReadOnlyDeck getDeck();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    boolean hasCard(Card card);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    void setCard(Card target, Card editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    /** Returns an unmodifiable view of the filtered card list */","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    ObservableList\u003cCard\u003e getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"    void updateFilteredCardList(Predicate\u003cCard\u003e predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"     * Adds the given card.","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"     * {@code card} must not already exist in the deck.","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"    void addCard(Card card);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"     * Deletes the given card.","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"     * {@code card} must exist in the deck.","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    void deleteCard(Card card);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"     * Replaces deck data with the data in {@code deck}.","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"    public void setDeck(ReadOnlyDeck deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":32,"GSgiansen":1,"-":58}},{"path":"src/main/java/seedu/address/model/ModelManager2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"public class ModelManager2 implements Model2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager2.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    private final Deck deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    private final UserPrefs2 userPrefs;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    private final FilteredList\u003cCard\u003e filteredCards;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public ModelManager2(ReadOnlyDeck deck, ReadOnlyUserPrefs2 userPrefs) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(deck, userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        logger.fine(\"Initializing with address book: \" + deck + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        this.deck \u003d new Deck(deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        this.userPrefs \u003d new UserPrefs2(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        filteredCards \u003d new FilteredList\u003c\u003e(this.deck.getCardList());","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    public ModelManager2() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        this(new Deck(), new UserPrefs2());","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs2 userPrefs) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public ReadOnlyUserPrefs2 getUserPrefs() {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        return userPrefs.getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    public void setDeckFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        userPrefs.setDeckFilePath(addressBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Deck \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"    public void setDeck(ReadOnlyDeck deck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        this.deck.resetData(deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"    public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        return deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"    public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"        requireNonNull(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        return deck.hasCard(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    public void deleteCard(Card target) {","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"        deck.removeCard(target);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"    public void addCard(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"        deck.addCard(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"        updateFilteredCardList(PREDICATE_SHOW_ALL_CARDS);","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"    public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"        deck.setCard(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"     * {@code versionedDeck}","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e getFilteredCardList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"        return filteredCards;","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"    public void updateFilteredCardList(Predicate\u003cCard\u003e predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"        filteredCards.setPredicate(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof ModelManager2)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"        ModelManager2 otherModelManager \u003d (ModelManager2) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"        return deck.equals(otherModelManager.deck)","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"                \u0026\u0026 filteredCards.equals(otherModelManager.filteredCards);","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"public interface ReadOnlyDeck {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    ObservableList\u003cCard\u003e getCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":18}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"public interface ReadOnlyUserPrefs2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":2,"-":14}},{"path":"src/main/java/seedu/address/model/UserPrefs2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"public class UserPrefs2 implements ReadOnlyUserPrefs2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    private Path deckFilePath \u003d Paths.get(\"data\" , \"deck.json\");","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    public UserPrefs2() {}","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public UserPrefs2(ReadOnlyUserPrefs2 userPrefs) {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    public void resetData(ReadOnlyUserPrefs2 newUserPrefs) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        setDeckFilePath(newUserPrefs.getDeckFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        return deckFilePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"    public void setDeckFilePath(Path deckFilePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        requireNonNull(deckFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        this.deckFilePath \u003d deckFilePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof UserPrefs2)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        UserPrefs2 otherUserPrefs \u003d (UserPrefs2) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"                \u0026\u0026 deckFilePath.equals(otherUserPrefs.deckFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"        return Objects.hash(guiSettings, deckFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        sb.append(\"\\nLocal data file location : \" + deckFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":18,"-":72}},{"path":"src/main/java/seedu/address/model/person/Answer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":" * Represents a Card\u0027s answer in lesSON.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class Answer {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"            \"Answers should only contain alphanumeric characters, some special characters \"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"                    + \"and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[\\\\p{Alnum}.,?\u0027():-])\\\\s*[\\\\p{Alnum}.,?\u0027(): -]+$\";","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"    public final String answer;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"     * Constructs a {@code Answer}.","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"     * @param answer A valid answer.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"    public Answer(String answer) {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        requireNonNull(answer);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        checkArgument(isValidAnswer(answer), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if a given string is a valid answer.","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"    public static boolean isValidAnswer(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"        return answer;","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        if (!(other instanceof Answer)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        Answer otherAnswer \u003d (Answer) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"        return answer.equals(otherAnswer.answer);","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"        return answer.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":59,"winson8222":4}},{"path":"src/main/java/seedu/address/model/person/Card.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":" * Represents a Card in lesSON.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"public class Card {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"    private final Question question;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"    private final Answer answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    private String diffculty;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public Card(Question question, Answer answer, String difficulty) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"        requireAllNonNull(question, answer);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        this.question \u003d question;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        this.diffculty \u003d difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public void setDifficulty(String diffculty) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        this.diffculty \u003d diffculty;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    public String getDifficulty() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        return this.diffculty;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    public Question getQuestion() {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"        return question;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    public Answer getAnswer() {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"        return answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if both cards have the same question.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"     * This defines a weaker notion of equality between two cards.","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"    public boolean isSameCard(Card otherCard) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"        if (otherCard \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        return otherCard !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"                \u0026\u0026 otherCard.getQuestion().equals(getQuestion());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jinyuan0425"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"jinyuan0425"},"content":"        if (!(other instanceof Card)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"jinyuan0425"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"jinyuan0425"},"content":"        Card otherCard \u003d (Card) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"jinyuan0425"},"content":"        return question.equals(otherCard.question)","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"jinyuan0425"},"content":"                \u0026\u0026 answer.equals(otherCard.answer);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"jinyuan0425"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"jinyuan0425"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"jinyuan0425"},"content":"        return Objects.hash(question, answer);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"jinyuan0425"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"jinyuan0425"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"jinyuan0425"},"content":"                .add(\"question\", question)","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"jinyuan0425"},"content":"                .add(\"answer\", answer)","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"jinyuan0425"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"    public String toQuestiontoString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"        return \"Question: \" + this.getQuestion().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"    public String toAnswertoString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"        return \"Question: \" + this.getQuestion().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jinyuan0425":79,"winson8222":20}},{"path":"src/main/java/seedu/address/model/person/Question.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":" * Represents a Card\u0027s question in lesSON.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class Question {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"            \"Questions should only contain alphanumeric characters, some special characters \"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"                    + \"and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[\\\\p{Alnum}.,?\u0027():-])\\\\s*[\\\\p{Alnum}.,?\u0027(): -]+$\";","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"    public final String question;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"     * Constructs a {@code Question}.","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"     * @param question A valid question.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"    public Question(String question) {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        requireNonNull(question);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        checkArgument(isValidQuestion(question), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        this.question \u003d question;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if a given string is a valid question.","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"    public static boolean isValidQuestion(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"        return question;","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        if (!(other instanceof Question)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        Question otherQuestion \u003d (Question) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"        return question.equals(otherQuestion.question);","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"        return question.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":59}},{"path":"src/main/java/seedu/address/model/person/UniqueCardList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.exceptions.CardNotFoundException;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.exceptions.DuplicateCardException;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"public class UniqueCardList implements Iterable\u003cCard\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    private final ObservableList\u003cCard\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    private final ObservableList\u003cCard\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    public boolean contains(Card toCheck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    public void add(Card toAdd) {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"            throw new DuplicateCardException();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"            throw new CardNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        if (!target.isSameCard(editedCard) \u0026\u0026 contains(editedCard)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"            throw new DuplicateCardException();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        internalList.set(index, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"    public void remove(Card toRemove) {","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"            throw new CardNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    public void setCards(UniqueCardList replacement) {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"    public void setCards(List\u003cCard\u003e cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        if (!cardsAreUnique(cards)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"            throw new DuplicateCardException();","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"        internalList.setAll(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"    public Iterator\u003cCard\u003e iterator() {","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof UniqueCardList)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"        UniqueCardList otherUniqueCardList \u003d (UniqueCardList) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"        return internalList.equals(otherUniqueCardList.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"    private boolean cardsAreUnique(List\u003cCard\u003e persons) {","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"                if (persons.get(i).isSameCard(persons.get(j))) {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":31,"GSgiansen":2,"-":120}},{"path":"src/main/java/seedu/address/model/person/exceptions/CardNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" * Signals that the operation is unable to find the specified card.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"public class CardNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":6}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateCardException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" * Signals that the operation will result in duplicate Cards (Cards are considered duplicates if they have the same","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":" * identity).","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"public class DuplicateCardException extends RuntimeException {","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    public DuplicateCardException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"        super(\"Operation would result in duplicate card\");","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":11}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Answer;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Question;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    public static Card[] getSampleCard() {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"        return new Card[] {new Card(new Question(\"What is 1 + 1\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"                new Answer(\"2\"), \"new\"), new Card(new Question(\"What is 1 + 3\"), new Answer(\"4\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"                \"easy\")","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public static Deck getSampleDeck() {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        Deck sampleAb \u003d new Deck();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        for (Card sampleCard : getSampleCard()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"            sampleAb.addCard(sampleCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"winson8222":12,"-":28}},{"path":"src/main/java/seedu/address/storage/DeckStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"public interface DeckStorage {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     * @see #getDeckFilePath()","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    Optional\u003cReadOnlyDeck\u003e readDeck(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     * @param deck cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    void saveDeck(ReadOnlyDeck deck) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"     * @see #saveDeck(ReadOnlyDeck)","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    void saveDeck(ReadOnlyDeck deck, Path filePath) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Answer;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Question;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":" * Jackson-friendly version of {@link Card}.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"class JsonAdaptedCard {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private final String question;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    private final String answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    private final String diffculty;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public JsonAdaptedCard(@JsonProperty(\"question\") String question, @JsonProperty(\"answer\") String answer,","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"                           @JsonProperty(\"difficulty\") String difficulty) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        this.question \u003d question;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        this.diffculty \u003d difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    public JsonAdaptedCard(Card source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        question \u003d source.getQuestion().question;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        answer \u003d source.getAnswer().answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        diffculty \u003d source.getDifficulty();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    public Card toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        if (question \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"                    Question.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        if (!Question.isValidQuestion(question)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(Question.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        final Question modelQuestion \u003d new Question(question);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        if (answer \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Answer.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        if (!Answer.isValidAnswer(answer)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(Answer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        final Answer modelAnswer \u003d new Answer(answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        return new Card(modelQuestion, modelAnswer, diffculty);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":77}},{"path":"src/main/java/seedu/address/storage/JsonDeckStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":" * A class to access Deck data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"public class JsonDeckStorage implements DeckStorage {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDeckStorage.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    public JsonDeckStorage(Path filePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        return filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        return readDeck(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * Similar to {@link #readDeck()}.","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"                Files.write(filePath, \"{}\".getBytes()); // Create the \u0027deck.json\u0027 file with empty JSON content","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"                throw new DataLoadingException(e);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"        // Check if the file is empty or contains only whitespace","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"            String content \u003d new String(Files.readAllBytes(filePath), StandardCharsets.UTF_8);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"            if (content.trim().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        Optional\u003cJsonSerializableDeck\u003e jsonDeck \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"                filePath, JsonSerializableDeck.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"        if (!jsonDeck.isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"            return Optional.of(jsonDeck.get().toModelType());","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"        saveDeck(deck, filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"     * Similar to {@link #saveDeck(ReadOnlyDeck)}.","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck, Path filePath) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"        requireNonNull(deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDeck(deck), filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":106}},{"path":"src/main/java/seedu/address/storage/JsonSerializableDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"@JsonRootName(value \u003d \"deck\")","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"class JsonSerializableDeck {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DUPLICATE_CARD \u003d \"Cards list contains duplicate card(s).\";","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    private final List\u003cJsonAdaptedCard\u003e cards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given cards.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public JsonSerializableDeck(@JsonProperty(\"cards\") List\u003cJsonAdaptedCard\u003e cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        this.cards.addAll(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    public JsonSerializableDeck(ReadOnlyDeck source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        cards.addAll(source.getCardList().stream().map(JsonAdaptedCard::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     * @throws IllegalValueException if there were any data co nstraints violated.","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    public Deck toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        for (JsonAdaptedCard jsonAdaptedCard : cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"            Card card \u003d jsonAdaptedCard.toModelType();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"            if (deck.hasCard(card)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            deck.addCard(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        return deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":61}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyUserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage2 {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    public Optional\u003cUserPrefs2\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    public Optional\u003cUserPrefs2\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs2.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        return filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs2 userPrefs) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"GSgiansen":14,"-":35}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyUserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"public class JsonUserPrefsStorage2 implements UserPrefsStorage2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public JsonUserPrefsStorage2(Path filePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        return filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cUserPrefs2\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cUserPrefs2\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs2.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs2 userPrefs) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":49}},{"path":"src/main/java/seedu/address/storage/Storage2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyUserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"public interface Storage2 extends DeckStorage, UserPrefsStorage2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    Optional\u003cUserPrefs2\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs2 userPrefs) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    void saveDeck(ReadOnlyDeck addressBook) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":35}},{"path":"src/main/java/seedu/address/storage/StorageManager2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyUserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" * Manages storage of Deck data in local storage.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"public class StorageManager2 implements Storage2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager2.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    private DeckStorage deckStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    private UserPrefsStorage2 userPrefsStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     * Creates a {@code StorageManager} with the given {@code DeckStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    public StorageManager2(DeckStorage deckStorage, UserPrefsStorage2 userPrefsStorage) {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        this.deckStorage \u003d deckStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cUserPrefs2\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs2 userPrefs) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Deck methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        return deckStorage.getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        return readDeck(deckStorage.getDeckFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        return deckStorage.readDeck(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        saveDeck(deck, deckStorage.getDeckFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck, Path filePath) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        deckStorage.saveDeck(deck, filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":79}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage2.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyUserPrefs2;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":" * Represents a storage for {@link UserPrefs2}.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"public interface UserPrefsStorage2 {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    Optional\u003cUserPrefs2\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"     * Saves the given {@link ReadOnlyUserPrefs2} to the storage.","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs2 userPrefs) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":5,"GSgiansen":2,"-":29}},{"path":"src/main/java/seedu/address/ui/CardListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"public class CardListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    private static final String FXML \u003d \"CardListPanel.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CardListPanel.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    private ListView\u003cCard\u003e cardListView;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    public CardListPanel(ObservableList\u003cCard\u003e cardList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        cardListView.setItems(cardList);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"        cardListView.setCellFactory(listView -\u003e new CardListViewCell());","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"    class CardListViewCell extends ListCell\u003cCard\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        protected void updateItem(Card card, boolean empty) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"            super.updateItem(card, empty);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"            if (empty || card \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"                setText(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"                setGraphic(new DisplayCard(card, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"GSgiansen":50}},{"path":"src/main/java/seedu/address/ui/DisplayCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":" * DisplayCard class to showcase the question and the answr","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"public class DisplayCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    private static final String FXML \u003d \"DisplayListCard.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    public final Card card;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    private Label id;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    private Label question;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    public DisplayCard(Card card, int displayedIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        this.card \u003d card;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        question.setText(card.getQuestion().question);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"GSgiansen":44}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Logic2;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    private Logic2 logic;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    private CardListPanel cardListPanel;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    private StackPane cardListPanelPlaceholder;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"    public MainWindow(Stage primaryStage, Logic2 logic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        cardListPanel \u003d new CardListPanel(logic.getFilteredCardList());","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        cardListPanelPlaceholder.getChildren().add(cardListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDeckFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":127,"author":{"gitId":"GSgiansen"},"content":"    public CardListPanel getCardListPanel() {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"GSgiansen"},"content":"        return cardListPanel;","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"GSgiansen"},"content":"     * @see Logic2#execute(String)","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"GSgiansen":11,"-":146}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Logic2;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    private Logic2 logic;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    public UiManager(Logic2 logic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    void showAlertDialogAndWait(AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        showAlertDialogAndWait(AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"winson8222":2,"GSgiansen":3,"-":83}},{"path":"src/main/resources/view/CardListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"  \u003cListView fx:id\u003d\"cardListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GSgiansen":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"GSgiansen"},"content":"    color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"GSgiansen"},"content":"    text-shadow: 0 0 5px rgba(0,0,0,0.5);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"GSgiansen":2,"-":351}},{"path":"src/main/resources/view/DisplayListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        \u003cLabel fx:id\u003d\"question\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"      \u003cLabel fx:id\u003d\"answer\" styleClass\u003d\"cell_small_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GSgiansen":2,"-":31}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"         title\u003d\"lesSON\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        \u003cVBox fx:id\u003d\"cardList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"          \u003cStackPane fx:id\u003d\"cardListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"GSgiansen":3,"-":53}},{"path":"src/main/resources/view/new/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"   \u003ctop\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"      \u003cHBox prefHeight\u003d\"50.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"50.0\" prefWidth\u003d\"150.0\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"logo-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"lesSON\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"50.0\" prefWidth\u003d\"450.0\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"heading-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"Current Deck:\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"   \u003c/top\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"   \u003cbottom\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"      \u003cHBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"200.0\" spacing\u003d\"10.0\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"            \u003cTextField promptText\u003d\"Enter a command...\" styleClass\u003d\"command-text\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"                  \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"            \u003cButton mnemonicParsing\u003d\"false\" styleClass\u003d\"button-primary\" stylesheets\u003d\"@Theme.css\" text\u003d\"Enter\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"   \u003c/bottom\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"   \u003cleft\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"      \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"150.0\" style\u003d\"-fx-padding: 10; -fx-spacing: 8; -fx-alignment: top-center;\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"            \u003cLabel styleClass\u003d\"heading-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"Decks\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"30.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"deck\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"deck-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"Deck Name\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"   \u003c/left\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"   \u003cright\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"      \u003cVBox prefHeight\u003d\"310.0\" prefWidth\u003d\"450.0\" spacing\u003d\"8.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"flashcard\" stylesheets\u003d\"@Theme.css\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"flashcard-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"What does srl $t1 $t2 5 do?\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"               \u003ceffect\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"                  \u003cDropShadow height\u003d\"10.0\" offsetX\u003d\"1.0\" offsetY\u003d\"1.0\" radius\u003d\"4.5\" width\u003d\"10.0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"                        \u003cColor red\u003d\"0.41960784792900085\" green\u003d\"0.7254902124404907\" blue\u003d\"0.5647059082984924\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"                  \u003c/DropShadow\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"               \u003c/effect\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"            \u003cButton id\u003d\"flashcard-button\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"40.0\" prefWidth\u003d\"450.0\" styleClass\u003d\"button-primary\" stylesheets\u003d\"@Theme.css\" text\u003d\"Show Answer\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"   \u003c/right\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"\u003c/BorderPane\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Dioclei":81}},{"path":"src/main/resources/view/new/Theme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"@font-face {","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"    font-family: \"Poppins Medium\";","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"    src: url(\u0027@resources/fonts/Poppins/Poppins-Medium.ttf\u0027);","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"@font-face {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"    font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"    src: url(\u0027@resources/fonts/Poppins/Poppins-Regular.ttf\u0027);","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"@font-face {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    src: url(\u0027@resources/fonts/Poppins/Poppins-SemiBold.ttf\u0027);","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":".container {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#34403A\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":".logo-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":".heading-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Medium\";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":".deck {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":".deck-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#34403A\";","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":".button-primary {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#6B9AC4\";","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":".flashcard {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#D3EFBD\";","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":".flashcard-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#34403A\";","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":".command-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Dioclei":64}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ModelManager2;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    private Model2 model;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        model \u003d new ModelManager2(getTypicalDeck(), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public void execute_newCard_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        Card validCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"        Model2 expectedModel \u003d new ModelManager2(model.getDeck(), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.addCard(validCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        assertCommandSuccess(new AddCommand2(validCard), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"                String.format(AddCommand2.MESSAGE_SUCCESS, Messages2.format(validCard)),","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    public void execute_duplicateCard_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        Card cardInList \u003d model.getDeck().getCardList().get(0);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        assertCommandFailure(new AddCommand2(cardInList), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"                AddCommand2.MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":19,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyUserPrefs2;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    public void constructor_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand2(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"    public void execute_cardAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        ModelStubAcceptingCardAdded modelStub \u003d new ModelStubAcceptingCardAdded();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        Card validCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        CommandResult commandResult \u003d new AddCommand2(validCard).execute(modelStub);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(String.format(AddCommand2.MESSAGE_SUCCESS, Messages2.format(validCard)),","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(Arrays.asList(validCard), modelStub.cardsAdded);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"    public void execute_duplicateCard_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"        Card validCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"        AddCommand2 addCommand \u003d new AddCommand2(validCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"        ModelStub modelStub \u003d new ModelStubWithCard(validCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(CommandException.class, AddCommand2.MESSAGE_DUPLICATE_CARD, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"        Card cs2100 \u003d new CardBuilder().withQuestion(\"What colour is the sky\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"        Card cs1101s \u003d new CardBuilder().withQuestion(\"what colour is the grass\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"        AddCommand2 addcs2100Command \u003d new AddCommand2(cs2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        AddCommand2 addcs1101sCommand \u003d new AddCommand2(cs1101s);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(addcs2100Command.equals(addcs2100Command));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"        AddCommand2 addcs2100CommandCopy \u003d new AddCommand2(cs2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(addcs2100Command.equals(addcs2100CommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(addcs2100Command.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(addcs2100Command.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        // different Card -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(addcs2100Command.equals(addcs1101sCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"        AddCommand2 addCommand \u003d new AddCommand2(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"        String expected \u003d AddCommand2.class.getCanonicalName() + \"{toAdd\u003d\" + CS2100 + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"    private class ModelStub implements Model2 {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs2 userPrefs) {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        public ReadOnlyUserPrefs2 getUserPrefs() {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"        public Path getDeckFilePath() {","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"GSgiansen"},"content":"        public void setDeckFilePath(Path deckFilePath) {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"GSgiansen"},"content":"        public void addCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"GSgiansen"},"content":"        public void setDeck(ReadOnlyDeck newData) {","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"GSgiansen"},"content":"        public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"GSgiansen"},"content":"        public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"GSgiansen"},"content":"        public void deleteCard(Card target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"GSgiansen"},"content":"        public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"GSgiansen"},"content":"        public ObservableList\u003cCard\u003e getFilteredCardList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"GSgiansen"},"content":"        public void updateFilteredCardList(Predicate\u003cCard\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"GSgiansen"},"content":"     * A Model stub that contains a single Card.","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"GSgiansen"},"content":"    private class ModelStubWithCard extends ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"GSgiansen"},"content":"        private final Card card;","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"GSgiansen"},"content":"        ModelStubWithCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"GSgiansen"},"content":"            this.card \u003d card;","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"GSgiansen"},"content":"        public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"GSgiansen"},"content":"            return this.card.isSameCard(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"GSgiansen"},"content":"     * A Model stub that always accept the Card being added.","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"GSgiansen"},"content":"    private class ModelStubAcceptingCardAdded extends ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"GSgiansen"},"content":"        final ArrayList\u003cCard\u003e cardsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"GSgiansen"},"content":"        public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"GSgiansen"},"content":"            return cardsAdded.stream().anyMatch(card::isSameCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"GSgiansen"},"content":"        public void addCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"GSgiansen"},"content":"            cardsAdded.add(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"GSgiansen"},"content":"        public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"GSgiansen"},"content":"            return new Deck();","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":67,"-":136}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.EditCardDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_QUESTION_CS2100 \u003d \"What is 5 in 2\u0027s complement\";","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_QUESTION_CS1101S \u003d \"What colour is grey\";","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_ANSWER_CS2100 \u003d \"0101\";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_ANSWER_CS1101S \u003d \"Grey\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    public static final EditCommand2.EditCardDescriptor DESC_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    public static final EditCommand2.EditCardDescriptor DESC_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"        DESC_CS2100 \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS2100).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"        DESC_CS1101S \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS1101S)","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS1101S).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"    public static void assertCommandSuccess(Command2 command, Model2 actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"            Model2 expectedModel) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command2, Model2, CommandResult, Model2)}","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"    public static void assertCommandSuccess(Command2 command, Model2 actualModel, String expectedMessage,","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"            Model2 expectedModel) {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"     * - the address book, filtered Card list and selected Card in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"    public static void assertCommandFailure(Command2 command, Model2 actualModel, String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        Deck expectedDeck \u003d new Deck(actualModel.getDeck());","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"        List\u003cCard\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCardList());","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedDeck, actualModel.getDeck());","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCardList());","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"    public static void showCardAtIndex(Model2 model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"        Card card \u003d model.getFilteredCardList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"        final String[] splitName \u003d card.getQuestion().question.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(1, model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":36,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ModelManager2;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    private Model2 model \u003d new ModelManager2(getTypicalDeck(), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        Card cardToDelete \u003d model.getFilteredCardList().get(INDEX_FIRST_CARD.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        DeleteCommand2 deleteCommand \u003d new DeleteCommand2(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        String expectedMessage \u003d String.format(DeleteCommand2.MESSAGE_DELETE_CARD_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"                Messages2.format(cardToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        ModelManager2 expectedModel \u003d new ModelManager2(model.getDeck(), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.deleteCard(cardToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCardList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"        DeleteCommand2 deleteCommand \u003d new DeleteCommand2(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        assertCommandFailure(deleteCommand, model, Messages2.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        DeleteCommand2 deleteFirstCommand \u003d new DeleteCommand2(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        DeleteCommand2 deleteSecondCommand \u003d new DeleteCommand2(INDEX_SECOND_CARD);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        DeleteCommand2 deleteFirstCommandCopy \u003d new DeleteCommand2(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        // different Card -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        DeleteCommand2 deleteCommand \u003d new DeleteCommand2(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        String expected \u003d DeleteCommand2.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"    private void showNoCard(Model2 model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"        model.updateFilteredCardList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(model.getFilteredCardList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":27,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/EditCardDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.EditCommand2.EditCardDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.EditCardDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"public class EditCardDescriptorTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptorWithSameValues \u003d new EditCardDescriptor(DESC_CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(DESC_CS2100.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(DESC_CS2100.equals(DESC_CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(DESC_CS1101S));","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor editedCS2100 \u003d new EditCardDescriptorBuilder(DESC_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"                .withQuestion(VALID_QUESTION_CS1101S).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(editedCS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        editedCS2100 \u003d new EditCardDescriptorBuilder(DESC_CS2100).withAnswer(VALID_ANSWER_CS1101S).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(editedCS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor editCardDescriptor \u003d new EditCardDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"        String expected \u003d EditCardDescriptor.class.getCanonicalName() + \"{question\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"                + editCardDescriptor.getQuestion().orElse(null) + \", answer\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"                + editCardDescriptor.getAnswer().orElse(null) + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expected, editCardDescriptor.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":54}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.Messages2;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.EditCommand2.EditCardDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ModelManager2;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.EditCardDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    private Model2 model \u003d new ModelManager2(getTypicalDeck(), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        Card editedCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder(editedCard).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        EditCommand2 editCommand \u003d new EditCommand2(INDEX_FIRST_CARD, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        String expectedMessage \u003d String.format(EditCommand2.MESSAGE_EDIT_CARD_SUCCESS, Messages2.format(editedCard));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        Model2 expectedModel \u003d new ModelManager2(new Deck(model.getDeck()), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.setCard(model.getFilteredCardList().get(0), editedCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        Index indexLastCard \u003d Index.fromOneBased(model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        Card lastCard \u003d model.getFilteredCardList().get(indexLastCard.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"        CardBuilder cardInList \u003d new CardBuilder(lastCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"        Card editedCard \u003d cardInList.withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS2100).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS2100).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"        EditCommand2 editCommand \u003d new EditCommand2(indexLastCard, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"        String expectedMessage \u003d String.format(EditCommand2.MESSAGE_EDIT_CARD_SUCCESS, Messages2.format(editedCard));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"        Model2 expectedModel \u003d new ModelManager2(new Deck(model.getDeck()), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.setCard(lastCard, editedCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        EditCommand2 editCommand \u003d new EditCommand2(INDEX_FIRST_CARD, new EditCardDescriptor());","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        Card editedCard \u003d model.getFilteredCardList().get(INDEX_FIRST_CARD.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        String expectedMessage \u003d String.format(EditCommand2.MESSAGE_EDIT_CARD_SUCCESS, Messages2.format(editedCard));","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        Model2 expectedModel \u003d new ModelManager2(new Deck(model.getDeck()), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    public void execute_duplicateCardUnfilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"        Card firstCard \u003d model.getFilteredCardList().get(INDEX_FIRST_CARD.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder(firstCard).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"        EditCommand2 editCommand \u003d new EditCommand2(INDEX_SECOND_CARD, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        assertCommandFailure(editCommand, model, EditCommand2.MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"    public void execute_invalidCardIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCardList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"        EditCommand2 editCommand \u003d new EditCommand2(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"        assertCommandFailure(editCommand, model, Messages2.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"        final EditCommand2 standardCommand \u003d new EditCommand2(INDEX_FIRST_CARD, DESC_CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor copyDescriptor \u003d new EditCardDescriptor(DESC_CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(copyDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(standardCommand.equals(new EditCommand2(INDEX_SECOND_CARD, DESC_CS2100)));","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(standardCommand.equals(new EditCommand2(INDEX_FIRST_CARD, DESC_CS1101S)));","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor editCardDescriptor \u003d new EditCardDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"GSgiansen"},"content":"        EditCommand2 editCommand \u003d new EditCommand2(index, editCardDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"GSgiansen"},"content":"        String expected \u003d EditCommand2.class.getCanonicalName() + \"{index\u003d\" + index + \", editCardDescriptor\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"GSgiansen"},"content":"                + editCardDescriptor + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":58,"-":80}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.ExitCommand2.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ModelManager2;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    private Model2 model \u003d new ModelManager2();","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    private Model2 expectedModel \u003d new ModelManager2();","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"        assertCommandSuccess(new ExitCommand2(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":6,"-":14}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ModelManager2;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    private Model2 model \u003d new ModelManager2();","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    private Model2 expectedModel \u003d new ModelManager2();","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":4,"-":16}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ModelManager2;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    private Model2 model;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    private Model2 expectedModel;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        model \u003d new ModelManager2(getTypicalDeck(), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"        expectedModel \u003d new ModelManager2(model.getDeck(), new UserPrefs2());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        assertCommandSuccess(new ListCommand2(), model, ListCommand2.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":9,"-":22}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.Command2;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    public static void assertParseSuccess(Parser2\u003c? extends Command2\u003e parser, String userInput,","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"            Command2 expectedCommand) {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"            Command2 command \u003d parser.parse(userInput);","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    public static void assertParseFailure(Parser2\u003c? extends Command2\u003e parser, String userInput, String expectMessage) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"            assertEquals(expectMessage, pe.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"GSgiansen":6,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.Messages2.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.DeleteCommand2;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    private DeleteCommandParser2 parser \u003d new DeleteCommandParser2();","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand2(INDEX_FIRST_CARD));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand2.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"GSgiansen":6,"-":26}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.DeckBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    private ModelManager2 modelManager \u003d new ModelManager2();","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(new UserPrefs2(), modelManager.getUserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(new Deck(), new Deck(modelManager.getDeck()));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 userPrefs \u003d new UserPrefs2();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        userPrefs.setDeckFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 oldUserPrefs \u003d new UserPrefs2(userPrefs);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        userPrefs.setDeckFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDeckFilePath(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"        modelManager.setDeckFilePath(path);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(path, modelManager.getDeckFilePath());","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCard(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(modelManager.hasCard(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"        modelManager.addCard(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(modelManager.hasCard(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCardList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).withCard(CS1101S).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        Deck diffDeck \u003d new Deck();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 userPrefs \u003d new UserPrefs2();","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"        modelManager \u003d new ModelManager2(deck, userPrefs);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"        ModelManager2 modelManagerCopy \u003d new ModelManager2(deck, userPrefs);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(modelManager.equals(new ModelManager2(diffDeck, userPrefs)));","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":24,"-":92}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 userPref \u003d new UserPrefs2();","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 userPrefs \u003d new UserPrefs2();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDeckFilePath(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"GSgiansen":3,"-":18}},{"path":"src/test/java/seedu/address/model/person/AnswerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class AnswerTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Answer(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_invalidAnswer_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"        String invalidAnswer \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Answer(invalidAnswer));","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"    public void isValidAnswer() {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        // null answer","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e Answer.isValidAnswer(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"        // invalid answer","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Answer.isValidAnswer(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Answer.isValidAnswer(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Answer.isValidAnswer(\"^\")); // only disallowed characters","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Answer.isValidAnswer(\"Name 2 types of UML diagrams~\")); // contains disallowed characters","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"        // valid answer","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Answer.isValidAnswer(\"Craft the truth table for A and B\")); // alphabets only","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Answer.isValidAnswer(\"12345\")); // numbers only","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Answer.isValidAnswer(","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"                \"What are the first 6 bits for R-format instructions?\")); // long answers","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"        Answer answer \u003d new Answer(\"Valid Answer\");","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(answer.equals(new Answer(\"Valid Answer\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(answer.equals(answer));","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(answer.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(answer.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(answer.equals(new Answer(\"Other Valid Answer\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":59}},{"path":"src/test/java/seedu/address/model/person/CardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.CS1231S;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"public class CardTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    public void isSameCard() {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS2100.isSameCard(CS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS2100.isSameCard(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        // same question, different answer -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        // to update with CommandTestUtil","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        Card editedCS2100 \u003d new CardBuilder(CS2100).withAnswer(\"000000\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS2100.isSameCard(editedCS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"        // different question, same answer -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"        editedCS2100 \u003d new CardBuilder(CS2100).withQuestion(\"What is the opcode for R-format instructions\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS2100.isSameCard(editedCS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"        Card editedCS1231S \u003d new CardBuilder(CS1231S).withQuestion(","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"                CS1231S.getQuestion().toString().toLowerCase()).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1231S.isSameCard(editedCS1231S));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"        Card cs1101sCopy \u003d new CardBuilder(CS1101S).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS1101S.equals(cs1101sCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS1101S.equals(CS1101S));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(5));","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        // different card -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(CS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"        Card editedAlice \u003d new CardBuilder(CS1101S).withQuestion(CS2100.getQuestion().toString()).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(editedAlice));","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jinyuan0425"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"        String expected \u003d Card.class.getCanonicalName() + \"{question\u003d\" + CS1101S.getQuestion()","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jinyuan0425"},"content":"                + \", answer\u003d\" + CS1101S.getAnswer() + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"jinyuan0425"},"content":"        assertEquals(expected, CS1101S.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jinyuan0425":67}},{"path":"src/test/java/seedu/address/model/person/QuestionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class QuestionTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Question(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_invalidQuestion_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"        String invalidQuestion \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Question(invalidQuestion));","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"    public void isValidQuestion() {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        // null question","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e Question.isValidQuestion(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"        // invalid question","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Question.isValidQuestion(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Question.isValidQuestion(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Question.isValidQuestion(\"^\")); // only disallowed characters","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Question.isValidQuestion(\"Name 2 types of UML diagrams~\")); // contains disallowed characters","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"        // valid question","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Question.isValidQuestion(\"Craft the truth table for A and B\")); // alphabets only","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Question.isValidQuestion(\"12345\")); // numbers only","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Question.isValidQuestion(","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"                \"What are the first 6 bits for R-format instructions?\")); // long questions","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"        Question question \u003d new Question(\"Valid Question\");","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(question.equals(new Question(\"Valid Question\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(question.equals(question));","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(question.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(question.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(question.equals(new Question(\"Other Valid Question\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":59}},{"path":"src/test/java/seedu/address/model/person/UniqueCardListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.exceptions.CardNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.exceptions.DuplicateCardException;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"public class UniqueCardListTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    private final UniqueCardList uniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public void contains_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.contains(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public void contains_cardNotInList_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(uniqueCardList.contains(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    public void contains_cardInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(uniqueCardList.contains(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    public void add_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.add(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    public void add_duplicateCard_throwsDuplicateCardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DuplicateCardException.class, () -\u003e uniqueCardList.add(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_nullTargetCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCard(null, CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_nullEditedCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCard(CS2100, null));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_targetCardNotInList_throwsCardNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(CardNotFoundException.class, () -\u003e uniqueCardList.setCard(CS2100, CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardIsSameCard_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCard(CS2100, CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardHasSameIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        Card editedCS2100 \u003d new CardBuilder(CS2100).withQuestion(\"Is the sun green?\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCard(CS2100, editedCS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(editedCS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCard(CS2100, CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardHasNonUniqueIdentity_throwsDuplicateCardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DuplicateCardException.class, () -\u003e uniqueCardList.setCard(CS2100, CS1101S));","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"    public void remove_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.remove(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"    public void remove_cardDoesNotExist_throwsCardNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(CardNotFoundException.class, () -\u003e uniqueCardList.remove(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"GSgiansen"},"content":"    public void remove_existingCard_removesCard() {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.remove(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_nullUniqueCardList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCards((UniqueCardList) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_uniqueCardList_replacesOwnListWithProvidedUniqueCardList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCards(expectedUniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCards((List\u003cCard\u003e) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"GSgiansen"},"content":"        List\u003cCard\u003e cardList \u003d Collections.singletonList(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCards(cardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_listWithDuplicateCards_throwsDuplicateCardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"GSgiansen"},"content":"        List\u003cCard\u003e listWithDuplicateCards \u003d Arrays.asList(CS2100, CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DuplicateCardException.class, () -\u003e uniqueCardList.setCards(listWithDuplicateCards));","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"GSgiansen"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"GSgiansen"},"content":"            -\u003e uniqueCardList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"GSgiansen"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(uniqueCardList.asUnmodifiableObservableList().toString(), uniqueCardList.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":164}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"//import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"//}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"GSgiansen":110}},{"path":"src/test/java/seedu/address/storage/JsonDeckStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"public class JsonDeckStorageTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDeckStorageTest\");","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    @TempDir","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    public void readDeck_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDeck(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    private java.util.Optional\u003cReadOnlyDeck\u003e readDeck(String filePath) throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        return new JsonDeckStorage(Paths.get(filePath)).readDeck(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"                : null;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(readDeck(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"notJsonFormatDeck.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"    public void readDeck_invalidCardDeck_throwDataLoadingException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"invalidCardDeck.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"    public void readDeck_invalidAndValidCardDeck_throwDataLoadingException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"invalidAndValidCardDeck.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"    public void readAndSaveDeck_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"        Deck original \u003d getTypicalDeck();","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"        JsonDeckStorage jsonDeckStorage \u003d new JsonDeckStorage(filePath);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        jsonDeckStorage.saveDeck(original, filePath);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"        ReadOnlyDeck readBack \u003d jsonDeckStorage.readDeck(filePath).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(original, new Deck(readBack));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"    public void saveDeck_nullDeck_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDeck(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"     * Saves {@code Deck} at the specified {@code filePath}.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"    private void saveDeck(ReadOnlyDeck deck, String filePath) {","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"            new JsonDeckStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"                    .saveDeck(deck, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"    public void saveDeck_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDeck(new Deck(), null));","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":94}},{"path":"src/test/java/seedu/address/storage/JsonSerializableDeckTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.TypicalCards;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"public class JsonSerializableDeckTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDeckTest\");","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    private static final Path TYPICAL_CARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCardDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    private static final Path INVALID_CARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCardDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    private static final Path DUPLICATE_CARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCardDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    public void toModelType_typicalCardsFile_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        JsonSerializableDeck dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CARD_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"                JsonSerializableDeck.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        Deck deckFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        Deck typicalCardsDeck \u003d TypicalCards.getTypicalDeck();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(deckFromFile, typicalCardsDeck);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        JsonSerializableDeck dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CARD_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"                JsonSerializableDeck.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    public void toModelType_duplicateCards_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        JsonSerializableDeck dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CARD_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"                JsonSerializableDeck.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDeck.MESSAGE_DUPLICATE_CARD,","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.UserPrefs2;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    private Optional\u003cUserPrefs2\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(new UserPrefs2(), actual);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"    private UserPrefs2 getTypicalUserPrefs() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        UserPrefs2 userPrefs \u003d new UserPrefs2();","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        userPrefs.setDeckFilePath(Paths.get(\"data/deck.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"    private void saveUserPrefs(UserPrefs2 userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":12,"-":80}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    private StorageManager2 storageManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        JsonDeckStorage deckStorage \u003d new JsonDeckStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        storageManager \u003d new StorageManager2(deckStorage, userPrefsStorage);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    public void deckReadSave() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"         * {@link JsonDeckStorage} class.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDeckStorageTest} class.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        Deck original \u003d getTypicalDeck();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        storageManager.saveDeck(original);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        ReadOnlyDeck retrieved \u003d storageManager.readDeck().get();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(original, new Deck(retrieved));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    public void getDeckFilePath() {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        assertNotNull(storageManager.getDeckFilePath());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":15,"-":36}},{"path":"src/test/java/seedu/address/testutil/CardBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.model.person.Answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.model.person.Question;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"public class CardBuilder {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"    public static final String DEFAULT_QUESTION \u003d \"What is the opcode for R-format instructions?\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"    public static final String DEFAULT_ANSWER \u003d \"0\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"    private Question question;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    private Answer answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"     * Creates a {@code CardBuilder} with the default details.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder() {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"        question \u003d new Question(DEFAULT_QUESTION);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        answer \u003d new Answer(DEFAULT_ANSWER);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"     * Initializes the CardBuilder with the data of {@code cardToCopy}.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder(Card cardToCopy) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"        question \u003d cardToCopy.getQuestion();","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        answer \u003d cardToCopy.getAnswer();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"     * Sets the {@code Question} of the {@code Card} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder withQuestion(String question) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"        this.question \u003d new Question(question);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"     * Sets the {@code Answer} of the {@code Card} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder withAnswer(String answer) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"        this.answer \u003d new Answer(answer);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"    public Card build() {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        return new Card(question, answer, \"new\");","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jinyuan0425":53,"winson8222":1}},{"path":"src/test/java/seedu/address/testutil/CardUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.AddCommand2;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.EditCommand2.EditCardDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":" * A utility class for Card.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"public class CardUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * Returns an add command string for adding the {@code Card}.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    public static String getAddCommand(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        return AddCommand2.COMMAND_WORD + \" \" + getCardDetails(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * Returns the part of command string for the given {@code Card}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public static String getCardDetails(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        sb.append(PREFIX_QUESTION + card.getQuestion().question + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        sb.append(PREFIX_ANSWER + card.getAnswer().answer + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"     * Returns the part of command string for the given {@code EditCardDescriptor}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    public static String getEditCardDescriptorDetails(EditCardDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        descriptor.getQuestion().ifPresent(name -\u003e sb.append(PREFIX_QUESTION).append(name.question).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        descriptor.getAnswer().ifPresent(name -\u003e sb.append(PREFIX_ANSWER).append(name.answer).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":41}},{"path":"src/test/java/seedu/address/testutil/DeckBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":" * A utility class to help with building Deck objects.","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":" *     {@code AddressBook ab \u003d new DeckBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"public class DeckBuilder {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    private Deck deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    public DeckBuilder() {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"        deck \u003d new Deck();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    public DeckBuilder(Deck deck) {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        this.deck \u003d deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public DeckBuilder withCard(Card card) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        deck.addCard(card);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public Deck build() {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        return deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"GSgiansen":33}},{"path":"src/test/java/seedu/address/testutil/EditCardDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.EditCommand2;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Answer;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Question;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":" * A utility class to help with building EditCardDescriptor objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"public class EditCardDescriptorBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    private EditCommand2.EditCardDescriptor descriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"        descriptor \u003d new EditCommand2.EditCardDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder(EditCommand2.EditCardDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"        this.descriptor \u003d new EditCommand2.EditCardDescriptor(descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     * Returns an {@code EditCardDescriptor} with fields containing {@code Card}\u0027s details","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        descriptor \u003d new EditCommand2.EditCardDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setQuestion(card.getQuestion());","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setAnswer(card.getAnswer());","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"     * Sets the {@code Name} of the {@code EditCardDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder withQuestion(String question) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setQuestion(new Question(question));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"     * Sets the {@code Phone} of the {@code EditCardDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder withAnswer(String answer) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setAnswer(new Answer(answer));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    public EditCommand2.EditCardDescriptor build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        return descriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":50}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Model2;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    public static Index getMidIndex(Model2 model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        return Index.fromOneBased(model.getFilteredCardList().size() / 2);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    public static Index getLastIndex(Model2 model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"        return Index.fromOneBased(model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"    public static Card getCard(Model2 model, Index index) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        return model.getFilteredCardList().get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":9,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalCards.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.model.person.Card;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":" * A utility class containing a list of {@code Card} objects to be used in tests.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"public class TypicalCards {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"    public static final Card CS2100 \u003d new CardBuilder().withQuestion(\"R-Format instruction opcode\")","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"            .withAnswer(\"0\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"    public static final Card CS1231S \u003d new CardBuilder().withQuestion(\"Name the 3 relations\")","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"            .withAnswer(\"Reflexive, Symmetric, Transitive\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"    public static final Card CS1101S \u003d new CardBuilder().withQuestion(\"What is the language used for this mod?\")","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"            .withAnswer(\"Source\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"    private TypicalCards() {} // prevents instantiation","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     * Returns an {@code Deck} with all the typical card.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    public static Deck getTypicalDeck() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        Deck ab \u003d new Deck();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        for (Card card : getTypicalCards()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"            ab.addCard(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        return ab;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    public static List\u003cCard\u003e getTypicalCards() {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2100, CS1101S, CS1231S));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jinyuan0425":24,"GSgiansen":13}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"    public static final Index INDEX_FIRST_CARD \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"    public static final Index INDEX_SECOND_CARD \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    public static final Index INDEX_THIRD_CARD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"GSgiansen":3,"-":9}}]

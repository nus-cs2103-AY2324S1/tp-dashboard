[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W17-4/tp/actions)","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W17-4/tp/graph/badge.svg?token\u003dW8LJNDTB7Y)](https://codecov.io/gh/AY2324S1-CS2103T-W17-4/tp)","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"# lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"lesSON is a flashcard software aimed to help individuals with their memory work in school.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"Key features of lesSON includes:","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"  * Customise flashcards to your liking","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"  * Manage all of your flashcards easily and conveniently","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"  * Test your knowledge by practising with your self-made flashcard deck","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"To increase the flexibility and efficiency of the flashcard software, lesSON is optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"## Features","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"- [x] Add new flashcards","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"- [x] Delete existing flashcards","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"- [x] View all current flashcards","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"- [x] Edit existing flashcards","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"- [x] Practise with existing flashcards","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"- [ ] Tagging of flashcards into categories","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"## Links","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"* [User Guide](https://docs.google.com/document/d/17tfwoslLc0Ky1ygVAM4aDlNsUm8nSdBxpDvt-hqFyWk/edit)","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"winson8222":14,"GSgiansen":1,"weeweh":10,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    implementation \u0027com.vladsch.flexmark:flexmark-all:0.62.2\u0027  // Check for the latest version on Maven Central","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"    archiveFileName \u003d \u0027lesSON.jar\u0027","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"run {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"winson8222":5,"GSgiansen":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"You can reach us at the email `jason.lee.jia.xuan[at]u.nus.edu`","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"### Gian Sen","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"\u003cimg src\u003d\"images/gsgiansen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"[[github](https://github.com/GSgiansen)]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/gsgiansen.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"### Jason","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"\u003cimg src\u003d\"images/dioclei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/Dioclei)]","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/dioclei.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"* Role: Documentation","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"### Jin Yuan","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"\u003cimg src\u003d\"images/jinyuan0425.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/jinyuan0425)] [[portfolio](team/jinyuan0425.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"* Role: Testing","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"### Wee Yeow","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"\u003cimg src\u003d\"images/weeweh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/weeweh)]","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/weeweh.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"* Role: Code Quality","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"* Responsibilities: UX","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"### Winson","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"\u003cimg src\u003d\"images/winson8222.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"[[github](http://github.com/winson8222)]","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"[[portfolio](team/winson8222.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"* Role: Integration","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Dioclei":22,"weeweh":5,"-":31}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"# Table of Contents","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"1. [Build automation](#build-automation)","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"2. [Continuous integration (CI)](#continuous-integration-ci)","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"3. [Making a release](#making-a-release)","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"weeweh":4,"-":77}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"# Table of Contents","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"2. [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"3. [Design](#design)","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"   - [Architecture](#architecture)","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"   - [UI component](#ui-component)","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"   - [Logic component](#logic-component)","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"   - [Model component](#model-component)","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"   - [Storage component](#storage-component)","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"   - [Common classes](#common-classes)","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"   - [Undo/Redo](#proposed-undoredo-feature)","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"   - [Filter](#proposed-filter-by-tag-feature)","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"   - [Markdown Support](#proposed-markdown-support-feature)","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"5. [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"6. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"   - [Product scope](#product-scope)","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"   - [User stories](#user-stories)","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"   - [Use cases](#use-cases)","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"   - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"   - [Glossary](#glossary)","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"7. [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"weeweh"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `CardListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"weeweh"},"content":"* depends on some classes in the `Model` component, as it displays `Card` object residing in the `Model`.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"weeweh"},"content":"* answer of the Card created is hidden from the user when they browse the Deck","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"* user can scroll to see the different `Card` listed in lesSON","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"weeweh"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `DeckParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"weeweh"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a card).","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"weeweh"},"content":"* When called upon to parse a user command, the `DeckParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"weeweh"},"content":"* stores the address book data i.e., all `Card` objects (which are contained in a `UniqueCardList` object).","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"weeweh"},"content":"* stores the currently \u0027selected\u0027 `Card` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cCard\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"weeweh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Deck`, which `Card` references. This allows `Deck` to only require one `Tag` object per unique tag, instead of each `Card` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"weeweh"},"content":"* can save both deck data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"weeweh"},"content":"* inherits from both `DeckStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"weeweh"},"content":"* `VersionedAddressBook#commit()`Saves the current address book state in its history.","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"weeweh"},"content":"* `VersionedAddressBook#undo()`Restores the previous address book state from its history.","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"weeweh"},"content":"* `VersionedAddressBook#redo()`Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"weeweh"},"content":"   * Pros: Easy to implement.","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"weeweh"},"content":"   * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"weeweh"},"content":"   * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-24"},{"lineNumber":255,"author":{"gitId":"weeweh"},"content":"   * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-24"},{"lineNumber":256,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"weeweh"},"content":"### \\[Proposed\\] Filter by Tag feature","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":259,"author":{"gitId":"weeweh"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":260,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":261,"author":{"gitId":"jinyuan0425"},"content":"The proposed feature aims to filter the flashcards and display cards of a specific `tag`. This allows the users to","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"jinyuan0425"},"content":"view specific groups of cards under the same `tag`, granting them more control over their study material.","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"jinyuan0425"},"content":"Given below is an example usage of the filter feature.","lastModifiedDate":"2023-10-24"},{"lineNumber":265,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":266,"author":{"gitId":"jinyuan0425"},"content":"Step 1: User creates various cards.","lastModifiedDate":"2023-10-24"},{"lineNumber":267,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":268,"author":{"gitId":"jinyuan0425"},"content":"Step 2: User executes `edit 1 t/CS2103T`. This causes the first card to be tagged with the tag `CS2103T`.","lastModifiedDate":"2023-10-24"},{"lineNumber":269,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":270,"author":{"gitId":"jinyuan0425"},"content":"Step 3: User repeats step 2 for all the cards associated with `CS2103T`.","lastModifiedDate":"2023-10-24"},{"lineNumber":271,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":272,"author":{"gitId":"jinyuan0425"},"content":"Step 4: User now wants to display only cards with the `CS2103T` tag. User will execute the `filter t/CS2103T`.","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":274,"author":{"gitId":"jinyuan0425"},"content":"Step 5: Deck will now display only the cards with the `CS2103T` tag.","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"jinyuan0425"},"content":"Step 6: Should user want to see the full deck, they will execute `list` to view their full deck of cards.","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"weeweh"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"weeweh"},"content":"**Aspect: How filter executes:**","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"weeweh"},"content":"* **Alternative 1 (current choice):** Filter through the whole deck using the filter method on a stream of cards.","lastModifiedDate":"2023-10-24"},{"lineNumber":283,"author":{"gitId":"weeweh"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-10-24"},{"lineNumber":284,"author":{"gitId":"weeweh"},"content":"    * Cons:","lastModifiedDate":"2023-10-24"},{"lineNumber":285,"author":{"gitId":"weeweh"},"content":"      1. May have performance issues when Deck eventually gets too big.","lastModifiedDate":"2023-10-24"},{"lineNumber":286,"author":{"gitId":"weeweh"},"content":"      2. Inefficient if specific tag is a small fraction of Deck.","lastModifiedDate":"2023-10-24"},{"lineNumber":287,"author":{"gitId":"weeweh"},"content":"* **Alternative 2:** Construct a \\\u0027mini-deck\\\u0027 for each tag.","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"weeweh"},"content":"    * Pros: Quick search for all cards with specific tag.","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"weeweh"},"content":"    * Cons:","lastModifiedDate":"2023-10-24"},{"lineNumber":290,"author":{"gitId":"weeweh"},"content":"      1. Will use more memory.","lastModifiedDate":"2023-10-24"},{"lineNumber":291,"author":{"gitId":"weeweh"},"content":"      2. Adding/Deleting/Editing cards will require modifications to \\\u0027mini-deck\\\u0027.","lastModifiedDate":"2023-10-24"},{"lineNumber":292,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":293,"author":{"gitId":"weeweh"},"content":"### \\[Proposed\\] Search Filter feature","lastModifiedDate":"2023-10-24"},{"lineNumber":294,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":295,"author":{"gitId":"GSgiansen"},"content":"Introducing a search feature that allows users to search for specific flashcards based on their questions. This feature empowers users with greater navigability over their study materials.","lastModifiedDate":"2023-10-24"},{"lineNumber":296,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":297,"author":{"gitId":"GSgiansen"},"content":"Below is an example of the usage of the Search filter","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":299,"author":{"gitId":"GSgiansen"},"content":"Step 1: Assuming the user has existing cards in lesson, with their own set of questions and answers","lastModifiedDate":"2023-10-24"},{"lineNumber":300,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"GSgiansen"},"content":"Step 2: When you want to search for cards with a particular staring phrase, execute the `search q/What` command.","lastModifiedDate":"2023-10-24"},{"lineNumber":302,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":303,"author":{"gitId":"GSgiansen"},"content":"Step 3: The system will then display the cards that match the starting phrase.","lastModifiedDate":"2023-10-24"},{"lineNumber":304,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":305,"author":{"gitId":"GSgiansen"},"content":"Step 4: To return to viewing your full deck of cards, simply execute the `list` command to view all cards stored in lesSON","lastModifiedDate":"2023-10-24"},{"lineNumber":306,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":307,"author":{"gitId":"GSgiansen"},"content":"Step 5: If the user wishes to practise from this view, simply `practise index` for the index of the card","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":309,"author":{"gitId":"weeweh"},"content":"### \\[Proposed\\] Markdown support feature","lastModifiedDate":"2023-10-24"},{"lineNumber":310,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":311,"author":{"gitId":"weeweh"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":312,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":313,"author":{"gitId":"weeweh"},"content":"The proposed feature aims to support Markdown based language for inputs and renders the corresponding display (i.e. ** Bold ** will become **Bold**).","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"weeweh"},"content":"This provides users the freedom to adapt the content within the card, granting them more control over their study material. Users would be able to highlight more specific","lastModifiedDate":"2023-10-24"},{"lineNumber":315,"author":{"gitId":"weeweh"},"content":"part of the `Answer` which would be the key concept tested in the exam.","lastModifiedDate":"2023-10-24"},{"lineNumber":316,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":317,"author":{"gitId":"weeweh"},"content":"Given below is an example usage of the Markdown support feature.","lastModifiedDate":"2023-10-24"},{"lineNumber":318,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":319,"author":{"gitId":"weeweh"},"content":"Step 1: User creates a card.","lastModifiedDate":"2023-10-24"},{"lineNumber":320,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":321,"author":{"gitId":"weeweh"},"content":"Step 2: User executes `add q/ What base is hexadecimal in? a/ Hexadecimal is in **Base 16**`","lastModifiedDate":"2023-10-24"},{"lineNumber":322,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":323,"author":{"gitId":"weeweh"},"content":"Step 3: `AddCommandParser` will parse in the input and then, parse in the values collected in the multimap to a `MarkdownParser`","lastModifiedDate":"2023-10-24"},{"lineNumber":324,"author":{"gitId":"weeweh"},"content":"to create a new `Card`.","lastModifiedDate":"2023-10-24"},{"lineNumber":325,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":326,"author":{"gitId":"weeweh"},"content":"Step 4: The `Card` is added to the `Model` to be added to the `Deck`.","lastModifiedDate":"2023-10-24"},{"lineNumber":327,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":328,"author":{"gitId":"weeweh"},"content":"Step 5: The `UI` renders the `Card` with the relevant fields meant to be written in Markdown.","lastModifiedDate":"2023-10-24"},{"lineNumber":329,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":330,"author":{"gitId":"weeweh"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-24"},{"lineNumber":331,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":332,"author":{"gitId":"weeweh"},"content":"**Aspect: How Markdown support executes:**","lastModifiedDate":"2023-10-24"},{"lineNumber":333,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":334,"author":{"gitId":"weeweh"},"content":"* **Alternative 1 :** Use existing libraries that support Markdown using JavaFX.","lastModifiedDate":"2023-10-24"},{"lineNumber":335,"author":{"gitId":"weeweh"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-10-24"},{"lineNumber":336,"author":{"gitId":"weeweh"},"content":"    * Cons: Dependency on third party library.","lastModifiedDate":"2023-10-24"},{"lineNumber":337,"author":{"gitId":"weeweh"},"content":"* **Alternative 2:** Individually support each type of Markdown language.","lastModifiedDate":"2023-10-24"},{"lineNumber":338,"author":{"gitId":"weeweh"},"content":"    * Pros: Scope of support can be determined by developer.","lastModifiedDate":"2023-10-24"},{"lineNumber":339,"author":{"gitId":"weeweh"},"content":"    * Cons:","lastModifiedDate":"2023-10-24"},{"lineNumber":340,"author":{"gitId":"weeweh"},"content":"        1. Time-consuming.","lastModifiedDate":"2023-10-24"},{"lineNumber":341,"author":{"gitId":"weeweh"},"content":"        2. More checks and assertions required for increased edge cases.","lastModifiedDate":"2023-10-24"},{"lineNumber":342,"author":{"gitId":"weeweh"},"content":"        3. More testing.","lastModifiedDate":"2023-10-24"},{"lineNumber":343,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":344,"author":{"gitId":"Dioclei"},"content":"### Spaced Repetition Feature","lastModifiedDate":"2023-10-24"},{"lineNumber":345,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":346,"author":{"gitId":"Dioclei"},"content":"#### Implementation","lastModifiedDate":"2023-10-24"},{"lineNumber":347,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":348,"author":{"gitId":"winson8222"},"content":"This features aim to implement a Spaced Repetition system to schedule cards based on the level of difficulty indicated by the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"winson8222"},"content":"In combination with the difficulty feature, Spaced Repetition determines when is the next recommended revision date","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"winson8222"},"content":"for each flashcard, to make user give more of their attention to the difficult ones and practice it earlier, optimising learning.","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"winson8222"},"content":"Using the difficulty system, we can decide a `nextPracticeDate` for the specified card based on the difficulty selected by the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"winson8222"},"content":"This helps to remove the need to manually set `nextPracticeDate`, and provides user with a more intuitive way to determine their `nextPracticeDate` based on `difficulty`.","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"winson8222"},"content":"Possible difficulty inputs: `easy`, `medium`, `hard`","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":357,"author":{"gitId":"Dioclei"},"content":"Given below is an example usage of the Spaced Repetition Feature.","lastModifiedDate":"2023-10-24"},{"lineNumber":358,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":359,"author":{"gitId":"Dioclei"},"content":"Step 1: Assuming the user has existing cards in lesson, with their own set of questions and answers. These","lastModifiedDate":"2023-10-24"},{"lineNumber":360,"author":{"gitId":"Dioclei"},"content":"questions are sorted by a due date `nextPracticeDate`. Cards also have a hidden field known as `lastPracticeDate`.","lastModifiedDate":"2023-10-24"},{"lineNumber":361,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":362,"author":{"gitId":"Dioclei"},"content":"Step 2: After the user uses the `practise` command and `solve` command, he uses the `set` command to set how difficult","lastModifiedDate":"2023-10-24"},{"lineNumber":363,"author":{"gitId":"winson8222"},"content":"he felt the card was when he was practising the card.","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":365,"author":{"gitId":"Dioclei"},"content":"Step 3: After setting the difficulty, the system will calculate a new `nextPracticeDate`.","lastModifiedDate":"2023-10-24"},{"lineNumber":366,"author":{"gitId":"Dioclei"},"content":"Firstly, it applies a multiplier (based on difficulty: 3, 1.5, 0.5 for easy, medium, hard respectively)","lastModifiedDate":"2023-10-24"},{"lineNumber":367,"author":{"gitId":"Dioclei"},"content":"to the amount of time between `lastPracticeDate` and `nextPracticeDate`, obtaining a duration.","lastModifiedDate":"2023-10-24"},{"lineNumber":368,"author":{"gitId":"Dioclei"},"content":"This duration is then added to the current `nextPracticeDate` to calculate the new `nextPracticeDate`.","lastModifiedDate":"2023-10-24"},{"lineNumber":369,"author":{"gitId":"Dioclei"},"content":"If there is no suitable `lastPracticeDate` to use, then this calculation alternatively","lastModifiedDate":"2023-10-24"},{"lineNumber":370,"author":{"gitId":"Dioclei"},"content":"adds a base duration (of 4 hours) * multiplier to `nextPracticeDate`.","lastModifiedDate":"2023-10-24"},{"lineNumber":371,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":372,"author":{"gitId":"Dioclei"},"content":"Step 4: The card\u0027s `nextPracticeDate` and `lastPracticeDate` is then updated with the new fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":373,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":374,"author":{"gitId":"winson8222"},"content":"Step 5: The card is automatically sorted in the list according to the new `nextPracticeDate` and the more difficult cards","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"winson8222"},"content":"will now appear earlier when using the `practice` command without index now.","lastModifiedDate":"2023-10-26"},{"lineNumber":376,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"weeweh"},"content":"* is a Computer Science University student in NUS","lastModifiedDate":"2023-10-03"},{"lineNumber":401,"author":{"gitId":"weeweh"},"content":"* wishes to excel in their studies","lastModifiedDate":"2023-10-03"},{"lineNumber":402,"author":{"gitId":"weeweh"},"content":"* requires a learning aid that enforces their understanding and memorisation of the content taught","lastModifiedDate":"2023-10-03"},{"lineNumber":403,"author":{"gitId":"weeweh"},"content":"* may take several courses at once and each course is expected to have multiple topics/concepts","lastModifiedDate":"2023-10-03"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"GSgiansen"},"content":"* decently familiar with the idea of flashcards and their usages in an academic setting","lastModifiedDate":"2023-10-24"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"weeweh"},"content":"**Value proposition**: For Computing students in University who struggle with memorisation and consolidation of knowledge, our app provides users the ability to create categorised flashcards to organise concepts taught to them fast. Optimised for CLI and users who type fast.","lastModifiedDate":"2023-10-03"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"| Priority | As a …​                                | I want to …​                                                                                    | So that I can…​                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"weeweh"},"content":"|----------|----------------------------------------|-------------------------------------------------------------------------------------------------|--------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":419,"author":{"gitId":"weeweh"},"content":"| `* * *`  | new user                               | create a new flashcard                                                                          | start adding content                             |","lastModifiedDate":"2023-10-03"},{"lineNumber":420,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | edit the content of an existing flashcard                                                       | update my study materials                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":421,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | delete a flashcard                                                                              | remove irrelevant content                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":422,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | view a list of all my flashcards                                                                | quickly access my study materials                |","lastModifiedDate":"2023-10-03"},{"lineNumber":423,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | organise my flashcards with tags                                                                | manage my study materials efficiently            |","lastModifiedDate":"2023-10-03"},{"lineNumber":424,"author":{"gitId":"weeweh"},"content":"| `*`      | user                                   | search for a specific flashcard                                                                 | edit the card accordingly                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":425,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | sort my flashcards by date created or modified                                                  | view them in an organised manner                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":426,"author":{"gitId":"weeweh"},"content":"| `*`      | user who learns better with pictures   | add images to my flashcards                                                                     | enhance my learning experience                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":427,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user who wants to update my flashcards | modify answers to my flashcard                                                                  | make sure that my content is up to date          |","lastModifiedDate":"2023-10-03"},{"lineNumber":428,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | practise with my flashcards                                                                     | test my knowledge                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":429,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | shuffle the order of my flashcards during practice                                              | avoid memorising in a fixed sequence             |","lastModifiedDate":"2023-10-03"},{"lineNumber":430,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | mark a flashcard as \"learnt\" during practice                                                    | track my progress                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":431,"author":{"gitId":"weeweh"},"content":"| `*`      | user                                   | see statistics on my practice sessions, such as the number of cards reviewed and the time spent |                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":432,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | tag my flashcards with course IDs and coursework                                                | easily categorise them by subject                |","lastModifiedDate":"2023-10-03"},{"lineNumber":433,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | tag my flashcards with the type of concept (e.g., definitions, formulas, field)                 | filter them for specific study needs             |","lastModifiedDate":"2023-10-03"},{"lineNumber":434,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | can change my tag colours                                                                       | personalise my studying methods                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | enable spaced repetition for my flashcards                                                      | optimise my memorization process                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":436,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | adjust the spacing intervals for spaced repetition                                              | personalise my learning experience               |","lastModifiedDate":"2023-10-03"},{"lineNumber":437,"author":{"gitId":"weeweh"},"content":"| `* *`    | diligent user                          | review flashcards due for repetition                                                            | reinforce my memory                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"weeweh"},"content":"| `* *`    | experienced user                       | format the text on my flashcards using Markdown or a similar markup language                    | create personalised rich content                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":439,"author":{"gitId":"weeweh"},"content":"| `*`      | experienced user                       | preview the formatted text on my flashcards                                                     | ensure it appears as intended                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":440,"author":{"gitId":"weeweh"},"content":"| `* *`    | picky user                             | customise the app\u0027s colour scheme and interface                                                 | personalise my learning environment              |","lastModifiedDate":"2023-10-03"},{"lineNumber":441,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | reset my progress and start fresh with my flashcards                                            | can reattempt my studies                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":442,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | export my flashcards to a file                                                                  | back up my data or share it with others          |","lastModifiedDate":"2023-10-03"},{"lineNumber":443,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | import flashcards from an external file                                                         | easily migrate or collaborate on study materials |","lastModifiedDate":"2023-10-03"},{"lineNumber":444,"author":{"gitId":"weeweh"},"content":"| `* * *`  | user                                   | access a user guide                                                                             | learn how to use the app effectively             |","lastModifiedDate":"2023-10-03"},{"lineNumber":445,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | receive notifications to remind me of my study sessions and flashcard reviews                   |                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":446,"author":{"gitId":"weeweh"},"content":"| `* *`    | user                                   | set daily or weekly study goals                                                                 | track my progress toward my learning objectives  |","lastModifiedDate":"2023-10-03"},{"lineNumber":447,"author":{"gitId":"weeweh"},"content":"| `*`      | user                                   | provide feedback or report issues to the app developers                                         | contribute to app improvement                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":448,"author":{"gitId":"weeweh"},"content":"| `*`      | multilingual user                      | input non-english characters                                                                    | study in other languages                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"jinyuan0425"},"content":"(For all use cases below, the **System** is `lesSON` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC01 Creating a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"jinyuan0425"},"content":"1. User inputs command to create a card, along with the necessary details.","lastModifiedDate":"2023-10-03"},{"lineNumber":459,"author":{"gitId":"jinyuan0425"},"content":"2. lesSON displays a success message.","lastModifiedDate":"2023-10-03"},{"lineNumber":460,"author":{"gitId":"GSgiansen"},"content":"3. The answer generated is not visible to the user until card selected is practised.","lastModifiedDate":"2023-10-24"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC02 deleting a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":467,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":468,"author":{"gitId":"jinyuan0425"},"content":"1. User displays all cards (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":469,"author":{"gitId":"jinyuan0425"},"content":"2. User inputs command to delete a card, along with the index of the card.","lastModifiedDate":"2023-10-03"},{"lineNumber":470,"author":{"gitId":"jinyuan0425"},"content":"3. lesSON displays a success message.","lastModifiedDate":"2023-10-03"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC03 viewing a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":476,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":477,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":478,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":479,"author":{"gitId":"jinyuan0425"},"content":"1. User displays all cards (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":480,"author":{"gitId":"jinyuan0425"},"content":"2. User inputs command to view a card, along with the index of the card.","lastModifiedDate":"2023-10-03"},{"lineNumber":481,"author":{"gitId":"jinyuan0425"},"content":"3. lesSON displays the selected card.","lastModifiedDate":"2023-10-03"},{"lineNumber":482,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":483,"author":{"gitId":"jinyuan0425"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":484,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":486,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC04 displaying all cards**","lastModifiedDate":"2023-10-03"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":488,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":490,"author":{"gitId":"jinyuan0425"},"content":"1. User inputs command to view all cards.","lastModifiedDate":"2023-10-03"},{"lineNumber":491,"author":{"gitId":"jinyuan0425"},"content":"2. lesSON displays all cards.","lastModifiedDate":"2023-10-03"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":493,"author":{"gitId":"jinyuan0425"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":496,"author":{"gitId":"jinyuan0425"},"content":"**Use case: UC05 editing a card**","lastModifiedDate":"2023-10-03"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":498,"author":{"gitId":"jinyuan0425"},"content":"**MSS:**","lastModifiedDate":"2023-10-03"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":500,"author":{"gitId":"jinyuan0425"},"content":"1. User displays all cards (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":501,"author":{"gitId":"jinyuan0425"},"content":"2. User inputs command to edit a card, along with the necessary details.","lastModifiedDate":"2023-10-03"},{"lineNumber":502,"author":{"gitId":"jinyuan0425"},"content":"3. lesSON displays a success message.","lastModifiedDate":"2023-10-03"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":504,"author":{"gitId":"jinyuan0425"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"weeweh"},"content":"2.  Should be able to hold up to 1000 flashcards without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":513,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"GSgiansen"},"content":"4.  User must be educated and willing to use flashcards to learn the content","lastModifiedDate":"2023-10-24"},{"lineNumber":515,"author":{"gitId":"GSgiansen"},"content":"5.  Display box should be able to show the user\u0027s full input","lastModifiedDate":"2023-10-24"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"weeweh"},"content":"* **Flashcard**: A two-sided card containing a question and an answer","lastModifiedDate":"2023-10-03"},{"lineNumber":523,"author":{"gitId":"weeweh"},"content":"* **Tag**: A label used to categorise flashcards","lastModifiedDate":"2023-10-03"},{"lineNumber":524,"author":{"gitId":"GSgiansen"},"content":"* **Deck**: A series of cards that is stored in lesSON","lastModifiedDate":"2023-10-24"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"GSgiansen"},"content":"### Deleting a card","lastModifiedDate":"2023-10-24"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"GSgiansen"},"content":"1. Deleting a card while all card are being shown","lastModifiedDate":"2023-10-24"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"GSgiansen"},"content":"   1. Prerequisites: List all cards using the `list` command. Multiple cards in the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"GSgiansen"},"content":"      Expected: First card is deleted from the list. Details of the deleted card shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-24"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"GSgiansen"},"content":"      Expected: No card is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-24"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Dioclei":21,"jinyuan0425":53,"winson8222":12,"GSgiansen":25,"weeweh":134,"-":332}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"# Table of Contents","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"1. [Setting up the project in your computer](#setting-up-the-project-in-your-computer)","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"2. [Before writing code](#before-writing-code)","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"weeweh":3,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"# Table of Contents","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"1. [Running tests](#running-tests)","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"2. [Type of tests](#types-of-tests)","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.storage.StorageManagerTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how they are connected together.\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.logic.LogicManagerTest`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"weeweh":4,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"# Welcome to lesSON","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"***Revolutionise your studying experience with lesSON!***","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"lesSON is a **desktop application** aimed to help NUS Computer Science undergraduates make flashcards to aid with","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"their memory work for school content.\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"Here are some benefits of adopting lesSON in your studying experience:","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"- Create and Edit flashcards about key concepts taught in your courses","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"- Take advantage of inbuilt **Spaced Repetition** to improve memory retention","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"- Tag your flashcards based on their courses or topics to stay organised","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"- Customise your flashcards using our markdown feature","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"# Table of Contents","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"1. [Installation](#installation)","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"2. [Quick start](#quick-start)","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"3. [Glossary](#glossary)","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"4. [User Interface Overview](#user-interface-overview)","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"5. [Tutorial](#tutorial)","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"6. [Feature list](#feature-list)","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"   - [Adding a FlashCard](#adding-a-flashcard-add)","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"   - [Deleting a Flashcard](#deleting-a-flashcard--delete)","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"   - [View All Flashcards](#view-all-flashcards--list)","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"   - [Editing a Specific Flashcard](#editing-a-specific-flashcard--edit)","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"   - [Practise Flashcards](#practise-flashcards--practise)","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"   - [Solve Flashcards](#solving-flashcards--solve)","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"   - [Setting Difficulty for Flashcards](#setting-difficulty-of-flashcards--set)","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"7. [Markdown Syntax](#markdown-syntax)","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"8. [FAQ](#frequently-asked-questions)","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"# Installation","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"1. Make sure that you have [Java 11 or above](https://www.java.com/en/download/) installed on your computer.","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"2. Download the latest jar file from [here](https://github.com/AY2324S1-CS2103T-W17-4/tp/releases/tag/v1.3(trial)).","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"3. Move the jar file installed to a working folder you would store all of your flashcards","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"4. Launch lesson by doing the following:","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"   1. In the terminal or command prompt, use the `cd` command to navigate to the working folder. ","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"   [Not sure how to use cd?](https://www.ibm.com/docs/en/aix/7.2?topic\u003ddirectories-changing-another-directory-cd-command)","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"   2. Run lesSON using `java -jar lesSON.jar`","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"# Quick Start","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"1. To understand the terms we use in this guide better, check out [our glossary](#glossary).","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"2. Better understand the GUI using [this guide](#user-interface-overview).","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"3. For new users, we recommend reading [this tutorial](#tutorial).","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"4. For advanced users, view all feature details in the [feature list](#feature-list).","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"# Glossary","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"`Deck` - A scrollable list of flashcards on the GUI.","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"`Flashcard`- A card created by the user containing its index, question, answer (not shown) and due date.","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"jinyuan0425"},"content":"`Index` - The relative position of a flashcard within the deck.","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"# User Interface Overview","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"Here is a quick overview of the user interface to get you oriented with where things are.","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"![gui_overview](./images/UserGuide/1.3_gui_overview.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"* Command Line Box - lesSON is optimised for typing commands. Type your commands in the command box ","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"to create and change flashcards!","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"* Result Box - after inputting a command, the result will show up here. Any errors produced will also appear here, for ","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"instance in the event of a wrongfully formatted command.","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"* Deck List - shows the list of flashcards","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"# Tutorial","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"This tutorial explains how to add, edit, tag, and practise your flashcards. Feel free to follow along with lesSON open!","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"For advanced users, feel free to look at the [feature list](#feature-list) instead.","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"1. Firstly, let\u0027s add a card. type: \u003cbr\u003e`add q/ what does + mean in boolean algebra? a/ it means OR.`","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"2. Next, let\u0027s capitalise our previous input! Assuming the card is at index `1`, input: \u003cbr\u003e`edit 1 q/ What does + mean in boolean ","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"algebra? a/ It means OR.`","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"3. Next, let\u0027s tag it under the module CS1231S by inputting: \u003cbr\u003e`edit 1 t/CS1231S`","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"Dioclei"},"content":"4. Feel free to add a few more cards by following steps 1 to 3!","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"Dioclei"},"content":"5. Next, to practise the first card, do: \u003cbr\u003e `practise`","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"Dioclei"},"content":"6. Try to recall the answer, and when you are ready to reveal the answer, do: \u003cbr\u003e `solve`","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"7. How hard was the answer to recall? set the difficulty by doing one of these: \u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"Dioclei"},"content":"`set d/easy`","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"Dioclei"},"content":"`set d/medium`","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"Dioclei"},"content":"`set d/hard`","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"Dioclei"},"content":"8. The card will automatically be reinserted into deck. This is based on how difficult you found the card. Due to our ","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"Dioclei"},"content":"spaced repetition system, as you practise, the more difficult cards will surface more at the top.","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"Dioclei"},"content":"9. Note that the `practise`, `solve`, and `set` commands support indexes, but it is recommended to use them without ","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"Dioclei"},"content":"indexes, as in this tutorial, to always operate on the most difficult card.","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"Dioclei"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"weeweh"},"content":"# Feature list","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"### Adding a Flashcard `add`","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"Adds a flashcard to the deck for the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"jinyuan0425"},"content":"**Format:** ","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"jinyuan0425"},"content":"`add q/question a/answer [t/TAG]`","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"jinyuan0425"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"jinyuan0425"},"content":"_A flashcard with only a question and answer field._","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"jinyuan0425"},"content":"`add q/What are the three ways to implement binary systems? a/1s Complement, 2s Complement, and Sign and Magnitude`","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"jinyuan0425"},"content":"_A flashcard with a question, answer and tag field._","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"jinyuan0425"},"content":"`add q/How do you convert from binary to 1s Complement? a/By inverting all the bits, i.e. 0 to 1 and vice versa t/CS2100 t/Number Systems`","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"jinyuan0425"},"content":"#### To Note:","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"GSgiansen"},"content":"1. No Empty Input after q/, a/ and t/.","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"weeweh"},"content":"2. t/ is optional and not necessary.","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"jinyuan0425"},"content":"3. **Tip**: Tagging is not supported in v1.2 and earlier","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"jinyuan0425"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"jinyuan0425"},"content":"1. Given a correct input, a success message will be shown containing the user\u0027s input.","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"jinyuan0425"},"content":"   1. `“New Card added: Question: (question); Answer: (answer)“`","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"jinyuan0425"},"content":"2. Given an incorrect input, an error message will be shown, detailing how the error can be fixed.","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"jinyuan0425"},"content":"   1. `Answers should only contain alphanumeric characters, some special characters and spaces, and it should not be blank`","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"jinyuan0425"},"content":"   2. ```","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"GSgiansen"},"content":"       Invalid command format!","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"GSgiansen"},"content":"       add: Adds a card to the deck. Parameters: q/QUESTION a/ANSWER","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"GSgiansen"},"content":"      ```","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"GSgiansen"},"content":"#### Usage","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"jinyuan0425"},"content":"1. User Input: `add q/ opcode for R format instructions a/ 000000 t/ CS2100 t/ MIPS` ","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"GSgiansen"},"content":"2. Successful Output","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"jinyuan0425"},"content":"![result of add command](./images/UserGuide/1.3_add_clean.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"GSgiansen"},"content":"### Deleting a Flashcard : `delete`","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"weeweh"},"content":"Deletes a flashcard in the deck","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"jinyuan0425"},"content":"**Format:** ","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"jinyuan0425"},"content":"`delete INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"jinyuan0425"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"jinyuan0425"},"content":"_Deleting the card in th deck with an index of 2._","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"jinyuan0425"},"content":"`delete 2`","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"jinyuan0425"},"content":"#### To Note:","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"jinyuan0425"},"content":"1. Index must be positive integer.","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"jinyuan0425"},"content":"2. Index cannot exceed size of the deck.","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"jinyuan0425"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"jinyuan0425"},"content":"1. Given a correct input, a success message will be shown containing the details of the deleted flashcard.","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"jinyuan0425"},"content":"   1. `Deleted Card: Question: \u003cprovided question\u003e; Answer: \u003cprovided answer\u003e`","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"jinyuan0425"},"content":"2. Given an incorrect input, an error message will be shown, detailing how the error can be fixed.","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"jinyuan0425"},"content":"   1. `The card index provided is invalid`","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"jinyuan0425"},"content":"   2. ```","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"GSgiansen"},"content":"      Invalid command format!","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"GSgiansen"},"content":"      delete: Deletes the deck identified by the index number used in the displayed card list.","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"GSgiansen"},"content":"      Parameters: INDEX (must be a positive integer)","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"GSgiansen"},"content":"      Example: delete 1","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"GSgiansen"},"content":"      ```","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"GSgiansen"},"content":"#### Usage:","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"jinyuan0425"},"content":"1. User Input: `delete 1`","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"GSgiansen"},"content":"2. Successful Output","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"jinyuan0425"},"content":"![result of delete command](./images/UserGuide/1.3_del_clean.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"GSgiansen"},"content":"### View All Flashcards : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"weeweh"},"content":"Shows a list of all flashcards in the deck. A keyword may be specified to filter out the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"weeweh"},"content":"Format: `list (q/t)/ (prefix question starts with/ tag)`","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"weeweh"},"content":"1. list","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"weeweh"},"content":"   (list shows the full list of flashcards)","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"weeweh"},"content":"2. list q/ What","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"weeweh"},"content":"   (list shows all flashcards with questions starting with \u0027What\u0027)","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"weeweh"},"content":"3. list t/ CS2100","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"weeweh"},"content":"   (list shows all flashcards with the CS2100 Tag)","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"weeweh"},"content":"4. list q/ what t/ CS2100","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"weeweh"},"content":"   (list shows all flashcards with questions starting with \u0027What\u0027 and has the CS2100 Tag)","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"GSgiansen"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"weeweh"},"content":"1. No Empty Input after q/ and t/.","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"weeweh"},"content":"2. q/ and t/ is optional.","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"GSgiansen"},"content":"#### Expected output:","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"GSgiansen"},"content":"1. list","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"weeweh"},"content":"   \"All cards listed\" message will be returned to the user via the CLI","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"GSgiansen"},"content":"#### Usage","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"GSgiansen"},"content":"![usage of list command](./images/UserGuide/1.3_list.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"weeweh"},"content":"### Editing a Specific Flashcard : `edit`","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"Dioclei"},"content":"Edits an existing Flashcard in the deck.","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":221,"author":{"gitId":"weeweh"},"content":"Format: `edit INDEX (q/a)/ (question/answer)`","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"weeweh"},"content":"1. edit 1 q/ What is the colour of the sun?","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"weeweh"},"content":"   (changes the question at index 1 to “What is the colour of the sun?”)","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"weeweh"},"content":"2. edit 1 a/ Red","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"weeweh"},"content":"   (changes the answer at index 1 to “Red”)","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"GSgiansen"},"content":"#### Expected output:","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"GSgiansen"},"content":"“Successfully edited flashcard” message will be returned to the user via the CLI","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"weeweh"},"content":"“The card index provided is invalid\"","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"GSgiansen"},"content":"#### Usage:","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"GSgiansen"},"content":"1. User Input","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"GSgiansen"},"content":"   ![usage of edit command](./images/UserGuide/1.3_edit.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"GSgiansen"},"content":"2. Successful Output","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"GSgiansen"},"content":"   ![result of edit command](./images/UserGuide/1.3_edit_ans.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"GSgiansen"},"content":"### Practise Flashcards: `practise`","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"GSgiansen"},"content":"Practise a single Flashcard in the deck","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"GSgiansen"},"content":"Format: `practise INDEX`","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"GSgiansen"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"GSgiansen"},"content":"1. Index must be positive integer","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"GSgiansen"},"content":"2. Index cannot exceed size of the deck","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"GSgiansen"},"content":"#### Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"GSgiansen"},"content":"practise 1","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"GSgiansen"},"content":"(showcases the question at index 1)","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"GSgiansen"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"GSgiansen"},"content":"practise 1","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"GSgiansen"},"content":"\"Practising question 1 : \u003cprovided question\u003e\"","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"GSgiansen"},"content":"practise 10","lastModifiedDate":"2023-10-24"},{"lineNumber":265,"author":{"gitId":"weeweh"},"content":"\"The card index provided is invalid\"","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":268,"author":{"gitId":"GSgiansen"},"content":"#### Usage:","lastModifiedDate":"2023-10-24"},{"lineNumber":269,"author":{"gitId":"GSgiansen"},"content":"1. User Input","lastModifiedDate":"2023-10-24"},{"lineNumber":270,"author":{"gitId":"GSgiansen"},"content":"   ![usage of practise command](./images/UserGuide/1.3_prac.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":272,"author":{"gitId":"GSgiansen"},"content":"2. Successful Output","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"GSgiansen"},"content":"   ![result of practise command](./images/UserGuide/1.3_prac_ans.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"winson8222"},"content":"### Solving Flashcards: `solve`","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"GSgiansen"},"content":"Solves the question at the given index","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"winson8222"},"content":"Format: `solve INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"GSgiansen"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"GSgiansen"},"content":"1. Index must be positive integer","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"GSgiansen"},"content":"2. Index cannot exceed size of the deck","lastModifiedDate":"2023-10-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":284,"author":{"gitId":"GSgiansen"},"content":"#### Examples:","lastModifiedDate":"2023-10-24"},{"lineNumber":285,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-24"},{"lineNumber":286,"author":{"gitId":"winson8222"},"content":"solve 1","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"GSgiansen"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-24"},{"lineNumber":290,"author":{"gitId":"GSgiansen"},"content":"solve 1","lastModifiedDate":"2023-10-24"},{"lineNumber":291,"author":{"gitId":"winson8222"},"content":"\"Solved Question 1: What pipline protocols are covered","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"winson8222"},"content":"Answer:2\"","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":294,"author":{"gitId":"winson8222"},"content":"solve 10","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"GSgiansen"},"content":"\"The card index provided is invalid\"","lastModifiedDate":"2023-10-24"},{"lineNumber":296,"author":{"gitId":"GSgiansen"},"content":"```","lastModifiedDate":"2023-10-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"GSgiansen"},"content":"#### Usage:","lastModifiedDate":"2023-10-24"},{"lineNumber":299,"author":{"gitId":"GSgiansen"},"content":"1. User Input","lastModifiedDate":"2023-10-24"},{"lineNumber":300,"author":{"gitId":"Dioclei"},"content":"   ![usage of solve command](./images/UserGuide/1.3_solve.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":302,"author":{"gitId":"GSgiansen"},"content":"2. Successful Output","lastModifiedDate":"2023-10-24"},{"lineNumber":303,"author":{"gitId":"Dioclei"},"content":"   ![result of solve command](./images/UserGuide/1.3_solve_ans.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"winson8222"},"content":"### Setting Difficulty of Flashcards: `set`","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"winson8222"},"content":"Setting the difficulty of a flashcard","lastModifiedDate":"2023-10-25"},{"lineNumber":308,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"Dioclei"},"content":"This difficulty refers to how difficult you found the flashcard.","lastModifiedDate":"2023-10-31"},{"lineNumber":310,"author":{"gitId":"Dioclei"},"content":"This flashcard will be rescheduled based on the difficulty, as indicated by their due date.","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"Dioclei"},"content":"More difficult cards will appear more often in the practice rotation.","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"Dioclei"},"content":"This also takes into account past practices, so the more a card is practised,","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"Dioclei"},"content":"the less it will appear in the practice rotation.","lastModifiedDate":"2023-10-31"},{"lineNumber":314,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"winson8222"},"content":"Format: set INDEX DIFFICULTY","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":317,"author":{"gitId":"winson8222"},"content":"#### Acceptable values for each parameters:","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"winson8222"},"content":"1. Index must be positive integer","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"winson8222"},"content":"2. Index cannot exceed size of the deck","lastModifiedDate":"2023-10-25"},{"lineNumber":320,"author":{"gitId":"winson8222"},"content":"3. Difficulty must be either ‘easy’, ‘medium’, ‘hard’","lastModifiedDate":"2023-10-25"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":322,"author":{"gitId":"winson8222"},"content":"#### Example:","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":324,"author":{"gitId":"winson8222"},"content":"set 1","lastModifiedDate":"2023-10-25"},{"lineNumber":325,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":327,"author":{"gitId":"winson8222"},"content":"#### Expected outputs:","lastModifiedDate":"2023-10-25"},{"lineNumber":328,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":329,"author":{"gitId":"winson8222"},"content":"set 1 d/ easy","lastModifiedDate":"2023-10-25"},{"lineNumber":330,"author":{"gitId":"winson8222"},"content":"\"Set Difficulty for Question 1 (Diffculty Level: easy)","lastModifiedDate":"2023-10-25"},{"lineNumber":331,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":332,"author":{"gitId":"winson8222"},"content":"set 10 d/ easy","lastModifiedDate":"2023-10-25"},{"lineNumber":333,"author":{"gitId":"winson8222"},"content":"\"The card index provided is invalid\"","lastModifiedDate":"2023-10-25"},{"lineNumber":334,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":335,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":336,"author":{"gitId":"winson8222"},"content":"#### Usage:","lastModifiedDate":"2023-10-25"},{"lineNumber":337,"author":{"gitId":"winson8222"},"content":"1. User Input","lastModifiedDate":"2023-10-25"},{"lineNumber":338,"author":{"gitId":"Dioclei"},"content":"   ![usage of set command](./images/UserGuide/1.3_set.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"winson8222"},"content":"2. Successful Output","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"Dioclei"},"content":"   ![result of set command](./images/UserGuide/1.3_set_ans.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":343,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"winson8222"},"content":"# MarkDown Syntax","lastModifiedDate":"2023-11-01"},{"lineNumber":346,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":347,"author":{"gitId":"winson8222"},"content":"For user who wish to incorporate styling in lesSON, there are 3 font styles currently supported:","lastModifiedDate":"2023-11-01"},{"lineNumber":348,"author":{"gitId":"winson8222"},"content":"1. Bold","lastModifiedDate":"2023-11-01"},{"lineNumber":349,"author":{"gitId":"winson8222"},"content":"2. Italic","lastModifiedDate":"2023-11-01"},{"lineNumber":350,"author":{"gitId":"winson8222"},"content":"3. Underline","lastModifiedDate":"2023-11-01"},{"lineNumber":351,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":352,"author":{"gitId":"winson8222"},"content":"### Bold","lastModifiedDate":"2023-11-01"},{"lineNumber":353,"author":{"gitId":"winson8222"},"content":"To bold a line of text, wrap text with `**`","lastModifiedDate":"2023-11-01"},{"lineNumber":354,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":355,"author":{"gitId":"winson8222"},"content":"#### Example:","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":357,"author":{"gitId":"winson8222"},"content":"edit 1 q/ How many bits can a **Half Adder** add up","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"winson8222"},"content":"#### Expected Result:","lastModifiedDate":"2023-11-02"},{"lineNumber":360,"author":{"gitId":"winson8222"},"content":"![usage of bold syntax](./images/UserGuide/1.3_bold.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"winson8222"},"content":"### Italic","lastModifiedDate":"2023-11-01"},{"lineNumber":363,"author":{"gitId":"winson8222"},"content":"To italicise a line of text, wrap text with `*`","lastModifiedDate":"2023-11-01"},{"lineNumber":364,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":365,"author":{"gitId":"winson8222"},"content":"#### Example:","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"winson8222"},"content":"edit 1 q/ How many bits can a *Half Adder* add up","lastModifiedDate":"2023-11-02"},{"lineNumber":368,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":369,"author":{"gitId":"winson8222"},"content":"#### Expected Result:","lastModifiedDate":"2023-11-02"},{"lineNumber":370,"author":{"gitId":"winson8222"},"content":"![usage of bold syntax](./images/UserGuide/1.3_italic.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":371,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"winson8222"},"content":"### Underline","lastModifiedDate":"2023-11-01"},{"lineNumber":373,"author":{"gitId":"winson8222"},"content":"To underline a line of text, insert `\u003cu\u003e` at the beginning of the text,","lastModifiedDate":"2023-11-01"},{"lineNumber":374,"author":{"gitId":"winson8222"},"content":"and end with `\u003c/u\u003e` at the end of the underlined text.","lastModifiedDate":"2023-11-01"},{"lineNumber":375,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":376,"author":{"gitId":"winson8222"},"content":"#### Example:","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"winson8222"},"content":"edit 1 q/ How many bits can a \u003cu\u003eHalf Adder\u003c/u\u003e add up","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"winson8222"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"winson8222"},"content":"#### Expected Result:","lastModifiedDate":"2023-11-02"},{"lineNumber":381,"author":{"gitId":"winson8222"},"content":"![usage of bold syntax](./images/UserGuide/1.3_underline.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"Dioclei"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"Dioclei"},"content":"# Frequently Asked Questions","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"Dioclei"},"content":"### I can\u0027t run lesSON! What should I do?","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"Dioclei"},"content":"Please check that you have correctly installed lesSON by following the instructions [here](#installation). For further ","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"Dioclei"},"content":"queries, feel free to contact us!","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Dioclei":74,"jinyuan0425":38,"winson8222":70,"GSgiansen":75,"weeweh":42,"-":89}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"GSgiansen"},"content":"    content: \"lesSON\";","lastModifiedDate":"2023-10-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"GSgiansen":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: lesSON","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**lesSON is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using lesSON, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"* If you are interested about developing lesSON, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Dioclei":1,"-":18}},{"path":"docs/team/dioclei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Jason\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddioclei\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"  * Created a preliminary UI using FXML (work-in-progress, to be updated)","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"  * Created tests for Deck [\\#75]()","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    * Created initial mockups of the UI for user guide","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"  * e.g. PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"  * e.g. Contributed to forum discussions (examples: )","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: )","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ()","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Dioclei":7,"jinyuan0425":30}},{"path":"docs/team/gsgiansen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Gian Sen\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"* **New Feature**: Displaying ui with updated card class","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dgsgiansen\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"  * Release 1.2","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"  * e.g. Managed releases `v1.2` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":49,"GSgiansen":3}},{"path":"docs/team/jinyuan0425.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Jin Yuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"* **New Feature**: Feature","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djinyuan0425\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"  * Which releases were managed by me.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    * Added use cases for the functions to be implemented in v1.2 [\\#42](https://github.com/AY2324S1-CS2103T-W17-4/tp/pull/42)","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"    * e.g. Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":53}},{"path":"docs/team/weeweh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Wee Yeow\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"* **New Feature**: Feature","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"  * What it does: Description","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"  * Justification: Why it is needed","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"  * Highlights: Key things to note","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"  * Credits:","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dweeweh\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"  * Which enhancements were written by me (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"  * Added `Tag` functionality to `Card`. Allowing users to categorise cards based on content (Pull requests )","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"  * Wrote additional tests for `AddCommand` and `EditCommand` and their relevant parsers to cover the","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"  additional `Tag` field for a `Card` (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"  * Added search functionality in `ListCommand`. Allowing users to search cards via 3 ways:","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"    * `Question` starting with specified prefix","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    * Cards containing specified `Tag`(s)","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    * or both in the same search","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"  * Which documentation were written by me for which guide (include PR number)","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"    * Added documentation for the feature `Markdown support` [\\#72]()","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"    * Added Table of Content and some visual tweaks for all features","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"    * Added User Stories","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"    * Added Non-Functional Requirements","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"    * Refactored documentation to remove traces of AB3","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"    * Edit `list` feature to match its functionality to search for specific cards","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"    * Refactored documentation to remove traces of AB3","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"    * Added Table of Content and some visual tweaks","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"    * Added implementation details of the `delete` feature","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"    * Added documentation for the feature `Markdown support` [\\#72]()","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"    * Added design considerations to existing documentation of feature `filter`: [\\#74]()","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"  * Contributions to the community (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"  * e.g. Some parts of the history feature I added was adopted by several other classmates ([1](), [2]())","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"  * List of tools used (include examples i.e. PR number / screenshots)","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jinyuan0425":39,"weeweh":19}},{"path":"docs/team/winson8222.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"layout: page\\","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"title: Winson\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"### Project: lesSON","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"lesSON is a desktop flashcard application for Computing students in University who struggle with","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"memorisation and consolidation of knowledge. The user interacts with it using a CLI, and it has a","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"* **New Feature**: Practise","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"  * What it does: Allows user to look at the question of a specific card  using its index, and indicate its difficulity level","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"  * Justification: It is the main practical function of a flashcard application for user to learn","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"  * Highlights: Practise can change the current difficulty level of a card to be shown.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"  * Credits: Winson8222","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"* **New Feature** MarkDown Syntax","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"  * What it does: For advanced user who wish to stylised their flashcard or are visual learners, having ways to differentiate","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"  words by having different style can greatly enhance their learning process.","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"  * Justification: It serves as a good supplementary function to enhance to current revision process for user.","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"  * Highlights: Based on the syntax entered by the user, the corresponding styling will be reflected on ","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"  the display card and the result view","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"  * Credits: Winson8222","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"  ","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwinson8222\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"  * Card Class is changed to include difficulty attribute","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"  * Deck Class is created to contain a list of Cards","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"  * PractiseParser is created to parse practise commands","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"  * PractiseCommand is created handle practise commands","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"  * DisplayResult can now support MarkDown syntax: bold, italic and underline.","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"  * CardDisplay can now support MarkDown syntax: bold, italic and underline.","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    * Added documentations for the features `edit` and `add`.","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    * Added documentations for markdown support, including screenshots of the expected ","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    output based on MarkDown syntax added in the command","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"  * Integrated a third party module flexmark for display of MarkDown styles in the UI","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jinyuan0425":27,"winson8222":29}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"GSgiansen"},"content":"Create a new `Remark` in `seedu.address.model.card`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"GSgiansen":1,"-":398}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.card.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"GSgiansen":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.storage.DeckStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.storage.JsonDeckStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        DeckStorage deckStorage \u003d new JsonDeckStorage((userPrefs.getDeckFilePath()));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"        storage \u003d new StorageManager(deckStorage, userPrefsStorage);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        logger.info(\"Using data file : \" + storage.getDeckFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        Optional\u003cReadOnlyDeck\u003e addressBookOptional;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        ReadOnlyDeck initialData;","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"            addressBookOptional \u003d storage.readDeck();","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"                logger.info(\"Creating a new data file \" + storage.getDeckFilePath()","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleDeck);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"            logger.warning(\"Data file at \" + storage.getDeckFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"            initialData \u003d new Deck();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GSgiansen":14,"weeweh":1,"-":171}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weeweh":1,"-":82}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weeweh":1,"-":105}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weeweh":1,"-":121}},{"path":"src/main/java/seedu/address/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weeweh":1,"-":21}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     * Returns the Deck.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"     * @see Model#getDeck()","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    ReadOnlyDeck getDeck();","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    /** Returns an unmodifiable view of the filtered list of cards */","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    ObservableList\u003cCard\u003e getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * Returns the user prefs\u0027 deck file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":7,"GSgiansen":1,"weeweh":4,"-":41}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.DeckParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    private final DeckParser deckParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        deckParser \u003d new DeckParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"        Command command \u003d deckParser.parseCommand(commandText);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        String answer;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            storage.saveDeck(model.getDeck());","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"    public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        return model.getDeck();","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e getFilteredCardList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        return model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        return model.getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":13,"GSgiansen":1,"weeweh":2,"-":75}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_INVALID_CARD_DISPLAYED_INDEX \u003d \"The card index provided is invalid\";","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_LISTED_OVERVIEW \u003d \"%1$d cards listed!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_SET_DIFFICULTY_VIEW_EASY \u003d \"%1$s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_SET_DIFFICULTY_VIEW_MEDIUM \u003d \"%1$s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_SET_DIFFICULTY_VIEW_HARD \u003d \"%1$s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_SET_DIFFICULTY_VIEW_INVALID \u003d \" is not an invalid difficult \"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            + \"level! Please enter easy, medium or hard!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_SOLVE_VIEW \u003d \"%1$s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_CARDS_PRACTISE_VIEW \u003d \"%1$s\";","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    public static String format(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"        final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"        stringBuilder.append(\"Question: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"                .append(card.getQuestion())","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"                    .append(\"; Answer: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"                     .append(card.getAnswer());","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user its newly set difficulty.","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    public static String formatSetDifficulty(Card card, Index index) {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"        final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        stringBuilder.append(\"Set Difficulty for Question \")","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"                .append(index.getOneBased())","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"                .append(\" (Difficulty level: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"                .append(card.getDifficulty())","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"                .append(\")\");","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user as an Answer.","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"    public static String formatSolve(Card card, Index index) {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"        stringBuilder.append(\"Solved Question \")","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"                .append(index.getOneBased())","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"                .append(\": \")","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"                .append(card.getQuestion())","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"                .append(\"Answer: \")","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"                .append(card.getAnswer());","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user as an Answer.","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"    public static String formatPractise(Card card, Index index) {","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"        final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"        stringBuilder.append(\"Practising question \")","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"                .append(index.getOneBased())","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"                .append(\" : \")","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"                .append(card.getQuestion());","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"     * Formats the {@code card} for display to the user as a Question.","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"    public static String formatQuestion(Card card) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"weeweh"},"content":"        final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"weeweh"},"content":"        stringBuilder.append(\"Question: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"                .append(card.getQuestion());","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"weeweh"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":60,"GSgiansen":4,"weeweh":8,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":" * Adds a Card to the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Card to the Deck. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"            + PREFIX_QUESTION + \"QUESTION \"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"            + PREFIX_ANSWER + \"ANSWER \"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"            + PREFIX_TAG + \"TAG \";","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Card added: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DUPLICATE_CARD \u003d \"This Card already exists in the Deck\";","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    private final Card toAdd;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"     * Creates an AddCommand to add the specified {@code Card}","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"    public AddCommand(Card card) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        requireNonNull(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        toAdd \u003d card;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        if (model.hasCard(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        model.addCard(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":4,"winson8222":11,"GSgiansen":1,"weeweh":5,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deck has been cleared!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        model.setDeck(new Deck());","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"GSgiansen":3,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":" * Deletes a Card identified using it\u0027s displayed index from the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"            + \": Deletes the Card identified by the index number used in the displayed card list.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DELETE_CARD_SUCCESS \u003d \"Deleted Card: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        Card cardToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        model.deleteCard(cardToDelete);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CARD_SUCCESS, Messages.format(cardToDelete)));","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":4,"GSgiansen":1,"weeweh":5,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CARDS;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Answer;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Question;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":" * Edits the details of an existing Card in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the Card identified \"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"            + \"by the index number used in the displayed Card list. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"            + \"[\" + PREFIX_QUESTION + \"QUESTION] \"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"            + \"[\" + PREFIX_ANSWER + \"ANSWER] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \";","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_EDIT_CARD_SUCCESS \u003d \"Edited Card: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"    public static final String MESSAGE_DUPLICATE_CARD \u003d \"This card already exists in the Deck.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    private final EditCardDescriptor editCardDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"     * @param index              of the Card in the filtered Card list to edit","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"     * @param editCardDescriptor details to edit the Card with","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"    public EditCommand(Index index, EditCardDescriptor editCardDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        requireNonNull(editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        this.editCardDescriptor \u003d new EditCardDescriptor(editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        Card cardToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"        Card editedCard \u003d createEditedCard(cardToEdit, editCardDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"        if (!cardToEdit.isSameCard(editedCard) \u0026\u0026 model.hasCard(editedCard)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        model.setCard(cardToEdit, editedCard);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"        model.updateFilteredCardList(PREDICATE_SHOW_ALL_CARDS);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"weeweh"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CARD_SUCCESS, Messages.format(editedCard)));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"     * Creates and returns a {@code Card} with the details of {@code cardToEdit}","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"     * edited with {@code editCardDescriptor}.","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"    private static Card createEditedCard(Card cardToEdit, EditCardDescriptor editCardDescriptor) {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"        assert cardToEdit !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        Question updatedQuestion \u003d editCardDescriptor.getQuestion().orElse(cardToEdit.getQuestion());","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"        Answer updatedAnswer \u003d editCardDescriptor.getAnswer().orElse(cardToEdit.getAnswer());","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"weeweh"},"content":"        List\u003cTag\u003e updatedTags \u003d editCardDescriptor.getTags().orElse((cardToEdit.getTags()));","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"        return new Card(updatedQuestion, updatedAnswer, \"new\", updatedTags,","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"                cardToEdit.getNextPracticeDate(), cardToEdit.getLastPracticeDate());","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"                \u0026\u0026 editCardDescriptor.equals(otherEditCommand.editCardDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"                .add(\"editCardDescriptor\", editCardDescriptor)","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Dioclei"},"content":"     * Stores the details to edit the Card with. Each non-empty field value will","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"Dioclei"},"content":"     * replace the","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"weeweh"},"content":"     * corresponding field value of the Card.","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"    public static class EditCardDescriptor {","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"        private Question question;","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"        private Answer answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"weeweh"},"content":"        private List\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"Dioclei"},"content":"        public EditCardDescriptor() {","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"        public EditCardDescriptor(EditCardDescriptor toCopy) {","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"            setQuestion(toCopy.question);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"            setAnswer(toCopy.answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"weeweh"},"content":"            return CollectionUtil.isAnyNonNull(question, answer, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"        public void setQuestion(Question question) {","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"            this.question \u003d question;","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":"        public Optional\u003cQuestion\u003e getQuestion() {","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"            return Optional.ofNullable(question);","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"        public void setAnswer(Answer answer) {","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"winson8222"},"content":"            this.answer \u003d answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"winson8222"},"content":"        public Optional\u003cAnswer\u003e getAnswer() {","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"winson8222"},"content":"            return Optional.ofNullable(answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"weeweh"},"content":"        public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"weeweh"},"content":"            this.tags \u003d tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"weeweh"},"content":"        public Optional\u003cList\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"weeweh"},"content":"            return Optional.ofNullable(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"winson8222"},"content":"            if (!(other instanceof EditCardDescriptor)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"winson8222"},"content":"            EditCardDescriptor otherEditCardDescriptor \u003d (EditCardDescriptor) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"winson8222"},"content":"            return Objects.equals(question, otherEditCardDescriptor.question)","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"weeweh"},"content":"                    \u0026\u0026 Objects.equals(answer, otherEditCardDescriptor.answer)","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"weeweh"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditCardDescriptor.tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"winson8222"},"content":"                    .add(\"question\", question)","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"winson8222"},"content":"                    .add(\"answer\", answer)","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":8,"winson8222":37,"GSgiansen":8,"weeweh":21,"-":125}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting lesSON as requested ...\";","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"GSgiansen":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        assert(model !\u003d null);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GSgiansen":2,"weeweh":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":" * Lists all Cards in the Deck to the user.","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists Card from Deck. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"            + PREFIX_QUESTION + \"WORD(s) questions start with (Cannot be left blank)\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all cards\";","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"    private final List\u003cPredicate\u003cCard\u003e\u003e predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * Creates an ListCommand to list {@code Card} containing a prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"    public ListCommand(List\u003cPredicate\u003cCard\u003e\u003e predicates) {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"        requireNonNull(predicates);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"        Predicate\u003cCard\u003e predicate \u003d predicates.stream().reduce((card -\u003e true), (Predicate::and));","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"        model.updateFilteredCardList(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":2,"weeweh":20,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/PractiseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":" * Practises a question using it\u0027s displayed index from the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"public class PractiseCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public static final String COMMAND_WORD \u003d \"practise\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"            + \": practise the card identified by the index number used in the displayed card list.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: DIFFICULTY (must not be empty)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" d/ easy\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_PRACTISE_CARD_SUCCESS \u003d \"%1$s\";","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"     * Constructs a {@code PractiseCommand} with the specified {@code targetIndex} and {@code difficulty}.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"     * @param targetIndex The index of the target to card.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    public PractiseCommand(Index targetIndex) {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        Card cardToPractise \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"                String.format(Messages.MESSAGE_CARDS_PRACTISE_VIEW,","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"                        Messages.formatPractise(cardToPractise, targetIndex)));","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof PractiseCommand) || other \u003d\u003d null) {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        PractiseCommand otherPractiseCommand \u003d (PractiseCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        return targetIndex.equals(otherPractiseCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":71,"GSgiansen":1,"weeweh":11}},{"path":"src/main/java/seedu/address/logic/commands/SetDifficultyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" * Practises a question using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"public class SetDifficultyCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"            + \": set the card identified by the index number used in the displayed card list.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: DIFFICULTY (must not be empty)\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" d/ easy\";","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_SET_DIFFICULTY_CARD_SUCCESS \u003d \"%1$s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    private final String difficulty;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     * Constructs a {@code PractiseCommand} with the specified {@code targetIndex} and {@code difficulty}.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     * @param targetIndex The index of the target to card.","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"     * @param difficulty The difficulty level for the card.","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    public SetDifficultyCommand(Index targetIndex, String difficulty) {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"        int deckSize \u003d lastShownList.size();","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        String newDifficulty \u003d this.difficulty.toLowerCase();","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d deckSize) {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        Card cardToSetDifficulty \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        if (Objects.equals(newDifficulty, \"easy\")) {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"            cardToSetDifficulty.setDifficulty(newDifficulty);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"            cardToSetDifficulty.setNewPracticeDateWith(newDifficulty);","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"            model.getDeck().sort();","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"                    String.format(Messages.MESSAGE_CARDS_SET_DIFFICULTY_VIEW_EASY,","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"                            Messages.formatSetDifficulty(cardToSetDifficulty, targetIndex)));","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        if (Objects.equals(newDifficulty, \"medium\")) {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"            cardToSetDifficulty.setDifficulty(newDifficulty);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"            cardToSetDifficulty.setNewPracticeDateWith(newDifficulty);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"            model.getDeck().sort();","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"                    String.format(Messages.MESSAGE_CARDS_SET_DIFFICULTY_VIEW_MEDIUM,","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"                            Messages.formatSetDifficulty(cardToSetDifficulty, targetIndex)));","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        if (Objects.equals(newDifficulty, \"hard\")) {","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"            cardToSetDifficulty.setDifficulty(newDifficulty);","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"            cardToSetDifficulty.setNewPracticeDateWith(newDifficulty);","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"            model.getDeck().sort();","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"                    String.format(Messages.MESSAGE_CARDS_SET_DIFFICULTY_VIEW_HARD,","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"                            Messages.formatSetDifficulty(cardToSetDifficulty, targetIndex)));","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(newDifficulty + Messages.MESSAGE_CARDS_SET_DIFFICULTY_VIEW_INVALID);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof SetDifficultyCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"        SetDifficultyCommand otherSetDifficultyCommand \u003d (SetDifficultyCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"        return targetIndex.equals(otherSetDifficultyCommand.targetIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"winson8222":112}},{"path":"src/main/java/seedu/address/logic/commands/SolveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" * Practises a question using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"public class SolveCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    public static final String COMMAND_WORD \u003d \"solve\";","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"            + \": solve the card identified by the index number used in the displayed card list.\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_SOLVE_CARD_SUCCESS \u003d \"%1$s\";","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"     * Constructs a {@code PractiseCommand} with the specified {@code targetIndex} and {@code difficulty}.","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"     * @param targetIndex The index of the target to card.","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    public SolveCommand(Index targetIndex) {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        List\u003cCard\u003e lastShownList \u003d model.getFilteredCardList();","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        int deckSize \u003d lastShownList.size();","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d deckSize) {","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        Card cardToSolve \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        cardToSolve.incrementSolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"                String.format(Messages.MESSAGE_CARDS_SOLVE_VIEW,","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"                        Messages.formatSolve(cardToSolve, targetIndex)));","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof SolveCommand)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        SolveCommand otherSolveCommand \u003d (SolveCommand) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        return targetIndex.equals(otherSolveCommand.targetIndex);","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"jinyuan0425":2,"winson8222":81}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"weeweh":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Answer;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"import seedu.address.model.card.PracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Question;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_QUESTION, PREFIX_ANSWER,","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"                PREFIX_TAG);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_QUESTION, PREFIX_ANSWER)","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_QUESTION, PREFIX_ANSWER);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        Question question \u003d ParserUtil.parseQuestion(argMultimap.getValue(PREFIX_QUESTION).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        Answer answer \u003d ParserUtil.parseAnswer(argMultimap.getValue(PREFIX_ANSWER).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"        PracticeDate practiceDate \u003d new PracticeDate(LocalDateTime.now());","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"        List\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        Card card \u003d new Card(question, answer, \"new\", tags, practiceDate, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        return new AddCommand(card);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"     * in the given","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":10,"winson8222":6,"GSgiansen":3,"weeweh":3,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"weeweh":1,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    public static final Prefix PREFIX_ANSWER \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"    public static final Prefix PREFIX_QUESTION \u003d new Prefix(\"q/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"    public static final Prefix PREFIX_DIFFICULTY \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"winson8222":3,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/DeckParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.PractiseCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.SetDifficultyCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.SolveCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"public class DeckParser {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DeckParser.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        case PractiseCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"            return new PractiseCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        case SolveCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"            return new SolveCommandParser().parse(arguments);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        case SetDifficultyCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"            return new SetDifficultyCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":11,"GSgiansen":2,"weeweh":1,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUESTION, PREFIX_ANSWER, PREFIX_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_QUESTION, PREFIX_ANSWER);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"        EditCommand.EditCardDescriptor editCardDescriptor \u003d new EditCommand.EditCardDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        if (argMultimap.getValue(PREFIX_QUESTION).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"            editCardDescriptor.setQuestion(ParserUtil.parseQuestion(argMultimap.getValue(PREFIX_QUESTION).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        if (argMultimap.getValue(PREFIX_ANSWER).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"            editCardDescriptor.setAnswer(ParserUtil.parseAnswer(argMultimap.getValue(PREFIX_ANSWER).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCardDescriptor::setTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        if (!editCardDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED + \"\\n:\"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"                    + EditCommand.MESSAGE_USAGE","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"            );","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"        return new EditCommand(index, editCardDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code List\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"     * {@code List\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"    private Optional\u003cList\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptyList() : tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":7,"GSgiansen":3,"weeweh":11,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weeweh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CARDS;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"weeweh"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"weeweh"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"weeweh"},"content":"     * and returns an ListCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_QUESTION, PREFIX_TAG);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        List\u003cPredicate\u003cCard\u003e\u003e predicates \u003d new ArrayList\u003c\u003e(Collections.singleton(PREDICATE_SHOW_ALL_CARDS));","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_QUESTION);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"        if (argMultimap.getValue(PREFIX_QUESTION).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"            if (argMultimap.getValue(PREFIX_QUESTION).get().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"                throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"            predicates.add(parseQuestionPrefix(argMultimap.getValue(PREFIX_QUESTION).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"        if (!argMultimap.getAllValues(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"            predicates.add(parseTagPrefix(argMultimap.getAllValues(PREFIX_TAG)));","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"        return new ListCommand(predicates);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"     * in the given","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"     * Parses {@code \u003cString\u003e prefix} into a {@code Predicate\u003cCard\u003e} if {@code prefix} is non-empty.","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"    private static Predicate\u003cCard\u003e parseQuestionPrefix(String prefix) {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"        assert(!prefix.isEmpty());","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"        return (card -\u003e card.getQuestion().startsWith(prefix));","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"weeweh"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Predicate\u003cCard\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"    private static Predicate\u003cCard\u003e parseTagPrefix(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"        assert(!tags.isEmpty());","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"weeweh"},"content":"        List\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"        return (card -\u003e new HashSet\u003c\u003e(card.getTags()).containsAll(tagSet));","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"weeweh":82}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"weeweh":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Answer;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Question;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"    public static List\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"        final List\u003cTag\u003e tagSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"     * Parses a {@code String question} into a {@code Question}.","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the given {@code question} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"    public static Question parseQuestion(String question) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        requireNonNull(question);","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        String trimmedQuestion \u003d question.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        if (!Question.isValidQuestion(trimmedQuestion)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(Question.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        return new Question(trimmedQuestion);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"     * Parses a {@code String answer} into a {@code Answer}.","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the given {@code answer} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    public static Answer parseAnswer(String answer) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        requireNonNull(answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"        String trimmedAnswer \u003d answer.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        if (!Answer.isValidAnswer(answer)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(Answer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"        return new Answer(trimmedAnswer);","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"winson8222":16,"GSgiansen":2,"weeweh":4,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/PractiseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.PractiseCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":" * Parses input arguments and creates a new ParserCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"public class PractiseCommandParser implements Parser\u003cPractiseCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public PractiseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        if (!argMultimap.getPreamble().isEmpty()) { // Check if preamble is not empty","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"                        PractiseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"            index \u003d Index.fromZeroBased(0); // Default to index 0 if not provided","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        return new PractiseCommand(index);","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":47,"GSgiansen":1,"weeweh":2}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"weeweh":1,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/SetDifficultyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIFFICULTY;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.SetDifficultyCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" * Parses input arguments and creates a new ParserCommand object","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"public class SetDifficultyCommandParser implements Parser\u003cSetDifficultyCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    public SetDifficultyCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DIFFICULTY);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        if (!argMultimap.getPreamble().isEmpty()) { // Check if preamble is not empty","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"                        SetDifficultyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"            index \u003d Index.fromZeroBased(0); // Default to index 0 if not provided","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DIFFICULTY)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetDifficultyCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        String difficulty \u003d argMultimap.getValue(PREFIX_DIFFICULTY).get();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        return new SetDifficultyCommand(index, difficulty);","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"winson8222":58}},{"path":"src/main/java/seedu/address/logic/parser/SolveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIFFICULTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.SolveCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" * Parses input arguments and creates a new ParserCommand object","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"public class SolveCommandParser implements Parser\u003cSolveCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public SolveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DIFFICULTY);","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        if (!argMultimap.getPreamble().isEmpty()) { // Check if preamble is not empty","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SolveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"            index \u003d Index.fromZeroBased(0); // Default to index 0 if not provided","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        return new SolveCommand(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"winson8222":51}},{"path":"src/main/java/seedu/address/model/Deck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.UniqueCardList;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":" * Wraps all data at the Deck level","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":" * Duplicates are not allowed (by .isSameCard comparison)","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"public class Deck implements ReadOnlyDeck {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    private final UniqueCardList cards;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    /*","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     *   among constructors.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        cards \u003d new UniqueCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    public Deck() {}","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"     * Creates a Deck using the Cards in the {@code toBeCopied}","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    public Deck(ReadOnlyDeck toBeCopied) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"        this();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"     * Replaces the contents of the card list with {@code Cards}.","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"     * {@code Cards} must not contain duplicate cards.","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    public void setCards(List\u003cCard\u003e cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        this.cards.setCards(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"     * Resets the existing data of this {@code Deck} with {@code newData}.","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public void resetData(ReadOnlyDeck newData) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        setCards(newData.getCardList());","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    //// card-level operations","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"     * Returns true if a Card with the same identity as {@code Card} exists in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"    public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        requireNonNull(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        return cards.contains(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"weeweh"},"content":"     * Adds a Card to the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"     * The Card must not already exist in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"    public void addCard(Card p) {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        cards.add(p);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"     * Replaces the given Card {@code target} in the list with {@code editedCard}.","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"     * {@code target} must exist in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"     * The card identity of {@code editedCard} must not be the same as another existing Card in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"    public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"        requireNonNull(editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"        cards.setCard(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"weeweh"},"content":"     * Removes {@code key} from this {@code Deck}.","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"weeweh"},"content":"     * {@code key} must exist in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"    public void removeCard(Card key) {","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"        cards.remove(key);","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    //// util methods","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"                .add(\"card\", cards)","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e getCardList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"        return cards.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"    public void sort() {","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"        cards.sort();","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"    public int getNumberOfCards() {","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"        return cards.count();","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof Deck)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"        Deck otherDeck \u003d (Deck) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"        return cards.equals(otherDeck.cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"        return cards.hashCode();","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":126,"GSgiansen":2,"weeweh":12}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    Predicate\u003cCard\u003e PREDICATE_SHOW_ALL_CARDS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     * Returns the user prefs\u0027 deck file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"     * Sets the user prefs\u0027 deck file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    void setDeckFilePath(Path cardFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"     * Returns the Deck","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    ReadOnlyDeck getDeck();","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"     * Returns true if a Card with the same identity as {@code person} exists in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"    boolean hasCard(Card card);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"     * Replaces the given Card {@code target} with {@code editedCard}.","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"     * {@code target} must exist in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"     * The card identity of {@code editedCard} must not be the same as another existing card in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"    void setCard(Card target, Card editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"    /** Returns an unmodifiable view of the filtered Card list */","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    ObservableList\u003cCard\u003e getFilteredCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"     * Updates the filter of the filtered Card list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"    void updateFilteredCardList(Predicate\u003cCard\u003e predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"     * Adds the given Card.","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"     * {@code card} must not already exist in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"    void addCard(Card card);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"     * Deletes the given Card.","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"     * {@code card} must exist in the Deck.","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"    void deleteCard(Card card);","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"weeweh"},"content":"     * Replaces Deck data with the data in {@code deck}.","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"    public void setDeck(ReadOnlyDeck deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":17,"GSgiansen":2,"weeweh":12,"-":58}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":" * Represents the in-memory model of the Deck data.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    private final Deck deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    private final FilteredList\u003cCard\u003e filteredCards;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"     * Initializes a ModelManager with the given Deck and userPrefs.","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    public ModelManager(ReadOnlyDeck deck, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(deck, userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"        logger.fine(\"Initializing with Deck: \" + deck + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        this.deck \u003d new Deck(deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"        filteredCards \u003d new FilteredList\u003c\u003e(this.deck.getCardList());","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"        this(new Deck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        return userPrefs.getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    public void setDeckFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        userPrefs.setDeckFilePath(addressBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Deck \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"    public void setDeck(ReadOnlyDeck deck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        this.deck.resetData(deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"    public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        return deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"    public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"        requireNonNull(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        return deck.hasCard(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"    public void deleteCard(Card target) {","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"        deck.removeCard(target);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"    public void addCard(Card card) {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"        deck.addCard(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"        updateFilteredCardList(PREDICATE_SHOW_ALL_CARDS);","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"    public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"        deck.setCard(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"weeweh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Card List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"weeweh"},"content":"     * Returns an unmodifiable view of the list of {@code Card} backed by the internal list of","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"     * {@code versionedDeck}","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e getFilteredCardList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"        return filteredCards;","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"    public void updateFilteredCardList(Predicate\u003cCard\u003e predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"        filteredCards.setPredicate(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"        return deck.equals(otherModelManager.deck)","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"                \u0026\u0026 filteredCards.equals(otherModelManager.filteredCards);","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":34,"GSgiansen":1,"weeweh":7,"-":107}},{"path":"src/main/java/seedu/address/model/ReadOnlyDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":" * Unmodifiable view of an Deck","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"public interface ReadOnlyDeck {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"     * Returns an unmodifiable view of the Cards list.","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"     * This list will not contain any duplicate Cards.","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    ObservableList\u003cCard\u003e getCardList();","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    void sort();","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":14,"GSgiansen":1,"weeweh":3}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"    private Path deckFilePath \u003d Paths.get(\"data\" , \"deck.json\");","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        setDeckFilePath(newUserPrefs.getDeckFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        return deckFilePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public void setDeckFilePath(Path deckFilePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        requireNonNull(deckFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        this.deckFilePath \u003d deckFilePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"                \u0026\u0026 deckFilePath.equals(otherUserPrefs.deckFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"        return Objects.hash(guiSettings, deckFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"weeweh"},"content":"        stringBuilder.append(\"Gui Settings : \").append(guiSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"weeweh"},"content":"        stringBuilder.append(\"\\nLocal data file location : \").append(deckFilePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"weeweh"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":9,"weeweh":4,"-":75}},{"path":"src/main/java/seedu/address/model/card/Answer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":" * Represents a Card\u0027s answer in lesSON.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class Answer {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"            \"Answers should only contain alphanumeric characters, some special characters \"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"                    + \"and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[^\\\\x00-\\\\x1F]+$\";","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"    public final String answer;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"     * Constructs a {@code Answer}.","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"     * @param answer A valid answer.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"    public Answer(String answer) {","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"        requireNonNull(answer);","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        checkArgument(isValidAnswer(answer), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if a given string is a valid answer.","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"    public static boolean isValidAnswer(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"        return answer;","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"        if (!(other instanceof Answer)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"        Answer otherAnswer \u003d (Answer) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        return answer.equals(otherAnswer.answer);","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        return answer.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":56,"winson8222":1,"GSgiansen":2}},{"path":"src/main/java/seedu/address/model/card/Card.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":" * Represents a Card in lesSON.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":" * immutable.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"public class Card implements Comparable\u003cCard\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"    // Identity fields","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"    private final Question question;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"    private final Answer answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    // Data fields for card","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"    private String difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"    private PracticeDate lastPracticeDate; // last date card was practiced, can be null.","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    private PracticeDate nextPracticeDate; // next date card should be practiced.","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    private List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"    private SolveCount solveCount \u003d new SolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    public Card(Question question, Answer answer, String difficulty, List\u003cTag\u003e tags,","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"            PracticeDate nextPracticeDate, PracticeDate lastPracticeDate) {","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"        requireAllNonNull(question, answer, difficulty, tags, nextPracticeDate);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"        this.question \u003d question;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        assert(this.question !\u003d null);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        assert(this.answer !\u003d null);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"        if (lastPracticeDate \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"            this.lastPracticeDate \u003d nextPracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"            this.lastPracticeDate \u003d lastPracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"        this.nextPracticeDate \u003d nextPracticeDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"    public void setDifficulty(String difficulty) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"weeweh"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public String getDifficulty() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"        return this.difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"    public Question getQuestion() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"        return question;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jinyuan0425"},"content":"    public Answer getAnswer() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"        return answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"    public PracticeDate getNextPracticeDate() {","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"        return this.nextPracticeDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"    public PracticeDate getLastPracticeDate() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"        return this.lastPracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"     * Sets a next practice date, replacing the previous practice dates with new","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"     * values.","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"     * @param practiceDate the next practice date.","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"    public void setNextPracticeDate(PracticeDate practiceDate) {","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"        this.lastPracticeDate \u003d this.nextPracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"        this.nextPracticeDate \u003d practiceDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"     * Sets a new practice date based on difficulty.","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"     * @param difficulty","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"    public void setNewPracticeDateWith(String difficulty) {","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"        PracticeDate newPracticeDate \u003d PracticeDate.calculateNewPracticeDate(","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"                this.lastPracticeDate, this.nextPracticeDate, difficulty);","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"        this.setNextPracticeDate(newPracticeDate);","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"weeweh"},"content":"    public List\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"weeweh"},"content":"        return Collections.unmodifiableList(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if both cards have the same question.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"jinyuan0425"},"content":"     * This defines a weaker notion of equality between two cards.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"jinyuan0425"},"content":"    public boolean isSameCard(Card otherCard) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"jinyuan0425"},"content":"        if (otherCard \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"jinyuan0425"},"content":"        return otherCard !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"jinyuan0425"},"content":"                \u0026\u0026 otherCard.getQuestion().equals(getQuestion());","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"GSgiansen"},"content":"     * Returns true if both cards have the same identity and data fields.","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"GSgiansen"},"content":"     * This defines a stronger notion of equality between two cards.","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"jinyuan0425"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"jinyuan0425"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"jinyuan0425"},"content":"        if (!(other instanceof Card)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"jinyuan0425"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"jinyuan0425"},"content":"        Card otherCard \u003d (Card) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"jinyuan0425"},"content":"        return question.equals(otherCard.question)","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"weeweh"},"content":"                \u0026\u0026 answer.equals(otherCard.answer)","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"weeweh"},"content":"                \u0026\u0026 tags.equals(otherCard.tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"jinyuan0425"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"jinyuan0425"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"jinyuan0425"},"content":"        return Objects.hash(question, answer);","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"jinyuan0425"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"jinyuan0425"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"jinyuan0425"},"content":"                .add(\"question\", question)","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"jinyuan0425"},"content":"                .add(\"answer\", answer)","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"weeweh"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"jinyuan0425"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"Dioclei"},"content":"    public int compareTo(Card other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"Dioclei"},"content":"        return this.nextPracticeDate.compareTo(other.nextPracticeDate);","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"weeweh"},"content":"    public String questiontoString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"        return \"Question: \" + this.getQuestion().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"weeweh"},"content":"    public String answertoString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"weeweh"},"content":"        return \"Answer: \" + this.getAnswer().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"jinyuan0425"},"content":"    public SolveCount getSolveCount() {","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"jinyuan0425"},"content":"        return solveCount;","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"jinyuan0425"},"content":"    public void incrementSolveCount() {","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"jinyuan0425"},"content":"        this.solveCount.incrementSolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Dioclei":45,"jinyuan0425":81,"winson8222":10,"GSgiansen":6,"weeweh":24}},{"path":"src/main/java/seedu/address/model/card/CardPracticeDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":" * Compares two cards by their ordering. Cards are ordered by next practice date.","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"public class CardPracticeDateComparator implements Comparator\u003cCard\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"    public int compare(Card o1, Card o2) {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"        return o1.compareTo(o2);","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Dioclei":13}},{"path":"src/main/java/seedu/address/model/card/PracticeDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import java.time.Month;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":" * Represents a Card\u0027s answer in lesSON.","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"public class PracticeDate implements Comparable\u003cPracticeDate\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"            \"Practice Date should be a valid date, such as in the form YYYY-MM-DDThh-mm-ss\";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    private static final double EASY_MULTIPLIER \u003d 3;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    private static final double MEDIUM_MULTIPLIER \u003d 1.5;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    private static final double HARD_MULTIPLIER \u003d 0.5;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    private static final long BASE_DURATION_HOURS \u003d 4; // base duration for when duration cannot be calculated","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    public final LocalDateTime practiceDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"     * Constructs a {@code PracticeDate}.","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"     * @param practiceDate a valid LocalDateTime containing the next practice date","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"    public PracticeDate(LocalDateTime practiceDate) {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"        requireNonNull(practiceDate);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        checkArgument(isValidNextPracticeDate(practiceDate.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"        this.practiceDate \u003d practiceDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"     * Constructs a new next practice date based on a previous practice date.","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"     * Next practice date \u003d duration between last two practice dates * multiplier + most recent practice date.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"     * @param cardLastPracticeDate the card\u0027s current last practice date (i.e. the last last practice date)","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"     * @param cardNextPracticeDate the card\u0027s current next practice date (i.e. the most recent practice date)","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"     * @param mutliplier multiplier to multiply the duration between the practice dates","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"    private PracticeDate(PracticeDate cardLastPracticeDate, PracticeDate cardNextPracticeDate, double multiplier) {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"        if (cardLastPracticeDate.equals(cardNextPracticeDate)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"            this.practiceDate \u003d cardNextPracticeDate.practiceDate.plusHours((long) (BASE_DURATION_HOURS * multiplier));","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"            Duration duration \u003d Duration.between(cardLastPracticeDate.practiceDate, cardNextPracticeDate.practiceDate);","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"            long durationInSeconds \u003d duration.getSeconds();","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"            long newDurationInSeconds \u003d (long) (durationInSeconds * multiplier);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"            this.practiceDate \u003d cardNextPracticeDate.practiceDate.plusSeconds(newDurationInSeconds);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"     * Constructs a new Practice Date based on the last practice date, next practice date, and difficulty.","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"     * @param cardLastPracticeDate last practice date","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"     * @param cardNextPracticeDate next practice date","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"     * @param difficulty difficulty","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"     * @return","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"    public static PracticeDate calculateNewPracticeDate(","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"            PracticeDate cardLastPracticeDate, PracticeDate cardNextPracticeDate, String difficulty) {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"        switch (difficulty) {","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"        case \"easy\":","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"            return new PracticeDate(cardLastPracticeDate, cardNextPracticeDate, EASY_MULTIPLIER);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"        case \"medium\":","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"            return new PracticeDate(cardLastPracticeDate, cardNextPracticeDate, MEDIUM_MULTIPLIER);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"        case \"hard\":","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"        default:","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"            return new PracticeDate(cardLastPracticeDate, cardNextPracticeDate, HARD_MULTIPLIER);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"    public static boolean isValidNextPracticeDate(String test) {","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"            LocalDateTime.parse(test);","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"        return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"    public String getDisplayName() {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"        int year \u003d this.practiceDate.getYear();","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"        Month month \u003d this.practiceDate.getMonth();","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"        String monthString \u003d month.getDisplayName(TextStyle.FULL, Locale.ENGLISH);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"        int day \u003d this.practiceDate.getDayOfMonth();","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"        return String.format(\"%d %s %d\", day, monthString, year);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"Dioclei"},"content":"    public int compareTo(PracticeDate o) {","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"        return this.practiceDate.compareTo(o.practiceDate);","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"Dioclei"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"Dioclei"},"content":"        return this.practiceDate.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"Dioclei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"Dioclei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"Dioclei"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"Dioclei"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"Dioclei"},"content":"        if (!(other instanceof PracticeDate)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"Dioclei"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"Dioclei"},"content":"        PracticeDate otherDate \u003d (PracticeDate) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"Dioclei"},"content":"        return practiceDate.equals(otherDate.practiceDate);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"Dioclei"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"Dioclei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"Dioclei"},"content":"        return practiceDate.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Dioclei":123}},{"path":"src/main/java/seedu/address/model/card/Question.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":" * Represents a Card\u0027s question in lesSON.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class Question {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"            \"Questions should only contain alphanumeric characters, some special characters \"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"                    + \"and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[^\\\\x00-\\\\x1F]+$\";","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    public final String question;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"     * Constructs a {@code Question}.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"     * @param question A valid question.","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"    public Question(String question) {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        requireNonNull(question);","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        checkArgument(isValidQuestion(question), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"        this.question \u003d question;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if a given string is a valid question.","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"    public static boolean isValidQuestion(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"     * Returns true if question starts with a given prefix.","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"    public boolean startsWith(String prefix) {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"        return question.startsWith(prefix);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"        return question;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        if (!(other instanceof Question)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"jinyuan0425"},"content":"        Question otherQuestion \u003d (Question) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"        return question.equals(otherQuestion.question);","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"jinyuan0425"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"jinyuan0425"},"content":"        return question.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":57,"winson8222":2,"GSgiansen":1,"weeweh":8}},{"path":"src/main/java/seedu/address/model/card/SolveCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":" * Represents the number of times the card is solved.","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"public class SolveCount {","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"    private Integer solveCount \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"    public Integer getSolveCount() {","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"        return solveCount;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"     * Increment solve count by 1 when the card is solved.","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    public void incrementSolveCount() {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"        this.solveCount +\u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"        return Integer.toString(solveCount);","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof Integer","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        if (other instanceof Integer) {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"            return getSolveCount() \u003d\u003d other;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"        if (!(other instanceof SolveCount)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"        SolveCount otherSolveCount \u003d (SolveCount) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"        return solveCount.equals(otherSolveCount.solveCount);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        return solveCount.hashCode();","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jinyuan0425":49}},{"path":"src/main/java/seedu/address/model/card/UniqueCardList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.exceptions.CardNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.exceptions.DuplicateCardException;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":" * A list of cards that enforces uniqueness between its elements and does not","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":" * allow nulls.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":" * A card is considered unique by comparing using {@code Card#isSameCard(Card)}.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":" * As such, adding and updating of cards uses Card#isSameCard(Card) for equality","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":" * to ensure that the card being added or updated is unique in terms of","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":" * identity in the UniqueCardList.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":" * However, the removal of a card uses Card#equals(Object)","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":" * to ensure that the card with exactly the same fields will be removed.","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":" *","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":" *","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":" * @see Card#isSameCard(Card)","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"public class UniqueCardList implements Iterable\u003cCard\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    private final ObservableList\u003cCard\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"    private final ObservableList\u003cCard\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"    private final Comparator\u003cCard\u003e cardComparator \u003d new CardPracticeDateComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if the list contains an equivalent card as the given argument.","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    public boolean contains(Card toCheck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"    public int count() {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        return this.internalList.size();","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"     * Adds a card to the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"     * The card must not already exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    public void add(Card toAdd) {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        // Check if the card is already in the list","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"            throw new DuplicateCardException();","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"        // Add the card to the list","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"        sort();","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"     * Sort the list based on the card\u0027s next practice date.","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"    public void sort() {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"        // internalList.sort(Comparator.comparingInt(Card::getPriority));","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"        internalList.sort(cardComparator);","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"jinyuan0425"},"content":"     * Replaces the card {@code target} in the list with {@code editedCard}.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"     * The card identity of {@code editedCard} must not be the same as another","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"     * existing card in the list.","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"    public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(target, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"            throw new CardNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        if (!target.isSameCard(editedCard) \u0026\u0026 contains(editedCard)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"            throw new DuplicateCardException();","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"        internalList.set(index, editedCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"jinyuan0425"},"content":"        sort();","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"jinyuan0425"},"content":"     * Removes the equivalent card from the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"jinyuan0425"},"content":"     * The card must exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"    public void remove(Card toRemove) {","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"            throw new CardNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"jinyuan0425"},"content":"        sort();","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"    public void setCards(UniqueCardList replacement) {","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"jinyuan0425"},"content":"        sort();","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"jinyuan0425"},"content":"     * Replaces the contents of this list with {@code cards}.","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"jinyuan0425"},"content":"     * {@code cards} must not contain duplicate cards.","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"    public void setCards(List\u003cCard\u003e cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"        requireAllNonNull(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"        if (!cardsAreUnique(cards)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"GSgiansen"},"content":"            throw new DuplicateCardException();","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"        internalList.setAll(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"jinyuan0425"},"content":"        sort();","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"    public ObservableList\u003cCard\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"    public Iterator\u003cCard\u003e iterator() {","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"winson8222"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"winson8222"},"content":"        if (!(other instanceof UniqueCardList)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"winson8222"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"winson8222"},"content":"        UniqueCardList otherUniqueCardList \u003d (UniqueCardList) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"winson8222"},"content":"        return internalList.equals(otherUniqueCardList.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"winson8222"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"winson8222"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"winson8222"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"winson8222"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"jinyuan0425"},"content":"     * Returns true if {@code cards} contains only unique cards.","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"jinyuan0425"},"content":"    private boolean cardsAreUnique(List\u003cCard\u003e cards) {","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"weeweh"},"content":"        boolean isUnique \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"jinyuan0425"},"content":"        for (int i \u003d 0; i \u003c cards.size() - 1; i++) {","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"jinyuan0425"},"content":"            for (int j \u003d i + 1; j \u003c cards.size(); j++) {","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"jinyuan0425"},"content":"                if (cards.get(i).isSameCard(cards.get(j))) {","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"weeweh"},"content":"                    isUnique \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"weeweh"},"content":"        return isUnique;","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":17,"jinyuan0425":28,"winson8222":125,"GSgiansen":5,"weeweh":7}},{"path":"src/main/java/seedu/address/model/card/exceptions/CardNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" * Signals that the operation is unable to find the specified card.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"public class CardNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":5,"GSgiansen":1}},{"path":"src/main/java/seedu/address/model/card/exceptions/DuplicateCardException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":" * Signals that the operation will result in duplicate Cards (Cards are considered duplicates if they have the same","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":" * identity).","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"public class DuplicateCardException extends RuntimeException {","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"    public DuplicateCardException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"        super(\"Operation would result in duplicate card\");","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":10,"GSgiansen":1}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":" * Represents a Tag in the Deck.","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"GSgiansen":1,"-":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Answer;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"import seedu.address.model.card.PracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Question;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":" * Contains utility methods for populating {@code Deck} with sample data.","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    public static Card[] getSampleCard() {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"        return new Card[] {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"            new Card(new Question(\"What is 1 + 1\"),","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"                    new Answer(\"2\"), \"new\",","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"                    new ArrayList\u003c\u003e(Collections.singleton(new Tag(\"Math\"))),","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"                    new PracticeDate(LocalDateTime.now()), null),","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"            new Card(new Question(\"What is 1 + 3\"), new Answer(\"4\"),","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"                    \"easy\", new ArrayList\u003c\u003e(Collections.singleton(new Tag(\"Math\"))),","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"                    new PracticeDate(LocalDateTime.now()), null)","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    public static Deck getSampleDeck() {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        Deck sampleAb \u003d new Deck();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        for (Card sampleCard : getSampleCard()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"            sampleAb.addCard(sampleCard);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Dioclei":10,"winson8222":6,"GSgiansen":3,"weeweh":3,"-":28}},{"path":"src/main/java/seedu/address/storage/DeckStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":" * Represents a storage for {@link seedu.address.model.Deck}.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"public interface DeckStorage {","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"     * Returns Deck data as a {@link ReadOnlyDeck}.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"     * @see #getDeckFilePath()","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    Optional\u003cReadOnlyDeck\u003e readDeck(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     * Saves the given {@link ReadOnlyDeck} to the storage.","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"     * @param deck cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    void saveDeck(ReadOnlyDeck deck) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"     * @see #saveDeck(ReadOnlyDeck)","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    void saveDeck(ReadOnlyDeck deck, Path filePath) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":42,"GSgiansen":2,"weeweh":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Answer;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"import seedu.address.model.card.PracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Question;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":" * Jackson-friendly version of {@link Card}.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"class JsonAdaptedCard {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Card\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"    public static final String LAST_PRACTICE_DATE_FIELD_NAME \u003d \"last practice date\";","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"    public static final String NEXT_PRACTICE_DATE_FIELD_NAME \u003d \"next practice date\";","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    private final String question;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    private final String answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"weeweh"},"content":"    private final String difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"    private final String nextPracticeDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"    private final String lastPracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"     * Constructs a {@code JsonAdaptedCard} with the given card details.","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"    public JsonAdaptedCard(@JsonProperty(\"question\") String question,","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"            @JsonProperty(\"answer\") String answer,","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"            @JsonProperty(\"difficulty\") String difficulty,","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"            @JsonProperty(\"next-practice-date\") String nextPracticeDate,","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"            @JsonProperty(\"last-practice-date\") String lastPracticeDate) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        this.question \u003d question;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"        this.difficulty \u003d difficulty;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"        this.nextPracticeDate \u003d nextPracticeDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"        this.lastPracticeDate \u003d lastPracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"     * Converts a given {@code Card} into this class for Jackson use.","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    public JsonAdaptedCard(Card source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        question \u003d source.getQuestion().question;","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        answer \u003d source.getAnswer().answer;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"        difficulty \u003d source.getDifficulty();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"        nextPracticeDate \u003d source.getNextPracticeDate().practiceDate.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"        lastPracticeDate \u003d source.getLastPracticeDate().practiceDate.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"     * Converts this Jackson-friendly adapted Card object into the model\u0027s","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"     * {@code Card} object.","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"     *                               the adapted card.","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"    public Card toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"        if (question \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"                    Question.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"        if (!Question.isValidQuestion(question)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(Question.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"        final Question modelQuestion \u003d new Question(question);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        if (answer \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Answer.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"        if (!Answer.isValidAnswer(answer)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"            throw new IllegalValueException(Answer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        final Answer modelAnswer \u003d new Answer(answer);","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"weeweh"},"content":"        final List\u003cTag\u003e cardTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"weeweh"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"weeweh"},"content":"            cardTags.add(tag.toModelType());","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"weeweh"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"Dioclei"},"content":"        if (nextPracticeDate \u003d\u003d null) {","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"Dioclei"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, NEXT_PRACTICE_DATE_FIELD_NAME));","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"Dioclei"},"content":"        if (!PracticeDate.isValidNextPracticeDate(nextPracticeDate)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"Dioclei"},"content":"            throw new IllegalValueException(PracticeDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"Dioclei"},"content":"        final PracticeDate modelNextPracticeDate \u003d new PracticeDate(LocalDateTime.parse(nextPracticeDate));","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"Dioclei"},"content":"        // if there is a last practice date, and it is invalid, throw an error.","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"Dioclei"},"content":"        // it\u0027s okay for last practice date to be null, but not okay for it to be","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"Dioclei"},"content":"        // invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"Dioclei"},"content":"        if (lastPracticeDate !\u003d null \u0026\u0026 !PracticeDate.isValidNextPracticeDate(lastPracticeDate)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"Dioclei"},"content":"            throw new IllegalValueException(PracticeDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"Dioclei"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"Dioclei"},"content":"        final PracticeDate modelLastPracticeDate \u003d lastPracticeDate !\u003d null","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"Dioclei"},"content":"                ? new PracticeDate(LocalDateTime.parse(lastPracticeDate))","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"Dioclei"},"content":"                : null;","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"Dioclei"},"content":"        return new Card(modelQuestion, modelAnswer, difficulty, cardTags, modelNextPracticeDate, modelLastPracticeDate);","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Dioclei":43,"winson8222":55,"GSgiansen":4,"weeweh":25}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weeweh":1,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonDeckStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":" * A class to access Deck data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"public class JsonDeckStorage implements DeckStorage {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDeckStorage.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    public JsonDeckStorage(Path filePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        return filePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"        return readDeck(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"     * Similar to {@link #readDeck()}.","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"                Files.write(filePath, \"{}\".getBytes()); // Create the \u0027deck.json\u0027 file with empty JSON content","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"                throw new DataLoadingException(e);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        // Check if the file is empty or contains only whitespace","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"            String content \u003d new String(Files.readAllBytes(filePath), StandardCharsets.UTF_8);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"            if (content.trim().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        Optional\u003cJsonSerializableDeck\u003e jsonDeck \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"                filePath, JsonSerializableDeck.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        if (!jsonDeck.isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"            return Optional.of(jsonDeck.get().toModelType());","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"        saveDeck(deck, filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"     * Similar to {@link #saveDeck(ReadOnlyDeck)}.","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck, Path filePath) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        requireNonNull(deck);","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDeck(deck), filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":103}},{"path":"src/main/java/seedu/address/storage/JsonSerializableDeck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":" * An Immutable Deck that is serializable to JSON format.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"@JsonRootName(value \u003d \"deck\")","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"class JsonSerializableDeck {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    public static final String MESSAGE_DUPLICATE_CARD \u003d \"Cards list contains duplicate card(s).\";","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    private final List\u003cJsonAdaptedCard\u003e cards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"     * Constructs a {@code JsonSerializableDeck} with the given cards.","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    public JsonSerializableDeck(@JsonProperty(\"cards\") List\u003cJsonAdaptedCard\u003e cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        this.cards.addAll(cards);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"     * Converts a given {@code ReadOnlyDeck} into this class for Jackson use.","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDeck}.","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    public JsonSerializableDeck(ReadOnlyDeck source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        cards.addAll(source.getCardList().stream().map(JsonAdaptedCard::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"     * Converts this address book into the model\u0027s {@code Deck} object.","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"    public Deck toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"        for (JsonAdaptedCard jsonAdaptedCard : cards) {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"            Card card \u003d jsonAdaptedCard.toModelType();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"            if (deck.hasCard(card)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"            deck.addCard(card);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        return deck;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":54,"GSgiansen":6,"weeweh":2}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"weeweh"},"content":"public interface Storage extends DeckStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    Path getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"    Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"    void saveDeck(ReadOnlyDeck addressBook) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":4,"weeweh":1,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" * Manages storage of Deck data in local storage.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private DeckStorage deckStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"     * Creates a {@code StorageManager} with the given {@code DeckStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"    public StorageManager(DeckStorage deckStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        this.deckStorage \u003d deckStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Deck methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    public Path getDeckFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"        return deckStorage.getDeckFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        return readDeck(deckStorage.getDeckFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"    public Optional\u003cReadOnlyDeck\u003e readDeck(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        return deckStorage.readDeck(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        saveDeck(deck, deckStorage.getDeckFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"    public void saveDeck(ReadOnlyDeck deck, Path filePath) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"        deckStorage.saveDeck(deck, filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"winson8222":16,"weeweh":1,"-":61}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"weeweh"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"weeweh":2,"-":34}},{"path":"src/main/java/seedu/address/ui/CardListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":" * Panel containing the list of cards.","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"public class CardListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    private static final String FXML \u003d \"CardListPanel.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CardListPanel.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    private ListView\u003cCard\u003e cardListView;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"     * Creates a {@code CardListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    public CardListPanel(ObservableList\u003cCard\u003e cardList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        cardListView.setItems(cardList);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        cardListView.setCellFactory(listView -\u003e new CardListViewCell());","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Card} using a {@code DisplayCard}.","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    class CardListViewCell extends ListCell\u003cCard\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        protected void updateItem(Card card, boolean empty) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"            super.updateItem(card, empty);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"            if (empty || card \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"                setText(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"                setGraphic(new DisplayCard(card, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"GSgiansen":47,"weeweh":2}},{"path":"src/main/java/seedu/address/ui/DisplayCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import javafx.scene.text.FontPosture;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":" * DisplayCard class to showcase the question and the answer","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"public class DisplayCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    private static final String FXML \u003d \"DisplayListCard.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    public final Card card;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"    private Label id;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    private TextFlow question;","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"    @FXML","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"    private Label dueDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"     * Creates a {@code DisplayCard} with the given {@code card} and index to display.","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"    public DisplayCard(Card card, int displayedIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        this.card \u003d card;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        setTextWithMarkdown(question, card.getQuestion().question);","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"        dueDate.setText(\"Due: \" + card.getNextPracticeDate().getDisplayName());","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"        card.getTags().stream()","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"    private void setTextWithMarkdown(TextFlow textFlowControl, String content) {","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        textFlowControl.getChildren().clear(); // clear existing children","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"        // Initialize flags for formatting","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"        boolean isBold \u003d false;","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"        boolean isItalic \u003d false;","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        boolean isUnderlined \u003d false;","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        StringBuilder currentSegment \u003d new StringBuilder();","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        for (int i \u003d 0; i \u003c content.length(); i++) {","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"            char c \u003d content.charAt(i);","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"            // Check for underline tags","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"            if (i + 2 \u003c content.length() \u0026\u0026 content.substring(i, i + 3).equals(\"\u003cu\u003e\")) {","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"                if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"                    addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"                    currentSegment.setLength(0);","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"                isUnderlined \u003d true;","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"                i +\u003d 2; // Skip over the \u003cu\u003e tag","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"            } else if (i + 3 \u003c content.length() \u0026\u0026 content.substring(i, i + 4).equals(\"\u003c/u\u003e\")) {","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"                if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"                    addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"                    currentSegment.setLength(0);","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"                isUnderlined \u003d false;","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"                i +\u003d 3; // Skip over the \u003c/u\u003e tag","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"            } else if (c \u003d\u003d \u0027*\u0027) {","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"                if (i \u003c content.length() - 1 \u0026\u0026 content.charAt(i + 1) \u003d\u003d \u0027*\u0027) {","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"                    // Double asterisks indicate bold","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"                    if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"                        addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"                        currentSegment.setLength(0); // Clear the current segment","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"                    }","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"                    isBold \u003d !isBold;","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"                    i++; // Skip the next asterisk","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"                } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"                    // Single asterisk indicates italic","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"                    if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"                        addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"                        currentSegment.setLength(0); // Clear the current segment","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"                    }","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"                    isItalic \u003d !isItalic;","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"            } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"                currentSegment.append(c);","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"winson8222"},"content":"        // Handle any remaining text","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"winson8222"},"content":"        if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"winson8222"},"content":"            addTextSegment(textFlowControl, currentSegment.toString(),","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"winson8222"},"content":"                    isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"winson8222"},"content":"    private void addTextSegment(TextFlow textFlowControl, String content,","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"winson8222"},"content":"                                boolean isBold, boolean isItalic, boolean isUnderlined) {","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"winson8222"},"content":"        Text textSegment \u003d new Text(content);","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"winson8222"},"content":"        if (isBold \u0026\u0026 isItalic) {","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"winson8222"},"content":"            textSegment.setFont(Font.font(\"Arial\", FontWeight.BOLD, FontPosture.ITALIC, 15));","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"winson8222"},"content":"        } else if (isBold) {","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"winson8222"},"content":"            textSegment.setFont(Font.font(\"Arial\", FontWeight.BOLD, 15));","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"winson8222"},"content":"        } else if (isItalic) {","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"winson8222"},"content":"            textSegment.setFont(Font.font(\"Arial\", FontPosture.ITALIC, 15));","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"winson8222"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"winson8222"},"content":"            textSegment.setFont(Font.font(\"Arial\", 15));","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":134,"author":{"gitId":"winson8222"},"content":"        if (isUnderlined) {","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"winson8222"},"content":"            textSegment.setUnderline(true);","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"winson8222"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"winson8222"},"content":"        textSegment.setStyle(\"-fx-fill: white;\");","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"winson8222"},"content":"        textFlowControl.getChildren().add(textSegment);","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Dioclei":4,"winson8222":91,"GSgiansen":39,"weeweh":11}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    private CardListPanel cardListPanel;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    private StackPane cardListPanelPlaceholder;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        cardListPanel \u003d new CardListPanel(logic.getFilteredCardList());","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        cardListPanelPlaceholder.getChildren().add(cardListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDeckFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":127,"author":{"gitId":"GSgiansen"},"content":"    public CardListPanel getCardListPanel() {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"GSgiansen"},"content":"        return cardListPanel;","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"weeweh"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"GSgiansen":7,"weeweh":1,"-":149}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.text.FontPosture;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":" * A UI for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    private TextFlow resultDisplay;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * Constructs a ResultDisplay.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        setTextWithMarkdown(resultDisplay, feedbackToUser);","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    private void setTextWithMarkdown(TextFlow textFlowControl, String content) {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        textFlowControl.getChildren().clear(); // clear existing children","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        // Initialize flags for formatting","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        boolean isBold \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        boolean isItalic \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        boolean isUnderlined \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        StringBuilder currentSegment \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        for (int i \u003d 0; i \u003c content.length(); i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"            char c \u003d content.charAt(i);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"            // Check for underline tags","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"            if (i + 2 \u003c content.length() \u0026\u0026 content.substring(i, i + 3).equals(\"\u003cu\u003e\")) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"                if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"                    addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"                    currentSegment.setLength(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"                isUnderlined \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"                i +\u003d 2; // Skip over the \u003cu\u003e tag","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"            } else if (i + 3 \u003c content.length() \u0026\u0026 content.substring(i, i + 4).equals(\"\u003c/u\u003e\")) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"                if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"                    addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"                    currentSegment.setLength(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"                isUnderlined \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"                i +\u003d 3; // Skip over the \u003c/u\u003e tag","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"            } else if (c \u003d\u003d \u0027*\u0027) {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"                if (i \u003c content.length() - 1 \u0026\u0026 content.charAt(i + 1) \u003d\u003d \u0027*\u0027) {","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"                    // Double asterisks indicate bold","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"                    if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"                        addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"                        currentSegment.setLength(0); // Clear the current segment","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"                    }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"                    isBold \u003d !isBold;","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"                    i++; // Skip the next asterisk","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"                } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"                    // Single asterisk indicates italic","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"                    if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"                        addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"                        currentSegment.setLength(0); // Clear the current segment","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"                    }","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"                    isItalic \u003d !isItalic;","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"                currentSegment.append(c);","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"        // Handle any remaining text","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"        if (currentSegment.length() \u003e 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"            addTextSegment(textFlowControl, currentSegment.toString(), isBold, isItalic, isUnderlined);","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"    private void addTextSegment(TextFlow textFlowControl, String content,","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"                                boolean isBold, boolean isItalic, boolean isUnderlined) {","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"        Text textSegment \u003d new Text(content);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"        if (isBold \u0026\u0026 isItalic) {","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"            textSegment.setFont(Font.font(\"Arial\", FontWeight.BOLD, FontPosture.ITALIC, 15));","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        } else if (isBold) {","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"            textSegment.setFont(Font.font(\"Arial\", FontWeight.BOLD, 15));","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"        } else if (isItalic) {","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"            textSegment.setFont(Font.font(\"Arial\", FontPosture.ITALIC, 15));","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"            textSegment.setFont(Font.font(\"Arial\", 15));","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"        if (isUnderlined) {","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"            textSegment.setUnderline(true);","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"        textSegment.setFill(Color.BLACK); // Set text color to black","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"        textFlowControl.getChildren().add(textSegment);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dioclei":2,"winson8222":1,"GSgiansen":87,"-":22}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"    void showAlertDialogAndWait(AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"        showAlertDialogAndWait(AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"winson8222":2,"-":86}},{"path":"src/main/resources/view/CardListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"  \u003cListView fx:id\u003d\"cardListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GSgiansen":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"    -fx-base: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"    -fx-control-inner-background: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #46514B;","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #57625B;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"GSgiansen"},"content":"    color: transparent;","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"Dioclei"},"content":"    text-shadow: rgba(0,0,0,0.5) 0 0 5px;","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":139,"author":{"gitId":"Dioclei"},"content":"     -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"Dioclei"},"content":"     -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"Dioclei"},"content":"     -fx-border-color: derive(#34403A, 0%);","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"Dioclei"},"content":".result-display-box {","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Dioclei"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #D3EFBD;","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"Dioclei"},"content":"    -fx-border-color: #D3EFBD;","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"Dioclei"},"content":"    -fx-border-color: derive(#34403A, 15%);","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Dioclei"},"content":"    -fx-border-color: derive(#34403A, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":192,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 20%);","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 40%);","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"Dioclei"},"content":"  -fx-text-fill: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #34403A;","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 15%);","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 10%);","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: derive(#34403A, 40%);","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: transparent, #D3EFBD, transparent, #D3EFBD;","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: #6B9AC4;","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Dioclei":38,"winson8222":1,"GSgiansen":2,"-":319}},{"path":"src/main/resources/view/DisplayListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19.0.4\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" spacing\u003d\"3.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        \u003cTextFlow fx:id\u003d\"question\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"         \u003cLabel fx:id\u003d\"dueDate\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dioclei":10,"winson8222":2,"weeweh":1,"-":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"         title\u003d\"lesSON\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        \u003cVBox fx:id\u003d\"cardList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"          \u003cStackPane fx:id\u003d\"cardListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Dioclei":1,"GSgiansen":3,"-":52}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"result-display-box\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"   \u003cTextFlow fx:id\u003d \"resultDisplay\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"GSgiansen":3,"-":5}},{"path":"src/main/resources/view/new/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"   \u003ctop\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"      \u003cHBox prefHeight\u003d\"50.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"50.0\" prefWidth\u003d\"150.0\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"logo-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"lesSON\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"50.0\" prefWidth\u003d\"450.0\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"heading-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"Current Deck:\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"   \u003c/top\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"   \u003cbottom\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"      \u003cHBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"200.0\" spacing\u003d\"10.0\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"            \u003cTextField promptText\u003d\"Enter a command...\" styleClass\u003d\"command-text\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"                  \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"            \u003cButton mnemonicParsing\u003d\"false\" styleClass\u003d\"button-primary\" stylesheets\u003d\"@Theme.css\" text\u003d\"Enter\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"   \u003c/bottom\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"   \u003cleft\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"      \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"150.0\" style\u003d\"-fx-padding: 10; -fx-spacing: 8; -fx-alignment: top-center;\" styleClass\u003d\"container\" stylesheets\u003d\"@Theme.css\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"            \u003cLabel styleClass\u003d\"heading-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"Decks\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"30.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"deck\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"deck-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"Deck Name\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"   \u003c/left\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"   \u003cright\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"      \u003cVBox prefHeight\u003d\"310.0\" prefWidth\u003d\"450.0\" spacing\u003d\"8.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"            \u003cStackPane prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"flashcard\" stylesheets\u003d\"@Theme.css\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"                  \u003cLabel styleClass\u003d\"flashcard-text\" stylesheets\u003d\"@Theme.css\" text\u003d\"What does srl $t1 $t2 5 do?\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"               \u003ceffect\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"                  \u003cDropShadow height\u003d\"10.0\" offsetX\u003d\"1.0\" offsetY\u003d\"1.0\" radius\u003d\"4.5\" width\u003d\"10.0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"                        \u003cColor red\u003d\"0.41960784792900085\" green\u003d\"0.7254902124404907\" blue\u003d\"0.5647059082984924\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"                  \u003c/DropShadow\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"               \u003c/effect\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"            \u003cButton id\u003d\"flashcard-button\" alignment\u003d\"CENTER\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"40.0\" prefWidth\u003d\"450.0\" styleClass\u003d\"button-primary\" stylesheets\u003d\"@Theme.css\" text\u003d\"Show Answer\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"   \u003c/right\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"\u003c/BorderPane\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Dioclei":81}},{"path":"src/main/resources/view/new/Theme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"@font-face {","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"    font-family: \"Poppins Medium\";","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"    src: url(\u0027@resources/fonts/Poppins/Poppins-Medium.ttf\u0027);","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"@font-face {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"    font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"    src: url(\u0027@resources/fonts/Poppins/Poppins-Regular.ttf\u0027);","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"@font-face {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    src: url(\u0027@resources/fonts/Poppins/Poppins-SemiBold.ttf\u0027);","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":".container {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#34403A\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":".logo-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":".heading-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Medium\";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":".deck {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":".deck-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#34403A\";","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":".button-primary {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#6B9AC4\";","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#FCFFFC\";","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":".flashcard {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"    -fx-background-color: \"#D3EFBD\";","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":".flashcard-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"    -fx-text-fill: \"#34403A\";","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":".command-text {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"    -fx-font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Dioclei":64}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"        model \u003d new ModelManager(getTypicalDeck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public void execute_newCard_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        Card validCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"        Model expectedModel \u003d new ModelManager(model.getDeck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.addCard(validCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        assertCommandSuccess(new AddCommand(validCard), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validCard)),","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    public void execute_duplicateCard_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        Card cardInList \u003d model.getDeck().getCardList().get(0);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"        assertCommandFailure(new AddCommand(cardInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"                AddCommand.MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":8,"weeweh":6,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"weeweh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    public void constructor_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    public void execute_cardAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        ModelStubAcceptingCardAdded modelStub \u003d new ModelStubAcceptingCardAdded();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        Card validCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"        CommandResult commandResult \u003d new AddCommand(validCard).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"weeweh"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validCard)),","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(Arrays.asList(validCard), modelStub.cardsAdded);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"    public void execute_duplicateCard_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"        Card validCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"        AddCommand addCommand \u003d new AddCommand(validCard);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        ModelStub modelStub \u003d new ModelStubWithCard(validCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CARD, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"        Card cs2100 \u003d new CardBuilder().withQuestion(\"What colour is the sky\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        Card cs1101s \u003d new CardBuilder().withQuestion(\"what colour is the grass\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"weeweh"},"content":"        AddCommand addcs2100Command \u003d new AddCommand(cs2100);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"        AddCommand addcs1101sCommand \u003d new AddCommand(cs1101s);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(addcs2100Command.equals(addcs2100Command));","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"        AddCommand addcs2100CommandCopy \u003d new AddCommand(cs2100);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(addcs2100Command.equals(addcs2100CommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(addcs2100Command.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(addcs2100Command.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        // different Card -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(addcs2100Command.equals(addcs1101sCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"        // different Tags -\u003e return false","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"weeweh"},"content":"        Card cs2100WithTag \u003d new CardBuilder().withQuestion(\"What colour is the sky\")","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"weeweh"},"content":"                .withTags(new ArrayList\u003c\u003e(Collections.singleton(new Tag(\"Tag1\"))))","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"weeweh"},"content":"                .build();","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"weeweh"},"content":"        AddCommand addcs2100CommandWithTag \u003d new AddCommand(cs2100WithTag);","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"weeweh"},"content":"        assertFalse(addcs2100Command.equals(addcs2100CommandWithTag));","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"weeweh"},"content":"        AddCommand addCommand \u003d new AddCommand(CS2100);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"weeweh"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + CS2100 + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"weeweh"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"GSgiansen"},"content":"        public Path getDeckFilePath() {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"GSgiansen"},"content":"        public void setDeckFilePath(Path deckFilePath) {","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"GSgiansen"},"content":"        public void addCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"GSgiansen"},"content":"        public void setDeck(ReadOnlyDeck newData) {","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"GSgiansen"},"content":"        public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"GSgiansen"},"content":"        public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"GSgiansen"},"content":"        public void deleteCard(Card target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"GSgiansen"},"content":"        public void setCard(Card target, Card editedCard) {","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"GSgiansen"},"content":"        public ObservableList\u003cCard\u003e getFilteredCardList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"GSgiansen"},"content":"        public void updateFilteredCardList(Predicate\u003cCard\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"GSgiansen"},"content":"     * A Model stub that contains a single Card.","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"GSgiansen"},"content":"    private class ModelStubWithCard extends ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"GSgiansen"},"content":"        private final Card card;","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"GSgiansen"},"content":"        ModelStubWithCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"GSgiansen"},"content":"            this.card \u003d card;","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"GSgiansen"},"content":"        public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"GSgiansen"},"content":"            return this.card.isSameCard(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"GSgiansen"},"content":"     * A Model stub that always accept the Card being added.","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"GSgiansen"},"content":"    private class ModelStubAcceptingCardAdded extends ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"GSgiansen"},"content":"        final ArrayList\u003cCard\u003e cardsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"GSgiansen"},"content":"        public boolean hasCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"GSgiansen"},"content":"            return cardsAdded.stream().anyMatch(card::isSameCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"GSgiansen"},"content":"        public void addCard(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"GSgiansen"},"content":"            requireNonNull(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"GSgiansen"},"content":"            cardsAdded.add(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"GSgiansen"},"content":"        public ReadOnlyDeck getDeck() {","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"GSgiansen"},"content":"            return new Deck();","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":52,"weeweh":18,"-":142}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"weeweh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.EditCardDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_QUESTION_CS2100 \u003d \"What is 5 in 2\u0027s complement\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_QUESTION_CS2100_R \u003d \"R-Format instruction opcode\";","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_QUESTION_CS1101S \u003d \"What is the language used for this mod?\";","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_ANSWER_CS2100 \u003d \"0101\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_ANSWER_CS1101S \u003d \"Source\";","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_ANSWER_CS2100_R \u003d \"0\";","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    public static final List\u003cTag\u003e VALID_TAG_CS2100 \u003d new ArrayList\u003c\u003e(Collections.singleton(new Tag(\"CS2100\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"    public static final List\u003cTag\u003e VALID_TAG_CS1101S \u003d new ArrayList\u003c\u003e(Collections.singleton(new Tag(\"CS1101S\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    public static final String VALID_SINGULAR_TAG_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"weeweh"},"content":"    public static final EditCommand.EditCardDescriptor DESC_CS2100;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"    public static final EditCommand.EditCardDescriptor DESC_CS1101S;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        DESC_CS2100 \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"                .withAnswer(VALID_ANSWER_CS2100).withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"        DESC_CS1101S \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS1101S)","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"                .withAnswer(VALID_ANSWER_CS1101S).withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"weeweh"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"     * - the address book, filtered Card list and selected Card in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"        Deck expectedDeck \u003d new Deck(actualModel.getDeck());","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"        List\u003cCard\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCardList());","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedDeck, actualModel.getDeck());","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCardList());","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"weeweh"},"content":"    public static void showCardAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"        Card card \u003d model.getFilteredCardList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"        final String[] splitName \u003d card.getQuestion().question.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(1, model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":25,"weeweh":12,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    private Model model \u003d new ModelManager(getTypicalDeck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        Card cardToDelete \u003d model.getFilteredCardList().get(INDEX_FIRST_CARD.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CARD_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"                Messages.format(cardToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"weeweh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDeck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.deleteCard(cardToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCardList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_CARD);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        // different Card -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"weeweh"},"content":"    private void showNoCard(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"        model.updateFilteredCardList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(model.getFilteredCardList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":10,"weeweh":10,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/EditCardDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.commands.EditCommand.EditCardDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.EditCardDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"public class EditCardDescriptorTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptorWithSameValues \u003d new EditCardDescriptor(DESC_CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(DESC_CS2100.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(DESC_CS2100.equals(DESC_CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(DESC_CS1101S));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor editedCS2100 \u003d new EditCardDescriptorBuilder(DESC_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"                .withQuestion(VALID_QUESTION_CS1101S).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(editedCS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"weeweh"},"content":"        // different answer -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        editedCS2100 \u003d new EditCardDescriptorBuilder(DESC_CS2100).withAnswer(VALID_ANSWER_CS1101S).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(DESC_CS2100.equals(editedCS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"weeweh"},"content":"        editedCS2100 \u003d new EditCardDescriptorBuilder(DESC_CS2100).withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"weeweh"},"content":"        assertFalse(DESC_CS2100.equals(editedCS2100));","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor editCardDescriptor \u003d new EditCardDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"        String expected \u003d EditCardDescriptor.class.getCanonicalName()","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"                + \"{\"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"                + \"question\u003d\" + editCardDescriptor.getQuestion().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"                + \", answer\u003d\" + editCardDescriptor.getAnswer().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"                + \", tags\u003d\" + editCardDescriptor.getTags().orElse(null)","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"                + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expected, editCardDescriptor.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":49,"weeweh":13}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.commands.EditCommand.EditCardDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.EditCardDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"    private Model model \u003d new ModelManager(getTypicalDeck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        Card editedCard \u003d new CardBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder(editedCard).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"weeweh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CARD, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"weeweh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CARD_SUCCESS, Messages.format(editedCard));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"weeweh"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.setCard(model.getFilteredCardList().get(0), editedCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        Index indexLastCard \u003d Index.fromOneBased(model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        Card lastCard \u003d model.getFilteredCardList().get(indexLastCard.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"        CardBuilder cardInList \u003d new CardBuilder(lastCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"        Card editedCard \u003d cardInList.withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS2100).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS2100).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastCard, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CARD_SUCCESS, Messages.format(editedCard));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        expectedModel.setCard(lastCard, editedCard);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CARD, new EditCardDescriptor());","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        Card editedCard \u003d model.getFilteredCardList().get(INDEX_FIRST_CARD.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"weeweh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CARD_SUCCESS, Messages.format(editedCard));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    public void execute_duplicateCardUnfilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"        Card firstCard \u003d model.getFilteredCardList().get(INDEX_FIRST_CARD.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder(firstCard).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"weeweh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_CARD, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"weeweh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CARD);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"    public void execute_invalidCardIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCardList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"weeweh"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"weeweh"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_CARD, DESC_CS2100);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor copyDescriptor \u003d new EditCardDescriptor(DESC_CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"weeweh"},"content":"        assertTrue(copyDescriptor.equals(DESC_CS1101S));","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"weeweh"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_CARD, DESC_CS2100)));","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"weeweh"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_CARD, DESC_CS1101S)));","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"GSgiansen"},"content":"        EditCardDescriptor editCardDescriptor \u003d new EditCardDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"weeweh"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editCardDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"weeweh"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editCardDescriptor\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"GSgiansen"},"content":"                + editCardDescriptor + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":33,"weeweh":20,"-":84}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CARDS;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"weeweh"},"content":"        model \u003d new ModelManager(getTypicalDeck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"        expectedModel \u003d new ModelManager(model.getDeck(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"        assertCommandSuccess(new ListCommand(Collections.singletonList(PREDICATE_SHOW_ALL_CARDS)),","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"                model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":2,"weeweh":6,"-":27}},{"path":"src/test/java/seedu/address/logic/commands/PractiseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"public class PractiseCommandTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    private Model model \u003d new ModelManager(getTypicalDeck(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    public void execute_practiseHighestPriority_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        PractiseCommand practiseCommand \u003d new PractiseCommand(Index.fromZeroBased(0));","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d String.format(PractiseCommand.MESSAGE_PRACTISE_CARD_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"                Messages.formatPractise(model.getFilteredCardList().get(0), INDEX_FIRST_CARD));","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(practiseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    public void execute_practiseIndexInTheMiddle_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        Index index \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        PractiseCommand practiseCommand \u003d new PractiseCommand(index);","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d String.format(PractiseCommand.MESSAGE_PRACTISE_CARD_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"                Messages.formatPractise(model.getFilteredCardList().get(1), index));","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(practiseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    public void execute_practiseIndexInTheEnd_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredCardList().size() - 1);","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        PractiseCommand practiseCommand \u003d new PractiseCommand(index);","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d String.format(PractiseCommand.MESSAGE_PRACTISE_CARD_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"                Messages.formatPractise(model.getFilteredCardList()","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"                        .get(model.getFilteredCardList().size() - 1), index));","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(practiseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    public void execute_invalidCardIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCardList().size() + 1);","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        PractiseCommand practiseCommand \u003d new PractiseCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"        assertCommandFailure(practiseCommand, model, Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"winson8222"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"winson8222"},"content":"        final PractiseCommand standardCommand \u003d new PractiseCommand(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"winson8222"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"winson8222"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"winson8222"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"winson8222"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"winson8222"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"winson8222"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"winson8222"},"content":"        assertFalse(standardCommand.equals(new PractiseCommand(INDEX_SECOND_CARD)));","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"winson8222":93}},{"path":"src/test/java/seedu/address/logic/commands/SetDifficultyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"public class SetDifficultyCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"    private Model model \u003d new ModelManager(getTypicalDeck(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    public void execute_setLowestPriority_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"        SetDifficultyCommand setDifficultyCommand \u003d new SetDifficultyCommand(Index.fromZeroBased(0), \"easy\");","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d \"Set Difficulty for Question 1 (Difficulty level: easy)\";","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        expectedModel.getDeck().getCardList().get(0).setDifficulty(\"easy\");","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        expectedModel.getDeck().getCardList().get(0).setNewPracticeDateWith(\"easy\");","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        expectedModel.getDeck().sort();","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(setDifficultyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    public void execute_setDifficultyMiddle_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"        SetDifficultyCommand setDifficultyCommand \u003d new SetDifficultyCommand(Index.fromZeroBased(0), \"medium\");","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d \"Set Difficulty for Question 1 (Difficulty level: medium)\";","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"        expectedModel.getDeck().getCardList().get(0).setDifficulty(\"medium\");","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        expectedModel.getDeck().getCardList().get(0).setNewPracticeDateWith(\"medium\");","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"        expectedModel.getDeck().sort();","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(setDifficultyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    public void execute_setDifficultyHigh_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"        SetDifficultyCommand setDifficultyCommand \u003d new SetDifficultyCommand(Index.fromZeroBased(0), \"hard\");","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d \"Set Difficulty for Question 1 (Difficulty level: hard)\";","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"        expectedModel.getDeck().getCardList().get(0).setDifficulty(\"hard\");","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"        expectedModel.getDeck().getCardList().get(0).setNewPracticeDateWith(\"hard\");","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        expectedModel.getDeck().sort();","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(setDifficultyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Dioclei":3,"winson8222":63}},{"path":"src/test/java/seedu/address/logic/commands/SolveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"public class SolveCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    private Model model \u003d new ModelManager(getTypicalDeck(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    public void execute_practiseHighestPriority_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"        SolveCommand practiseCommand \u003d new SolveCommand(Index.fromZeroBased(0));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d String.format(SolveCommand.MESSAGE_SOLVE_CARD_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"                Messages.formatSolve(model.getFilteredCardList().get(0), INDEX_FIRST_CARD));","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(practiseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"winson8222"},"content":"    public void execute_practiseIndexInTheMiddle_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"winson8222"},"content":"        Index index \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"winson8222"},"content":"        SolveCommand practiseCommand \u003d new SolveCommand(index);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d String.format(SolveCommand.MESSAGE_SOLVE_CARD_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"winson8222"},"content":"                Messages.formatSolve(model.getFilteredCardList().get(1), index));","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(practiseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"winson8222"},"content":"    public void execute_practiseIndexInTheEnd_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"winson8222"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredCardList().size() - 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"winson8222"},"content":"        SolveCommand practiseCommand \u003d new SolveCommand(index);","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"winson8222"},"content":"        String expectedMessage \u003d String.format(SolveCommand.MESSAGE_SOLVE_CARD_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"winson8222"},"content":"                Messages.formatSolve(model.getFilteredCardList()","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"winson8222"},"content":"                        .get(model.getFilteredCardList().size() - 1), index));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"winson8222"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"winson8222"},"content":"        assertCommandSuccess(practiseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"winson8222"},"content":"    public void execute_invalidCardIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"winson8222"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCardList().size() + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"winson8222"},"content":"        SolveCommand practiseCommand \u003d new SolveCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"winson8222"},"content":"        assertCommandFailure(practiseCommand, model, Messages.MESSAGE_INVALID_CARD_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jinyuan0425"},"content":"    public void execute_incrementSolveCount() {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jinyuan0425"},"content":"        int ind \u003d 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jinyuan0425"},"content":"        Index index \u003d Index.fromZeroBased(ind);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jinyuan0425"},"content":"        SolveCommand practiseCommand \u003d new SolveCommand(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jinyuan0425"},"content":"        Card targetCard \u003d model.getFilteredCardList().get(ind);","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jinyuan0425"},"content":"        String expectedMessage \u003d String.format(SolveCommand.MESSAGE_SOLVE_CARD_SUCCESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jinyuan0425"},"content":"                Messages.formatSolve(model.getFilteredCardList()","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jinyuan0425"},"content":"                        .get(ind), index));","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jinyuan0425"},"content":"        Model expectedModel \u003d new ModelManager(new Deck(model.getDeck()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jinyuan0425"},"content":"        assertCommandSuccess(practiseCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(targetCard.getSolveCount().equals(1));","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"winson8222"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"winson8222"},"content":"        final SolveCommand standardCommand \u003d new SolveCommand(INDEX_FIRST_CARD);","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"winson8222"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"winson8222"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"winson8222"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"winson8222"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"winson8222"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"winson8222"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"winson8222"},"content":"        assertFalse(standardCommand.equals(new SolveCommand(INDEX_SECOND_CARD)));","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"jinyuan0425":19,"winson8222":93}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS1101S;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS2100_R;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS1101S;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS2100_R;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SINGULAR_TAG_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        Card expectedCard \u003d new CardBuilder(CS2100).withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"                + PREFIX_QUESTION + VALID_QUESTION_CS2100_R + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"                + PREFIX_ANSWER + VALID_ANSWER_CS2100_R + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"                + PREFIX_TAG + VALID_SINGULAR_TAG_CS2100, new AddCommand(expectedCard));","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        String validExpectedCardString \u003d PREFIX_QUESTION + VALID_QUESTION_CS2100_R + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"                + PREFIX_ANSWER + VALID_ANSWER_CS2100_R + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"                + PREFIX_TAG + VALID_SINGULAR_TAG_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_QUESTION + VALID_QUESTION_CS2100_R + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"                        + validExpectedCardString, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_QUESTION));","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_ANSWER + VALID_ANSWER_CS2100 + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"                + validExpectedCardString, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ANSWER));","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"        Card expectedCard \u003d new CardBuilder(CS1101S).withTags().build();","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"                + PREFIX_QUESTION + VALID_QUESTION_CS1101S + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"                + PREFIX_ANSWER + VALID_ANSWER_CS1101S,","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"                new AddCommand(expectedCard));","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        // missing answer prefix","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, PREFIX_QUESTION + VALID_QUESTION_CS2100_R ,","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"        // missing question prefix","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, PREFIX_ANSWER + VALID_ANSWER_CS2100_R ,","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"GSgiansen":35,"-":42}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"weeweh"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectMessage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"            assertEquals(expectMessage, pe.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"GSgiansen":1,"weeweh":2,"-":36}},{"path":"src/test/java/seedu/address/logic/parser/DeckParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"public class DeckParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"GSgiansen":5}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"weeweh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_CARD));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"GSgiansen":1,"weeweh":1,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ANSWER_CS1101S;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS1101S;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_QUESTION_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SINGULAR_TAG_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_CARD;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.EditCardDescriptorBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, VALID_QUESTION_CS1101S, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"                EditCommand.MESSAGE_NOT_EDITED + \"\\n:\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, \"-5\" + VALID_QUESTION_CS2100, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"        assertParseFailure(parser, \"0\" + VALID_QUESTION_CS2100, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"        // With tag","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"        Index targetIndex \u003d INDEX_SECOND_CARD;","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_QUESTION + VALID_QUESTION_CS2100","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"                + \" \" + PREFIX_ANSWER + VALID_ANSWER_CS1101S + \" \" + PREFIX_TAG + VALID_SINGULAR_TAG_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"        EditCommand.EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS1101S).withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        // With no tag","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        Index targetIndex \u003d INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_QUESTION + VALID_QUESTION_CS2100","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"                + \" \" + PREFIX_ANSWER + VALID_ANSWER_CS1101S;","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        EditCommand.EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder().withQuestion(VALID_QUESTION_CS2100)","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"                .withAnswer(VALID_ANSWER_CS1101S).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        // Question","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"        Index targetIndex \u003d INDEX_THIRD_CARD;","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_QUESTION + VALID_QUESTION_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        EditCommand.EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder()","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"                .withQuestion(VALID_QUESTION_CS2100).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        // Answer","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_ANSWER + VALID_ANSWER_CS1101S;","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"        descriptor \u003d new EditCardDescriptorBuilder().withAnswer(VALID_ANSWER_CS1101S).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"        // Tags","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_TAG + VALID_SINGULAR_TAG_CS2100;","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"        descriptor \u003d new EditCardDescriptorBuilder().withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"        Index targetIndex \u003d INDEX_THIRD_CARD;","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"GSgiansen"},"content":"        EditCommand.EditCardDescriptor descriptor \u003d new EditCardDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"GSgiansen":42,"-":78}},{"path":"src/test/java/seedu/address/logic/parser/PractiseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"winson8222"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"winson8222"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"winson8222"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CARD;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"winson8222"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"winson8222"},"content":"import seedu.address.logic.commands.PractiseCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"winson8222"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"winson8222"},"content":" * outside of the PractiseCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"winson8222"},"content":" * same path through the PractiseCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"winson8222"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"winson8222"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"winson8222"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"winson8222"},"content":"public class PractiseCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"winson8222"},"content":"    private PractiseCommandParser parser \u003d new PractiseCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"winson8222"},"content":"    public void parse_validArgs_returnsPractiseCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"winson8222"},"content":"        assertParseSuccess(parser, \"1\", new PractiseCommand(INDEX_FIRST_CARD));","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"winson8222"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, PractiseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"winson8222"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"winson8222"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"winson8222":32}},{"path":"src/test/java/seedu/address/model/DeckTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import static seedu.address.testutil.TypicalCards.CS1231S;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.exceptions.CardNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"import seedu.address.testutil.DeckBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"public class DeckTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"    public void deckConstructor_nullDeckToCopy_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deck(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    public void setCards_nullCards_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"        assertThrows(NullPointerException.class, () -\u003e deck.setCards(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"    public void setCards_validCards_setsCards() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Dioclei"},"content":"        Deck otherDeck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"        deck.setCards(otherDeck.getCardList());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.equals(otherDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Dioclei"},"content":"    public void resetData_nullNewData_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Dioclei"},"content":"        assertThrows(NullPointerException.class, () -\u003e deck.resetData(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Dioclei"},"content":"    public void resetData_withSameDeck_returnsSameDeck() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).withCard(CS1101S).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"        Deck otherDeck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Dioclei"},"content":"        otherDeck.resetData(deck); // same deck","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.equals(otherDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"    public void resetData_withDiffDeck_returnsDiffDeck() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).withCard(CS1101S).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"        Deck otherDeck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"        Deck diffDeck \u003d new DeckBuilder().withCard(CS2100).withCard(CS1231S).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"        otherDeck.resetData(diffDeck);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"        assertTrue(otherDeck.equals(diffDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"        assertFalse(deck.equals(otherDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"    public void hasCard_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Dioclei"},"content":"        assertThrows(NullPointerException.class, () -\u003e deck.hasCard(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"    public void hasCard_cardInDeck_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.hasCard(CS2100));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Dioclei"},"content":"    public void hasCard_cardNotInDeck_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Dioclei"},"content":"        assertFalse(deck.hasCard(CS1231S));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Dioclei"},"content":"    public void addCard_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Dioclei"},"content":"        assertThrows(NullPointerException.class, () -\u003e deck.addCard(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Dioclei"},"content":"    public void addCard_validCard_addsCard() {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Dioclei"},"content":"        deck.addCard(CS2100);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Dioclei"},"content":"        Deck sameDeck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.equals(sameDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Dioclei"},"content":"    public void setCard_nullEditedCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Dioclei"},"content":"        assertThrows(NullPointerException.class, () -\u003e deck.setCard(CS2100, null));","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Dioclei"},"content":"    public void setCard_targetCardNotInDeck_throwsCardNotFoundException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Dioclei"},"content":"        assertThrows(CardNotFoundException.class, () -\u003e deck.setCard(CS2100, CS1231S));","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Dioclei"},"content":"    public void setCard_withEditedCard_setsCard() {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Dioclei"},"content":"        Deck targetDeck \u003d new DeckBuilder().withCard(CS1231S).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Dioclei"},"content":"        deck.setCard(CS2100, CS1231S);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.equals(targetDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Dioclei"},"content":"    public void removeCard_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Dioclei"},"content":"        assertThrows(NullPointerException.class, () -\u003e deck.removeCard(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Dioclei"},"content":"    public void removeCard_cardInDeck_cardRemoved() {","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Dioclei"},"content":"        deck.removeCard(CS2100);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.equals(new Deck()));","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Dioclei"},"content":"    public void removeCard_cardNotInDeck_throwsCardNotFoundException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Dioclei"},"content":"        assertThrows(CardNotFoundException.class, () -\u003e deck.removeCard(CS1231S));","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"Dioclei"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"Dioclei"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).withCard(CS1101S).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"Dioclei"},"content":"        Deck diffDeck \u003d new Deck();","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"Dioclei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Dioclei"},"content":"        Deck sameDeck \u003d new DeckBuilder().withCard(CS2100).withCard(CS1101S).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.equals(sameDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"Dioclei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"Dioclei"},"content":"        assertTrue(deck.equals(deck));","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"Dioclei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"Dioclei"},"content":"        assertFalse(deck.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"Dioclei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"Dioclei"},"content":"        assertFalse(deck.equals(5));","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"Dioclei"},"content":"        // different deck -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"Dioclei"},"content":"        assertFalse(deck.equals(diffDeck));","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Dioclei":151,"GSgiansen":1}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.DeckBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(new Deck(), new Deck(modelManager.getDeck()));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        userPrefs.setDeckFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        userPrefs.setDeckFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDeckFilePath(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"        modelManager.setDeckFilePath(path);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(path, modelManager.getDeckFilePath());","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCard(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(modelManager.hasCard(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"        modelManager.addCard(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(modelManager.hasCard(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCardList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        Deck deck \u003d new DeckBuilder().withCard(CS2100).withCard(CS1101S).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        Deck diffDeck \u003d new Deck();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"weeweh"},"content":"        modelManager \u003d new ModelManager(deck, userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"weeweh"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(deck, userPrefs);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"weeweh"},"content":"        assertFalse(modelManager.equals(new ModelManager(diffDeck, userPrefs)));","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":16,"weeweh":3,"-":97}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDeckFilePath(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"GSgiansen":1,"-":20}},{"path":"src/test/java/seedu/address/model/card/AnswerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class AnswerTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Answer(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_invalidAnswer_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"        String invalidAnswer \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Answer(invalidAnswer));","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"    public void isValidAnswer() {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        // null answer","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e Answer.isValidAnswer(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"        // invalid answer","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Answer.isValidAnswer(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"        // valid answer","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Answer.isValidAnswer(\"Craft the truth table for A and B\")); // alphabets only","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Answer.isValidAnswer(\"12345\")); // numbers only","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Answer.isValidAnswer(","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"                \"What are the first 6 bits for R-format instructions?\")); // long answers","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"        Answer answer \u003d new Answer(\"Valid Answer\");","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(answer.equals(new Answer(\"Valid Answer\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(answer.equals(answer));","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(answer.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(answer.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(answer.equals(new Answer(\"Other Valid Answer\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":55,"GSgiansen":1}},{"path":"src/test/java/seedu/address/model/card/CardPracticeDateComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"public class CardPracticeDateComparatorTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"    public void compareTo() {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"        Card cardWithLowPriority \u003d new CardBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"                .withNextPracticeDate(","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"                        new PracticeDate(LocalDateTime.of(2023, 4, 10, 23, 59)))","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"        Card cardWithHighPriority \u003d new CardBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"                .withNextPracticeDate(","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"                        new PracticeDate(LocalDateTime.of(2018, 4, 10, 23, 59)))","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"                .build();","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"        // card has higher priority","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"        assertTrue(cardWithHighPriority.compareTo(cardWithLowPriority) \u003c 0);","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"        // equal priority","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"        assertTrue(cardWithLowPriority.compareTo(cardWithLowPriority) \u003d\u003d 0);","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"        // card has lower priority","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"Dioclei"},"content":"        assertTrue(cardWithLowPriority.compareTo(cardWithHighPriority) \u003e 0);","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"Dioclei":29}},{"path":"src/test/java/seedu/address/model/card/CardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.CS1231S;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"public class CardTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"    public void isSameCard() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS2100.isSameCard(CS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS2100.isSameCard(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"        // same question, different answer -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"        // to update with CommandTestUtil","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"        Card editedCS2100 \u003d new CardBuilder(CS2100).withAnswer(\"000000\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS2100.isSameCard(editedCS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        // different question, same answer -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        editedCS2100 \u003d new CardBuilder(CS2100).withQuestion(\"What is the opcode for R-format instructions\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS2100.isSameCard(editedCS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"        Card editedCS1231S \u003d new CardBuilder(CS1231S).withQuestion(","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"                CS1231S.getQuestion().toString().toLowerCase()).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1231S.isSameCard(editedCS1231S));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        Card cs1101sCopy \u003d new CardBuilder(CS1101S).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS1101S.equals(cs1101sCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(CS1101S.equals(CS1101S));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(5));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        // different card -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(CS2100));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jinyuan0425"},"content":"        Card editedAlice \u003d new CardBuilder(CS1101S).withQuestion(CS2100.getQuestion().toString()).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(CS1101S.equals(editedAlice));","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"weeweh"},"content":"        // tags differs in case, all other attributes same -\u003e return false","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"weeweh"},"content":"        Card editedCS1231S \u003d new CardBuilder(CS1231S)","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"weeweh"},"content":"                .withTags(List.of(new Tag(\"CS1231S\"))).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"weeweh"},"content":"        Card editedLowercaseCS1231S \u003d new CardBuilder(CS1231S)","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"weeweh"},"content":"                .withTags(List.of(new Tag(\"cs1231s\"))).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"weeweh"},"content":"        assertFalse(editedLowercaseCS1231S.equals(editedCS1231S));","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"weeweh"},"content":"        // different number of tags -\u003e return false","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"weeweh"},"content":"        Card editedCS1231SWithMoreTags \u003d new CardBuilder(CS1231S)","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"weeweh"},"content":"                .withTags(List.of(new Tag(\"cs1231s\"), new Tag(\"CS1231S\"))).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"        assertFalse(editedLowercaseCS1231S.equals(editedCS1231S));","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"jinyuan0425"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"jinyuan0425"},"content":"        String expected \u003d Card.class.getCanonicalName() + \"{question\u003d\" + CS1101S.getQuestion()","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"                + \", answer\u003d\" + CS1101S.getAnswer() + \", tags\u003d[]\" + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"jinyuan0425"},"content":"        assertEquals(expected, CS1101S.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jinyuan0425"},"content":"    public void getSolveCountMethod() {","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jinyuan0425"},"content":"        Card cs1231sCopy \u003d new CardBuilder(CS1231S).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jinyuan0425"},"content":"        System.out.println(cs1231sCopy.getSolveCount());","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jinyuan0425"},"content":"        // solve count on creation \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(cs1231sCopy.getSolveCount().equals(0));","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jinyuan0425"},"content":"    public void incrementSolveCountMethod() {","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jinyuan0425"},"content":"        Card cs1101sCopy \u003d new CardBuilder(CS1101S).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jinyuan0425"},"content":"        // solve count on creation \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jinyuan0425"},"content":"        cs1101sCopy.incrementSolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(cs1101sCopy.getSolveCount().equals(1));","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jinyuan0425":83,"GSgiansen":1,"weeweh":16}},{"path":"src/test/java/seedu/address/model/card/PracticeDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dioclei"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Dioclei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"public class PracticeDateTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Dioclei"},"content":"    public void getDisplayName() {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Dioclei"},"content":"        PracticeDate practiceDate1 \u003d new PracticeDate(LocalDateTime.of(2023, 12, 8, 7, 4, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Dioclei"},"content":"        PracticeDate practiceDate2 \u003d new PracticeDate(LocalDateTime.of(2024, 6, 30, 12, 1, 0));","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Dioclei"},"content":"        PracticeDate practiceDate3 \u003d new PracticeDate(LocalDateTime.of(2022, 3, 17, 0, 0, 23));","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Dioclei"},"content":"        assertEquals(practiceDate1.getDisplayName(), \"8 December 2023\");","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"        assertEquals(practiceDate2.getDisplayName(), \"30 June 2024\");","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"        assertEquals(practiceDate3.getDisplayName(), \"17 March 2022\");","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Dioclei":20}},{"path":"src/test/java/seedu/address/model/card/QuestionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class QuestionTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Question(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"    public void constructor_invalidQuestion_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"        String invalidQuestion \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Question(invalidQuestion));","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"    public void isValidQuestion() {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"        // null question","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        assertThrows(NullPointerException.class, () -\u003e Question.isValidQuestion(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"        // invalid question","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(Question.isValidQuestion(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"winson8222"},"content":"        //assertFalse(Question.isValidQuestion(\" \")); // spaces only","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"winson8222"},"content":"        //assertFalse(Question.isValidQuestion(\"Name 2 types of UML diagrams~\")); // contains disallowed characters","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        // valid question","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"winson8222"},"content":"        //assertTrue(Question.isValidQuestion(\"Craft the truth table for A and B\")); // alphabets only","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"winson8222"},"content":"        //assertTrue(Question.isValidQuestion(\"12345\")); // numbers only","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(Question.isValidQuestion(","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"                \"What are the first 6 bits for R-format instructions?\")); // long questions","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"        Question question \u003d new Question(\"Valid Question\");","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(question.equals(new Question(\"Valid Question\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(question.equals(question));","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(question.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(question.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(question.equals(new Question(\"Other Valid Question\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jinyuan0425":53,"winson8222":4,"GSgiansen":1}},{"path":"src/test/java/seedu/address/model/card/SolveCountTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"public class SolveCountTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"    public void incrementSolveCountMethod() {","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"        SolveCount count \u003d new SolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"        count.incrementSolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":"        assertEquals(count.getSolveCount(), 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"        count.incrementSolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"        assertEquals(count.getSolveCount(), 2);","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jinyuan0425"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jinyuan0425"},"content":"        SolveCount solveCount \u003d new SolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"        SolveCount otherSolveCount \u003d new SolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(solveCount.equals(solveCount));","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(solveCount.equals(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"        // integer object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(solveCount.equals(0));","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"        // other objects -\u003e false","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(solveCount.equals(\"other object\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"        otherSolveCount.incrementSolveCount();","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(solveCount.equals(otherSolveCount));","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jinyuan0425":41}},{"path":"src/test/java/seedu/address/model/card/UniqueCardListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.model.card;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS1101S;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.CS2100;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.HIGH;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jinyuan0425"},"content":"import static seedu.address.testutil.TypicalCards.LOW;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.exceptions.CardNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.exceptions.DuplicateCardException;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.CardBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"public class UniqueCardListTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    private final UniqueCardList uniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    public void contains_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.contains(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    public void contains_cardNotInList_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(uniqueCardList.contains(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    public void contains_cardInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        assertTrue(uniqueCardList.contains(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    public void add_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.add(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"    public void add_duplicateCard_throwsDuplicateCardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DuplicateCardException.class, () -\u003e uniqueCardList.add(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_nullTargetCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCard(null, CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_nullEditedCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCard(CS2100, null));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_targetCardNotInList_throwsCardNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(CardNotFoundException.class, () -\u003e uniqueCardList.setCard(CS2100, CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardIsSameCard_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCard(CS2100, CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardHasSameIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"        Card editedCS2100 \u003d new CardBuilder(CS2100).withQuestion(\"Is the sun green?\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCard(CS2100, editedCS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(editedCS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCard(CS2100, CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"    public void setCard_editedCardHasNonUniqueIdentity_throwsDuplicateCardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DuplicateCardException.class, () -\u003e uniqueCardList.setCard(CS2100, CS1101S));","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"    public void remove_nullCard_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.remove(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"    public void remove_cardDoesNotExist_throwsCardNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(CardNotFoundException.class, () -\u003e uniqueCardList.remove(CS2100));","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"GSgiansen"},"content":"    public void remove_existingCard_removesCard() {","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.remove(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_nullUniqueCardList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCards((UniqueCardList) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_uniqueCardList_replacesOwnListWithProvidedUniqueCardList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCards(expectedUniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCardList.setCards((List\u003cCard\u003e) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"GSgiansen"},"content":"        List\u003cCard\u003e cardList \u003d Collections.singletonList(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"GSgiansen"},"content":"        uniqueCardList.setCards(cardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"GSgiansen"},"content":"        UniqueCardList expectedUniqueCardList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"GSgiansen"},"content":"        expectedUniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedUniqueCardList, uniqueCardList);","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"GSgiansen"},"content":"    public void setCards_listWithDuplicateCards_throwsDuplicateCardException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"GSgiansen"},"content":"        List\u003cCard\u003e listWithDuplicateCards \u003d Arrays.asList(CS2100, CS2100);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DuplicateCardException.class, () -\u003e uniqueCardList.setCards(listWithDuplicateCards));","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"GSgiansen"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"Dioclei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"Dioclei"},"content":"                uniqueCardList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"GSgiansen"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(uniqueCardList.asUnmodifiableObservableList().toString(), uniqueCardList.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"jinyuan0425"},"content":"    public void add_cardWithHigherPriority() {","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"Dioclei"},"content":"        uniqueCardList.add(LOW);","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"jinyuan0425"},"content":"        uniqueCardList.add(HIGH);","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"jinyuan0425"},"content":"        UniqueCardList otherList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"jinyuan0425"},"content":"        otherList.add(HIGH);","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"Dioclei"},"content":"        otherList.add(LOW);","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(uniqueCardList.equals(otherList));","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"jinyuan0425"},"content":"    public void add_cardWithSamePriority() {","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"jinyuan0425"},"content":"        UniqueCardList otherList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"jinyuan0425"},"content":"        uniqueCardList.add(CS2100);","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"Dioclei"},"content":"        uniqueCardList.add(CS1101S);","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"Dioclei"},"content":"        otherList.add(CS1101S);","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"jinyuan0425"},"content":"        otherList.add(CS2100);","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"jinyuan0425"},"content":"        assertFalse(uniqueCardList.equals(otherList));","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"jinyuan0425"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"jinyuan0425"},"content":"    public void add_cardThenChangePriority() {","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"jinyuan0425"},"content":"        uniqueCardList.add(HIGH);","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"Dioclei"},"content":"        uniqueCardList.add(LOW);","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"Dioclei"},"content":"        uniqueCardList.setCard(LOW, LOW);","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"jinyuan0425"},"content":"        UniqueCardList otherList \u003d new UniqueCardList();","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"Dioclei"},"content":"        otherList.add(LOW);","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"jinyuan0425"},"content":"        otherList.add(HIGH);","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"jinyuan0425"},"content":"        assertTrue(uniqueCardList.equals(otherList));","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Dioclei":9,"jinyuan0425":26,"GSgiansen":162}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"weeweh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"        String invalidTagName2 \u003d \"CS!\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName2));","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"weeweh"},"content":"        // Tag Names","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"        String invalidTagName \u003d \"CS2100S!\";","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"weeweh"},"content":"        String validTagName \u003d \"CS1231s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        assertTrue(Tag.isValidTagName(validTagName));","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"weeweh"},"content":"        assertFalse(Tag.isValidTagName(invalidTagName));","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"weeweh":12,"-":25}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"//import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"//    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"//}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"GSgiansen":110}},{"path":"src/test/java/seedu/address/storage/JsonDeckStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"public class JsonDeckStorageTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDeckStorageTest\");","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    @TempDir","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    public void readDeck_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDeck(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    private java.util.Optional\u003cReadOnlyDeck\u003e readDeck(String filePath) throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        return new JsonDeckStorage(Paths.get(filePath)).readDeck(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"                : null;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        assertFalse(readDeck(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"notJsonFormatDeck.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Dioclei"},"content":"    public void readDeck_invalidCardDeckMissingAnswer_throwDataLoadingException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"Dioclei"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"invalidCardDeckMissingAnswer.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"Dioclei"},"content":"    public void readDeck_invalidCardDeckMissingNextPracticeDate_throwDataLoadingException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"Dioclei"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"invalidCardDeckMissingNextPracticeDate.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"Dioclei"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"Dioclei"},"content":"    public void readDeck_invalidCardDeckInvalidNextPracticeDate_throwDataLoadingException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"Dioclei"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"invalidCardDeckInvalidNextPracticeDate.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"    public void readDeck_invalidAndValidCardDeck_throwDataLoadingException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readDeck(\"invalidAndValidCardDeck.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"    public void readAndSaveDeck_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"        Deck original \u003d getTypicalDeck();","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"        JsonDeckStorage jsonDeckStorage \u003d new JsonDeckStorage(filePath);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        jsonDeckStorage.saveDeck(original, filePath);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        ReadOnlyDeck readBack \u003d jsonDeckStorage.readDeck(filePath).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(original, new Deck(readBack));","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"    public void saveDeck_nullDeck_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDeck(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"     * Saves {@code Deck} at the specified {@code filePath}.","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"    private void saveDeck(ReadOnlyDeck deck, String filePath) {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"            new JsonDeckStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"                    .saveDeck(deck, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"    public void saveDeck_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDeck(new Deck(), null));","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Dioclei":12,"GSgiansen":91}},{"path":"src/test/java/seedu/address/storage/JsonSerializableDeckTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.testutil.TypicalCards;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"public class JsonSerializableDeckTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDeckTest\");","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    private static final Path TYPICAL_CARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCardDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    private static final Path INVALID_CARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCardDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    private static final Path DUPLICATE_CARD_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCardDeck.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"    public void toModelType_typicalCardsFile_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        JsonSerializableDeck dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CARD_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"                JsonSerializableDeck.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        Deck deckFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        Deck typicalCardsDeck \u003d TypicalCards.getTypicalDeck();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(deckFromFile, typicalCardsDeck);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        JsonSerializableDeck dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CARD_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"                JsonSerializableDeck.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    public void toModelType_duplicateCards_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        JsonSerializableDeck dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CARD_FILE,","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"                JsonSerializableDeck.class).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDeck.MESSAGE_DUPLICATE_CARD,","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        userPrefs.setDeckFilePath(Paths.get(\"data/deck.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":1,"-":91}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.testutil.TypicalCards.getTypicalDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.ReadOnlyDeck;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        JsonDeckStorage deckStorage \u003d new JsonDeckStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"        storageManager \u003d new StorageManager(deckStorage, userPrefsStorage);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    public void deckReadSave() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"         * {@link JsonDeckStorage} class.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDeckStorageTest} class.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        Deck original \u003d getTypicalDeck();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        storageManager.saveDeck(original);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        ReadOnlyDeck retrieved \u003d storageManager.readDeck().get();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(original, new Deck(retrieved));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    public void getDeckFilePath() {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        assertNotNull(storageManager.getDeckFilePath());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":13,"weeweh":1,"-":37}},{"path":"src/test/java/seedu/address/testutil/CardBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Answer;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Dioclei"},"content":"import seedu.address.model.card.PracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Question;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"weeweh"},"content":" * A utility class to help with building Card objects.","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"public class CardBuilder {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jinyuan0425"},"content":"    public static final String DEFAULT_QUESTION \u003d \"What is the opcode for R-format instructions?\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jinyuan0425"},"content":"    public static final String DEFAULT_ANSWER \u003d \"0\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    public static final PracticeDate DEFAULT_NEXT_PRACTICE_DATE \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"            new PracticeDate(LocalDateTime.MIN); // highest priority","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"weeweh"},"content":"    public static final List\u003cTag\u003e DEFAULT_TAGS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"jinyuan0425"},"content":"    private Question question;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jinyuan0425"},"content":"    private Answer answer;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"    private PracticeDate nextPracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"weeweh"},"content":"    private List\u003cTag\u003e tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jinyuan0425"},"content":"     * Creates a {@code CardBuilder} with the default details.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"        question \u003d new Question(DEFAULT_QUESTION);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"        answer \u003d new Answer(DEFAULT_ANSWER);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Dioclei"},"content":"        nextPracticeDate \u003d DEFAULT_NEXT_PRACTICE_DATE;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"weeweh"},"content":"        tags \u003d DEFAULT_TAGS;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jinyuan0425"},"content":"     * Initializes the CardBuilder with the data of {@code cardToCopy}.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder(Card cardToCopy) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jinyuan0425"},"content":"        question \u003d cardToCopy.getQuestion();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jinyuan0425"},"content":"        answer \u003d cardToCopy.getAnswer();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Dioclei"},"content":"        nextPracticeDate \u003d cardToCopy.getNextPracticeDate();","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"        tags \u003d cardToCopy.getTags();","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"     * Sets the {@code Question} of the {@code Card} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder withQuestion(String question) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"jinyuan0425"},"content":"        this.question \u003d new Question(question);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"jinyuan0425"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"jinyuan0425"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"jinyuan0425"},"content":"     * Sets the {@code Answer} of the {@code Card} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jinyuan0425"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jinyuan0425"},"content":"    public CardBuilder withAnswer(String answer) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jinyuan0425"},"content":"        this.answer \u003d new Answer(answer);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jinyuan0425"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Dioclei"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"Dioclei"},"content":"     * Sets the next practice date of the {@code Card} that we are building","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"Dioclei"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"Dioclei"},"content":"    public CardBuilder withNextPracticeDate(PracticeDate practiceDate) {","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"Dioclei"},"content":"        this.nextPracticeDate \u003d practiceDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"Dioclei"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"Dioclei"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"Dioclei"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"weeweh"},"content":"     * Sets the {@code Tags} of the {@code Card} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"weeweh"},"content":"    public CardBuilder withTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"weeweh"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"weeweh"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"     * Empty constructor for no tags","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"     * @returns card builder with no tags","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    public CardBuilder withTags() {","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"jinyuan0425"},"content":"    public Card build() {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Dioclei"},"content":"        return new Card(question, answer, \"new\", tags, nextPracticeDate, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Dioclei":17,"jinyuan0425":49,"GSgiansen":12,"weeweh":16}},{"path":"src/test/java/seedu/address/testutil/CardUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.commands.EditCommand.EditCardDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":" * A utility class for Card.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"public class CardUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * Returns an add command string for adding the {@code Card}.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    public static String getAddCommand(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"weeweh"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getCardDetails(card);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * Returns the part of command string for the given {@code Card}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public static String getCardDetails(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        sb.append(PREFIX_QUESTION + card.getQuestion().question + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        sb.append(PREFIX_ANSWER + card.getAnswer().answer + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"     * Returns the part of command string for the given {@code EditCardDescriptor}\u0027s details.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    public static String getEditCardDescriptorDetails(EditCardDescriptor descriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        descriptor.getQuestion().ifPresent(name -\u003e sb.append(PREFIX_QUESTION).append(name.question).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        descriptor.getAnswer().ifPresent(name -\u003e sb.append(PREFIX_ANSWER).append(name.answer).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":38,"weeweh":3}},{"path":"src/test/java/seedu/address/testutil/DeckBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":" * A utility class to help with building Deck objects.","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":" *     {@code AddressBook ab \u003d new DeckBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"public class DeckBuilder {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    private Deck deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    public DeckBuilder() {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"        deck \u003d new Deck();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    public DeckBuilder(Deck deck) {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        this.deck \u003d deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public DeckBuilder withCard(Card card) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        deck.addCard(card);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public Deck build() {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        return deck;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"GSgiansen":33}},{"path":"src/test/java/seedu/address/testutil/EditCardDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"weeweh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"weeweh"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Answer;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Question;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"weeweh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":" * A utility class to help with building EditCardDescriptor objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"public class EditCardDescriptorBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"weeweh"},"content":"    private EditCommand.EditCardDescriptor descriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"weeweh"},"content":"        descriptor \u003d new EditCommand.EditCardDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"weeweh"},"content":"    public EditCardDescriptorBuilder(EditCommand.EditCardDescriptor descriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"weeweh"},"content":"        this.descriptor \u003d new EditCommand.EditCardDescriptor(descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"     * Returns an {@code EditCardDescriptor} with fields containing {@code Card}\u0027s details","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder(Card card) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"weeweh"},"content":"        descriptor \u003d new EditCommand.EditCardDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setQuestion(card.getQuestion());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setAnswer(card.getAnswer());","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"weeweh"},"content":"        descriptor.setTags(card.getTags());","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"weeweh"},"content":"     * Sets the {@code Question} of the {@code EditCardDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder withQuestion(String question) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setQuestion(new Question(question));","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"weeweh"},"content":"     * Sets the {@code Answer} of the {@code EditCardDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder withAnswer(String answer) {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setAnswer(new Answer(answer));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"weeweh"},"content":"     * Sets the {@code Tags} of the {@code EditCardDescriptor} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"weeweh"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"weeweh"},"content":"    public EditCardDescriptorBuilder withTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"weeweh"},"content":"        descriptor.setTags(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"weeweh"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"weeweh"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"     * @returns an EditCardDescriptorBuilder","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"    public EditCardDescriptorBuilder withTags() {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"        descriptor.setTags(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"weeweh"},"content":"    public EditCommand.EditCardDescriptor build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"        return descriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"weeweh"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":51,"weeweh":23}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        return Index.fromOneBased(model.getFilteredCardList().size() / 2);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"        return Index.fromOneBased(model.getFilteredCardList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"weeweh"},"content":"    public static Card getCard(Model model, Index index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        return model.getFilteredCardList().get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"GSgiansen":5,"weeweh":1,"-":50}},{"path":"src/test/java/seedu/address/testutil/TypicalCards.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jinyuan0425"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Dioclei"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"jinyuan0425"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jinyuan0425"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jinyuan0425"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.Deck;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import seedu.address.model.card.Card;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Dioclei"},"content":"import seedu.address.model.card.PracticeDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jinyuan0425"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jinyuan0425"},"content":" * A utility class containing a list of {@code Card} objects to be used in tests.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jinyuan0425"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jinyuan0425"},"content":"public class TypicalCards {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Dioclei"},"content":"    public static final Card HIGH \u003d new CardBuilder().withQuestion(\"High Priority?\")","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"Dioclei"},"content":"            .withAnswer(\"True\")","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"Dioclei"},"content":"            .withNextPracticeDate(new PracticeDate(LocalDateTime.MIN)).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Dioclei"},"content":"    public static final Card LOW \u003d new CardBuilder().withQuestion(\"Low Priority?\")","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"Dioclei"},"content":"            .withAnswer(\"True\")","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"Dioclei"},"content":"            .withNextPracticeDate(new PracticeDate(LocalDateTime.MAX)).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Dioclei"},"content":"    private static final PracticeDate typicalDate \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Dioclei"},"content":"            new PracticeDate(","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Dioclei"},"content":"                LocalDateTime.of(2018, 11, 3, 12, 45, 30)","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"Dioclei"},"content":"            );","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"jinyuan0425"},"content":"    public static final Card CS2100 \u003d new CardBuilder().withQuestion(\"R-Format instruction opcode\")","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Dioclei"},"content":"            .withAnswer(\"0\").withNextPracticeDate(typicalDate).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"jinyuan0425"},"content":"    public static final Card CS1231S \u003d new CardBuilder().withQuestion(\"Name the 3 relations\")","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Dioclei"},"content":"            .withAnswer(\"Reflexive, Symmetric, Transitive\").withNextPracticeDate(typicalDate).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"jinyuan0425"},"content":"    public static final Card CS1101S \u003d new CardBuilder().withQuestion(\"What is the language used for this mod?\")","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Dioclei"},"content":"            .withAnswer(\"Source\").withNextPracticeDate(typicalDate).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jinyuan0425"},"content":"    private TypicalCards() {} // prevents instantiation","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"jinyuan0425"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"     * Returns an {@code Deck} with all the typical card.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    public static Deck getTypicalDeck() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        Deck ab \u003d new Deck();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        for (Card card : getTypicalCards()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"            ab.addCard(card);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"        return ab;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    public static List\u003cCard\u003e getTypicalCards() {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jinyuan0425"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2100, CS1101S, CS1231S, HIGH, LOW));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"jinyuan0425"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"jinyuan0425"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Dioclei":15,"jinyuan0425":21,"GSgiansen":14}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"    public static final Index INDEX_FIRST_CARD \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"    public static final Index INDEX_SECOND_CARD \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    public static final Index INDEX_THIRD_CARD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"winson8222"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"winson8222":1,"GSgiansen":3,"-":9}}]

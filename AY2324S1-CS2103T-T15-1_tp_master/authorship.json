[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T15-1/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"* This is **a one-stop platform for CS1101S Avengers**.\u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"  * Track tasks and assignments to do","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"  * Record attendance of students","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"* It is named `F.A.K.E.J.A.R.V.I.S.` because it was inspired by our favourite `Marvel` movie, (`Avengers`).","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"* For the detailed documentation of this project, see the **[F.A.K.E.J.A.R.V.I.S. Product Website](https://ay2324s1-cs2103t-t15-1.github.io/tp/)**.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"Respirayson":6,"raydenlim":1,"-":4}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2023-10-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Respirayson":4,"-":430}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"## Project F.A.K.E.J.A.R.V.I.S.\u0027 Team","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"\u003cimg src\u003d\"images/fakejarvis.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"### Yeap Rayson","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"\u003cimg src\u003d\"images/respirayson.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"[[homepage](http://linkedin.com/in/rayson-yeap)]","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"[[github](https://github.com/respirayson)]","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"[[portfolio](team/respirayson.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"* Role: Git expert, Documentation","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"### Jian Song","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"\u003cimg src\u003d\"images/raydenlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"[[github](http://github.com/raydenlim)]","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"[[portfolio](team/raydenlim.md)]","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"* Role: Morale Booster, Debugger","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"* Responsibilities: *","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"### Ding Han","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"\u003cimg src\u003d\"images/ldinghan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"[[github](http://github.com/ldinghan)] [[portfolio](team/ldinghan.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"### Ryan Pang","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"\u003cimg src\u003d\"images/originalidk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"[[github](https://github.com/Originalidk)]","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"[[portfolio](team/originalidk.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"* Responsibilities: Fullstack","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"### Ho Jia Cheng","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"\u003cimg src\u003d\"images/wesho1107.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"[[github](http://github.com/wesho1107)]","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"[[portfolio](team/wesho1107.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ldinghan":3,"Respirayson":5,"raydenlim":9,"Originalidk":5,"-":36,"wesho1107":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"# F.A.K.E.J.A.R.V.I.S. Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"Respirayson"},"content":"* CS1101S Avengers","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"Respirayson"},"content":"* has a need to manage a significant number of classes, tutorials and assignments","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"Respirayson"},"content":"**Value proposition**:  track assignment gradings, student participation and plan their tutorials, consultations and mastery checks","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                        | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"Respirayson"},"content":"|----------|--------------------------------------------|-------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions              | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                    |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                     | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name               | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"Respirayson"},"content":"| `* * *`  | busy avenger                               | keep track of what needs to be done | better guide my students.                                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details        | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"raydenlim"},"content":"(For all use cases below, the **System** is the `F.A.K.E.J.A.R.V.I.S.` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"raydenlim"},"content":"2.  F.A.K.E.J.A.R.V.I.S. shows a list of persons","lastModifiedDate":"2023-10-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"raydenlim"},"content":"4.  F.A.K.E.J.A.R.V.I.S. deletes the person","lastModifiedDate":"2023-10-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"raydenlim"},"content":"    * 3a1. F.A.K.E.J.A.R.V.I.S. shows an error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":322,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"Respirayson"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"Respirayson"},"content":"**Use case: Delete a task**","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"Respirayson"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"Respirayson"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"raydenlim"},"content":"2.  F.A.K.E.J.A.R.V.I.S. shows a list of persons","lastModifiedDate":"2023-10-23"},{"lineNumber":332,"author":{"gitId":"Respirayson"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"raydenlim"},"content":"4.  F.A.K.E.J.A.R.V.I.S. deletes the person","lastModifiedDate":"2023-10-23"},{"lineNumber":334,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"Respirayson"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"Respirayson"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"Originalidk"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":341,"author":{"gitId":"Originalidk"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"Originalidk"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"raydenlim"},"content":"    * 3a1. F.A.K.E.J.A.R.V.I.S. shows an error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":346,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"Originalidk"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"Originalidk"},"content":"**Use case: Grade an assignment**","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"Originalidk"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"Originalidk"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"raydenlim"},"content":"2.  F.A.K.E.J.A.R.V.I.S. shows a list of persons","lastModifiedDate":"2023-10-23"},{"lineNumber":356,"author":{"gitId":"Originalidk"},"content":"3.  User requests to grade an assignment for a specific person in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"raydenlim"},"content":"4.  F.A.K.E.J.A.R.V.I.S. assigns given grade to the student","lastModifiedDate":"2023-10-23"},{"lineNumber":358,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"Originalidk"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"Originalidk"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"Respirayson"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":365,"author":{"gitId":"Respirayson"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":366,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":367,"author":{"gitId":"Respirayson"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":368,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":369,"author":{"gitId":"raydenlim"},"content":"    * 3a1. F.A.K.E.J.A.R.V.I.S. shows an error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"raydenlim"},"content":"**Use case: Find Student Profile**","lastModifiedDate":"2023-10-06"},{"lineNumber":374,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":375,"author":{"gitId":"raydenlim"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":376,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":377,"author":{"gitId":"raydenlim"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-06"},{"lineNumber":378,"author":{"gitId":"raydenlim"},"content":"2.  F.A.K.E.J.A.R.V.I.S. shows a list of persons","lastModifiedDate":"2023-10-23"},{"lineNumber":379,"author":{"gitId":"raydenlim"},"content":"3.  User request a search query to find a student\u0027s profile","lastModifiedDate":"2023-10-06"},{"lineNumber":380,"author":{"gitId":"raydenlim"},"content":"4.  F.A.K.E.J.A.R.V.I.S. returns matching results from the database","lastModifiedDate":"2023-10-23"},{"lineNumber":381,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":382,"author":{"gitId":"raydenlim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":383,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":384,"author":{"gitId":"raydenlim"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":385,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":386,"author":{"gitId":"raydenlim"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":387,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":388,"author":{"gitId":"raydenlim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":389,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":390,"author":{"gitId":"raydenlim"},"content":"* 3a. No matching profiles.","lastModifiedDate":"2023-10-06"},{"lineNumber":391,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":392,"author":{"gitId":"raydenlim"},"content":"    * 3a1. F.A.K.E.J.A.R.V.I.S. shows an error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":393,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":394,"author":{"gitId":"raydenlim"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":395,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":396,"author":{"gitId":"raydenlim"},"content":"**Use case: Filter Results**","lastModifiedDate":"2023-10-06"},{"lineNumber":397,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":398,"author":{"gitId":"raydenlim"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":399,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":400,"author":{"gitId":"raydenlim"},"content":"1.  User requests to list persons.","lastModifiedDate":"2023-10-06"},{"lineNumber":401,"author":{"gitId":"raydenlim"},"content":"2.  F.A.K.E.J.A.R.V.I.S. shows a list of persons.","lastModifiedDate":"2023-10-23"},{"lineNumber":402,"author":{"gitId":"raydenlim"},"content":"3.  User requests to apply filters to the results via attribute `FILTER_ATTRIBUTE`, or description `FILTER_DESCRIPTION`.","lastModifiedDate":"2023-10-06"},{"lineNumber":403,"author":{"gitId":"raydenlim"},"content":"4.  F.A.K.E.J.A.R.V.I.S. shows the filter results.","lastModifiedDate":"2023-10-23"},{"lineNumber":404,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":405,"author":{"gitId":"raydenlim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":406,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":407,"author":{"gitId":"raydenlim"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":408,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":409,"author":{"gitId":"raydenlim"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":410,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":411,"author":{"gitId":"raydenlim"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":412,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":413,"author":{"gitId":"raydenlim"},"content":"* 3a. No filtered results.","lastModifiedDate":"2023-10-06"},{"lineNumber":414,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":415,"author":{"gitId":"raydenlim"},"content":"    * 3a1. F.A.K.E.J.A.R.V.I.S. shows an error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":419,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"Respirayson"},"content":"4. System should respond within 2 seconds to ensure smooth and efficient user interactions.","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"Respirayson"},"content":"5. The system should be able to handle an increasing number of users and data without a significant decrease in performance.","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"Respirayson"},"content":"6. The system should be user-friendly, with a clean and intuitive interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"Respirayson"},"content":"7. Regular automated backups of data should be performed, and there should be a clear disaster recovery plan in place.","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":446,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":447,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Respirayson":37,"raydenlim":53,"Originalidk":21,"-":380}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"# F.A.K.E.J.A.R.V.I.S. User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"  \u003cimg src\u003d\"images/fakejarvis.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"_Say goodbye to chaos and hello to an organized and efficient classroom experience._","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"F.A.K.E.J.A.R.V.I.S. is the **ultimate solution for CS1101S Avengers who manage a multitude of tutoring tasks.** This platform empowers you to efficiently track assignment gradings, monitor student participation, and seamlessly plan tutorials, consultations, and mastery checks. This is your one-stop solution to managing your time and students as a CS1101S Avenger!","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"1. Download the latest `fakejarvis.jar` from [here](https://github.com/AY2324S1-CS2103T-T15-1/tp/releases). _[Coming Soon]_","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your F.A.K.E.J.A.R.V.I.S..","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fakejarvis.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"F.A.K.E.J.A.R.V.I.S. data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"raydenlim"},"content":"F.A.K.E.J.A.R.V.I.S. data are saved automatically as a JSON file `[JAR file location]/data/fakejarvis.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"If your changes to the data file makes its format invalid, F.A.K.E.J.A.R.V.I.S. will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"### 📝Adding a Task: `addtask`","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"Respirayson"},"content":"Adds a task to your tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"Respirayson"},"content":"Format: `addtask n/TASK_NAME d/DUE_DATE p/PRIORITY`","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"Respirayson"},"content":"* TASK_NAME The name or description of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"Respirayson"},"content":"* DUE_DATE The due date or deadline for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"Respirayson"},"content":"* PRIORITY The priority level of the task (e.g., high, medium, low).","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"Respirayson"},"content":"* `addtask n/Prepare Lecture slides d/2023-09-30 p/high` creates a task to prepare lecture slides with a high priority due on September 30, 2023.","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"Respirayson"},"content":"* `addtask n/Read Chapter 5` creates a task to read Chapter 5 without specifying a due date or priority.","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing Tasks: `viewtasks`","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"Respirayson"},"content":"Views the list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"Respirayson"},"content":"Format: `viewtasks d/DUE_DATE p/PRIORITY`","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"Respirayson"},"content":"* DUE_DATE The due date or deadline for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"Respirayson"},"content":"* PRIORITY The priority level of the task (e.g., high, medium, low).","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"Respirayson"},"content":"* `viewtasks` displays all tasks in the user\u0027s task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"Respirayson"},"content":"* `viewtasks p/high` displays only high-priority tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"Respirayson"},"content":"* `viewtasks d/2023-09-30` displays tasks due on September 30, 2023.","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"raydenlim"},"content":"### ✅Completing a Task: `completetask`","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"Respirayson"},"content":"Marks a task as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"Respirayson"},"content":"Format: `completetask TASK_INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"Respirayson"},"content":"* TASK_INDEX The index of the task to mark as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"Respirayson"},"content":"* `completetask 1` marks the task with index 1 as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"Respirayson"},"content":"* `completetask 3` marks the task with index 1 as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"raydenlim"},"content":"### 🛠️Editing a Task: `edittask`","lastModifiedDate":"2023-10-06"},{"lineNumber":226,"author":{"gitId":"Respirayson"},"content":"Edits the details of a task","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"Respirayson"},"content":"Format: `edittask TASK_INDEX n/NEW_TASK_NAME d/NEW_DUE_DATE p/NEW_PRIORITY`","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"Respirayson"},"content":"* TASK_INDEX The index of the task to edit.","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"Respirayson"},"content":"* NEW_TASK_NAME The new name or description for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"Respirayson"},"content":"* NEW_DUE_DATE The new due date or deadline for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"Respirayson"},"content":"* NEW_PRIORITY The new priority level for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"Respirayson"},"content":"* `edittask 1 n/Updated TaskName` edits the name of the task with index 1.","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"Respirayson"},"content":"* `edittask 2 d/2023-10-15` updates the due date of the task with index 2 to October 15, 2023.","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting a Task: `deletetask`","lastModifiedDate":"2023-10-06"},{"lineNumber":242,"author":{"gitId":"Respirayson"},"content":"Deletes a task from the tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"Respirayson"},"content":"Format: `deletetask TASK_INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"Respirayson"},"content":"* TASK_INDEX The index of the task to delete.","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"Respirayson"},"content":"* `deletetask 3` deletes the task with index 3 from the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"Respirayson"},"content":"* `deletetask 2` deletes the task with index 2 from the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"raydenlim"},"content":"### 📆Taking attendance: `takeattendance`","lastModifiedDate":"2023-10-06"},{"lineNumber":254,"author":{"gitId":"raydenlim"},"content":"Takes the attendance of a student","lastModifiedDate":"2023-10-06"},{"lineNumber":255,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":256,"author":{"gitId":"raydenlim"},"content":"Format: `takeattendance n/STUDENT_NAME s/SESSION p/PRESENCE`","lastModifiedDate":"2023-10-06"},{"lineNumber":257,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":258,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":259,"author":{"gitId":"raydenlim"},"content":"* STUDENT_NAME - The name of the student.","lastModifiedDate":"2023-10-06"},{"lineNumber":260,"author":{"gitId":"raydenlim"},"content":"* SESSION - The session number.","lastModifiedDate":"2023-10-06"},{"lineNumber":261,"author":{"gitId":"raydenlim"},"content":"* PRESENCE - The attendance status of the student (e.g., present, absent).","lastModifiedDate":"2023-10-06"},{"lineNumber":262,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":263,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":264,"author":{"gitId":"raydenlim"},"content":"* `takeattendance n/John Doe s/5 present` Marks John Doe as present on the 5th session.","lastModifiedDate":"2023-10-06"},{"lineNumber":265,"author":{"gitId":"raydenlim"},"content":"* `takeattendance n/Foo Bar s/2 absent` Marks Foo Bar as absent on the 2nd session.","lastModifiedDate":"2023-10-06"},{"lineNumber":266,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":267,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing attendance: viewattendance","lastModifiedDate":"2023-10-06"},{"lineNumber":268,"author":{"gitId":"raydenlim"},"content":"Views the attendance list","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":270,"author":{"gitId":"raydenlim"},"content":"Format: `viewattendance n/STUDENT_NAME s/SESSION`","lastModifiedDate":"2023-10-06"},{"lineNumber":271,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":272,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":273,"author":{"gitId":"raydenlim"},"content":"* STUDENT_NAME - The name of the student.","lastModifiedDate":"2023-10-06"},{"lineNumber":274,"author":{"gitId":"raydenlim"},"content":"* SESSION - The session number.","lastModifiedDate":"2023-10-06"},{"lineNumber":275,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":276,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":277,"author":{"gitId":"raydenlim"},"content":"* `viewattendance` Displays the overall attendance across all students and sessions.","lastModifiedDate":"2023-10-06"},{"lineNumber":278,"author":{"gitId":"raydenlim"},"content":"* `viewattendance n/Rayan` Displays Rayan’s overall attendance.","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"raydenlim"},"content":"* `viewattendance s/3` Displays all students’ attendance for the 3rd session.","lastModifiedDate":"2023-10-06"},{"lineNumber":280,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"raydenlim"},"content":"### 🔎Finding a Student: find","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"raydenlim"},"content":"Finds a student’s profile","lastModifiedDate":"2023-10-06"},{"lineNumber":283,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":284,"author":{"gitId":"raydenlim"},"content":"Format: `find n/STUDENT_NAME`","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":287,"author":{"gitId":"raydenlim"},"content":"* STUDENT_NAME - The name of the student you want to find.","lastModifiedDate":"2023-10-06"},{"lineNumber":288,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":289,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"raydenlim"},"content":"* `find n/John Doe` Finds and displays the profile of students with the name “John Doe”.","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"raydenlim"},"content":"* `find n/Jane Doe` Finds and displays the profile of students with the name “Jane Doe”.","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"raydenlim"},"content":"### 🥅Filtering results: filter","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"raydenlim"},"content":"Filters the results displayed on the dashboard","lastModifiedDate":"2023-10-06"},{"lineNumber":295,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":296,"author":{"gitId":"raydenlim"},"content":"Format:","lastModifiedDate":"2023-10-06"},{"lineNumber":297,"author":{"gitId":"raydenlim"},"content":"* `filter_add n/FILTER_ATTRIBUTE n/FILTER_DESCRIPTION`","lastModifiedDate":"2023-10-06"},{"lineNumber":298,"author":{"gitId":"raydenlim"},"content":"* `filter_delete n/FILTER_ATTRIBUTE n/FILTER_DESCRIPTION`","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":300,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":301,"author":{"gitId":"raydenlim"},"content":"* `FILTER_ATTRIBUTE` - The filter type filter_studentScores","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"raydenlim"},"content":"  * `filter_studentScores`","lastModifiedDate":"2023-10-06"},{"lineNumber":303,"author":{"gitId":"raydenlim"},"content":"  * `filter_studentGrades`","lastModifiedDate":"2023-10-06"},{"lineNumber":304,"author":{"gitId":"raydenlim"},"content":"* `FILTER_DESCRIPTION` - The conditions for the filter","lastModifiedDate":"2023-10-06"},{"lineNumber":305,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":306,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":307,"author":{"gitId":"raydenlim"},"content":"* `filter_add n/filter_studentGrades n/A` Sets the dashboard to display students who have an “A” grade.","lastModifiedDate":"2023-10-06"},{"lineNumber":308,"author":{"gitId":"raydenlim"},"content":"* `Filter_add n/filter_studentScores n/\u003e80` Sets the dashboard to show students with test scores above 80.","lastModifiedDate":"2023-10-06"},{"lineNumber":309,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"Originalidk"},"content":"### 📝Adding a grade to an assignment: `addgrade`","lastModifiedDate":"2023-10-13"},{"lineNumber":311,"author":{"gitId":"Originalidk"},"content":"Adds a grade to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":312,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"Originalidk"},"content":"Format: `addgrade INDEX as/ASSIGNMENT g/GRADE`","lastModifiedDate":"2023-10-19"},{"lineNumber":314,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"Originalidk"},"content":"* INDEX The index of the student.","lastModifiedDate":"2023-10-19"},{"lineNumber":317,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"Originalidk"},"content":"* GRADE The grade of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":319,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":320,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"Originalidk"},"content":"* `addgrade 1 as/Functional Expressionism g/1300` adds a grade of 1300 to student 1\u0027s Functional Expressionism assignment.","lastModifiedDate":"2023-10-19"},{"lineNumber":322,"author":{"gitId":"Originalidk"},"content":"* `addgrade 2 as/Rune Reading g/600` adds a grade of 600 to student 2\u0027s Rune Reading assignment.","lastModifiedDate":"2023-10-19"},{"lineNumber":323,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":324,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing an assignment grade: `viewgrade`","lastModifiedDate":"2023-10-06"},{"lineNumber":326,"author":{"gitId":"Originalidk"},"content":"Shows a student’s assignment grade.","lastModifiedDate":"2023-10-13"},{"lineNumber":327,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"Originalidk"},"content":"Format: `viewgrade INDEX as/ASSIGNMENT`","lastModifiedDate":"2023-10-19"},{"lineNumber":329,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"Originalidk"},"content":"* INDEX The index of the student.","lastModifiedDate":"2023-10-19"},{"lineNumber":332,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"Originalidk"},"content":"* `viewgrade 1 as/Functional Expressionism` shows student 1\u0027s Functional Expressionism grade.","lastModifiedDate":"2023-10-19"},{"lineNumber":336,"author":{"gitId":"Originalidk"},"content":"* `viewgrade 2 as/Rune Reading` shows student 2\u0027s Rune Reading grade.","lastModifiedDate":"2023-10-19"},{"lineNumber":337,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"raydenlim"},"content":"### 🛠️Editing an assignment grade: `editgrade`","lastModifiedDate":"2023-10-06"},{"lineNumber":340,"author":{"gitId":"Originalidk"},"content":"Edits a student’s assignment grade.","lastModifiedDate":"2023-10-13"},{"lineNumber":341,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"Originalidk"},"content":"Format: `editgrade INDEX as/ASSIGNMENT g/GRADE`","lastModifiedDate":"2023-10-19"},{"lineNumber":343,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"Originalidk"},"content":"* INDEX The index of the student.","lastModifiedDate":"2023-10-19"},{"lineNumber":346,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"Originalidk"},"content":"* GRADE The score of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":348,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"Originalidk"},"content":"* `editgrade 1 as/Functional Expressionism g/1200` edits the grade of student 1\u0027s Functional Expressionism assignment to 1200.","lastModifiedDate":"2023-10-19"},{"lineNumber":351,"author":{"gitId":"Originalidk"},"content":"* `editgrade 2 as/Rune Reading g/1000` edits the grade of student 2\u0027s Rune Reading assignment to 1000.","lastModifiedDate":"2023-10-19"},{"lineNumber":352,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting an assignment grade: `deletegrade`","lastModifiedDate":"2023-10-06"},{"lineNumber":355,"author":{"gitId":"Originalidk"},"content":"Deletes a student’s assignment grade.","lastModifiedDate":"2023-10-13"},{"lineNumber":356,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"Originalidk"},"content":"Format: `deletegrade INDEX as/ASSIGNMENT`","lastModifiedDate":"2023-10-19"},{"lineNumber":358,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"Originalidk"},"content":"* INDEX The index of the student.","lastModifiedDate":"2023-10-19"},{"lineNumber":361,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"Originalidk"},"content":"* `deletegrade 1 as/Functional Expressionism` deletes student 1\u0027s Functional Expressionism grade.","lastModifiedDate":"2023-10-19"},{"lineNumber":365,"author":{"gitId":"Originalidk"},"content":"* `deletegrade 2 as/Rune Reading` deletes student 2\u0027s Rune Reading grade.","lastModifiedDate":"2023-10-19"},{"lineNumber":366,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"Originalidk"},"content":"### 📝Adding a comment to an assignment: `addcomment`","lastModifiedDate":"2023-10-13"},{"lineNumber":369,"author":{"gitId":"Originalidk"},"content":"Adds a comment to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":370,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"Originalidk"},"content":"Format: `addcomment n/STUDENT_NAME a/ASSIGNMENT c/COMMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":375,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"Originalidk"},"content":"* COMMENT The comment.","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"Originalidk"},"content":"* `addcomment n/Rayson a/Functional Expressionism c/Excellent` adds the comment “Excellent” on Rayson’s Functional Expressionism assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"Originalidk"},"content":"* `addcomment n/Wesley a/Rune Reading c/Not bad` adds the comment “Not bad” on Wesley’s Rune Reading assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing a comment: `viewcomment`","lastModifiedDate":"2023-10-06"},{"lineNumber":384,"author":{"gitId":"Originalidk"},"content":"Shows the comment tagged to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":385,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"Originalidk"},"content":"Format: `viewcomment n/STUDENT_NAME a/ASSIGNMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":390,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"Originalidk"},"content":"* `viewcomment n/Rayson a/Functional Expressionism` shows the comment on Rayson’s Functional Expressionism assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"Originalidk"},"content":"* `viewcomment n/Wesley a/Rune Reading` shows the comment on Wesley’s Rune Reading assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"raydenlim"},"content":"### 🛠️Editing a comment: `editcomment`","lastModifiedDate":"2023-10-06"},{"lineNumber":398,"author":{"gitId":"Originalidk"},"content":"Edits the comment on a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":399,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"Originalidk"},"content":"Format: `editcomment n/STUDENT_NAME a/ASSIGNMENT c/COMMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":401,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":404,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"Originalidk"},"content":"* COMMENT The new comment.","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"Originalidk"},"content":"* `editcomment n/Rayson a/Functional Expressionism c/Decent` changes the comment on Rayson’s Functional Expressionism assignment to “Decent”.","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"Originalidk"},"content":"* `editcomment n/Wesley a/Rune Reading c/Great` changes the comment on Wesley’s Rune Reading assignment to “Great”.","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":411,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting a comment: `deletecomment`","lastModifiedDate":"2023-10-06"},{"lineNumber":413,"author":{"gitId":"Originalidk"},"content":"Deletes the comment tagged to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":414,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"Originalidk"},"content":"Format: `deletecomment n/STUDENT_NAME a/ASSIGNMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":419,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"Originalidk"},"content":"* `deletecomment n/Rayson a/Functional Expressionism` deletes the comment on Rayson’s Functional Expressionism assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"Originalidk"},"content":"* `deletecomment n/Wesley a/Rune Reading` deletes the comment on Wesley’s Rune Reading assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"raydenlim"},"content":"### 📆Creating a Consult: `createconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":427,"author":{"gitId":"wesho1107"},"content":"Creates a consultation into upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":428,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":429,"author":{"gitId":"wesho1107"},"content":"Format: `addconsult d/DATE t/TIME n/STUDENT_NAME n/STUDENT_NAME …`","lastModifiedDate":"2023-10-04"},{"lineNumber":430,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":431,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":432,"author":{"gitId":"wesho1107"},"content":"* DATE The date of consultation","lastModifiedDate":"2023-10-04"},{"lineNumber":433,"author":{"gitId":"wesho1107"},"content":"* TIME The time of consultation","lastModifiedDate":"2023-10-04"},{"lineNumber":434,"author":{"gitId":"wesho1107"},"content":"* STUDENT_NAME The name of the student(s)","lastModifiedDate":"2023-10-04"},{"lineNumber":435,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":437,"author":{"gitId":"wesho1107"},"content":"* `addconsult d/2023-10-30 t/12:30 n/John Doe` creates a consultation for John Doe on 2023-10-30 12:30.","lastModifiedDate":"2023-10-04"},{"lineNumber":438,"author":{"gitId":"wesho1107"},"content":"* `addconsult d/2023-09-30 t/15:30 n/John Doe n/Foo Bar n/Rayson n/Wesley` creates a consultation for John Doe, Foo Bar","lastModifiedDate":"2023-10-04"},{"lineNumber":439,"author":{"gitId":"wesho1107"},"content":"  , Rayson and Wesley on 2023-09-30 15:30.","lastModifiedDate":"2023-10-04"},{"lineNumber":440,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":441,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":442,"author":{"gitId":"raydenlim"},"content":"### 👀Showing list of consultations: `showconsults`","lastModifiedDate":"2023-10-06"},{"lineNumber":443,"author":{"gitId":"wesho1107"},"content":"Shows the list of upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":444,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":445,"author":{"gitId":"wesho1107"},"content":"Format: `showconsults`","lastModifiedDate":"2023-10-04"},{"lineNumber":446,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":447,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":448,"author":{"gitId":"wesho1107"},"content":"* `showconsults` displays a list of upcoming consultations","lastModifiedDate":"2023-10-04"},{"lineNumber":449,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing details of a consultation: `viewconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":452,"author":{"gitId":"wesho1107"},"content":"Shows the details of a consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":453,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":454,"author":{"gitId":"wesho1107"},"content":"Format: `viewconsult INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":455,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":456,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":457,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":458,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":459,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"wesho1107"},"content":"* `viewconsult 1` shows the details of the consultation (if there is a consult scheduled).","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003e2023-09-30 15:30","lastModifiedDate":"2023-10-04"},{"lineNumber":462,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eJohn Doe","lastModifiedDate":"2023-10-04"},{"lineNumber":463,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eFoo Bar","lastModifiedDate":"2023-10-04"},{"lineNumber":464,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eRayson","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eWesley","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"wesho1107"},"content":"* `viewconsult -1`shows an error message “Consultation not found” (if there is no consult scheduled).","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":468,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":469,"author":{"gitId":"raydenlim"},"content":"### 🛠️Adding students to a consultation: `addtoconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":470,"author":{"gitId":"wesho1107"},"content":"Adds student(s) into a consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":471,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":472,"author":{"gitId":"wesho1107"},"content":"Format: `addtoconsult INDEX n/STUDENT_NAME …`","lastModifiedDate":"2023-10-04"},{"lineNumber":473,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":474,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":475,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"wesho1107"},"content":"* STUDENT_NAME The name of student to be added into the consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"wesho1107"},"content":"* `addtoconsult 2 n/Foo Bar`.","lastModifiedDate":"2023-10-04"},{"lineNumber":480,"author":{"gitId":"wesho1107"},"content":"* `addtoconsult 1 n/Rayson n/Ryan Pang`.","lastModifiedDate":"2023-10-04"},{"lineNumber":481,"author":{"gitId":"wesho1107"},"content":"* `addtoconsult -1 n/Foo Bar`shows an error message “Consultation not found”.","lastModifiedDate":"2023-10-04"},{"lineNumber":482,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":484,"author":{"gitId":"raydenlim"},"content":"### ❌Remove students from a consultation: `removefromconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":485,"author":{"gitId":"wesho1107"},"content":"Removes student(s) from a consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":486,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"wesho1107"},"content":"Format: `removefromconsult INDEX n/STUDENT_NAME …`","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"wesho1107"},"content":"* STUDENT_NAME The name of student to be added into the consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":493,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"wesho1107"},"content":"* `removefromconsult 2 n/Foo Bar`.","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"wesho1107"},"content":"* `removefromconsult 1 n/NOTINCONSULT` shows an error message “Student not found”.","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting a consultation: `deleteconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":499,"author":{"gitId":"wesho1107"},"content":"Deletes the consultation specified by the index.","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":501,"author":{"gitId":"wesho1107"},"content":"Format: `deleteconsult INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":503,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":505,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":506,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":507,"author":{"gitId":"wesho1107"},"content":"* `deleteconsult 1` deletes the first consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":508,"author":{"gitId":"wesho1107"},"content":"* `deleteconsult -1` shows an error message “Consultation not found”.","lastModifiedDate":"2023-10-04"},{"lineNumber":509,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":510,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":511,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"raydenlim"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous F.A.K.E.J.A.R.V.I.S. home folder.","lastModifiedDate":"2023-10-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":524,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":526,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":530,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Respirayson":77,"raydenlim":82,"Originalidk":110,"-":191,"wesho1107":76}},{"path":"docs/team/ldinghan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"title: \"Ding Han\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"### Project: F.A.K.E.J.A.R.V.I.S.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"F.A.K.E.J.A.R.V.I.S. is a project to help CS1101S Avengers manage their time and responsibilities more effectively.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"* **New Features**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"* **Code contributed**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"  * User Guide: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"  * Developer Guide: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ldinghan":32}},{"path":"docs/team/originalidk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"title: \"Ryan Pang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"### Project: F.A.K.E.J.A.R.V.I.S.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"F.A.K.E.J.A.R.V.I.S. is a project to help CS1101S Avengers manage their time and responsibilities more effectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"* **New Features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"* **Code contributed**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"  * User Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"  * Developer Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Originalidk":32}},{"path":"docs/team/raydenlim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"layout: default.md","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"title: \"Jian Song (rayden)\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"### Name: Rayden","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"**Bio:** \u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"* I am interested in cybersecurity","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"* I believe that laughter is the best medicine","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"### **Joke of the day**\u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"**QNS :** Why did the programmer constantly run into bugs? \u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"**ANS :** Because he used light mode, and bugs are attracted to the light.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"### Project: FAKEJARVIS","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"![Logo](images/fakejarvis.png)","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"FAKEJARVIS is a brownfield project built on Address Book 3 (AB3), with the intention to help CS1101S Avengers manage their Teaching Assistant (TA) duties.","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"* **New Feature 1**:","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    * Highlights:","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"    * Credits:","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"* **New Feature 2**:","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"* **Code contributed**: [RepoSense link](https://tinyurl.com/CS2103T15raydenlim)","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"* **Project management**:","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    * User Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"* **Community**:","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"* **Tools**:","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"raydenlim":44}},{"path":"docs/team/respirayson.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"title: \"Rayson Yeap\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"### Project: FAKEJARVIS","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"FAKEJARVIS is a project to help CS1101S Avengers manage their time and job more effectively.","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"* **Code contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003drespirayson\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    * User Guide: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    * Developer Guide: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":32}},{"path":"docs/team/wesho1107.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"title: \"Ho Jia Cheng\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"### Project: F.A.K.E.J.A.R.V.I.S.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"F.A.K.E.J.A.R.V.I.S. is a project to help CS1101S Avengers manage their time and responsibilities more effectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"* **New Features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"* **Code contributed**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"  * User Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"  * Developer Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"wesho1107":32}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"  \"people\": [ {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Originalidk":1,"-":114}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"Originalidk"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ people.\u003cbr\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"Originalidk"},"content":"     FYI, The \u0027filtered list\u0027 is the list of people resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the people so that the user can see the edited person along with all other people. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"Originalidk"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of people is being tracked.","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Originalidk"},"content":"        people.addAll(","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Originalidk":4,"-":307}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.ConsultationListStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.GradedTestListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.JsonConsultationListStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.JsonGradedTestListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"import seedu.address.storage.JsonSessionListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"import seedu.address.storage.SessionListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.TaskListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"        SessionListStorage sessionListStorage \u003d new JsonSessionListStorage(userPrefs.getSessionListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        ConsultationListStorage consultationListStorage \u003d new JsonConsultationListStorage(userPrefs","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"                .getConsultationListFilePath());","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        GradedTestListStorage gradedTestListStorage \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"                new JsonGradedTestListStorage(userPrefs.getGradedTestListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage,","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"                sessionListStorage, consultationListStorage, gradedTestListStorage);","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"        logger.info(\"Using task list file : \" + storage.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"        logger.info(\"Using consultation list file : \" + storage.getConsultationListFilePath());","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"        logger.info(\"Using session list file : \" + storage.getSessionListFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        ReadOnlyTaskList initialTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"        Optional\u003cReadOnlyGradedTestList\u003e gradedTestListOptional;","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"        ReadOnlyGradedTestList initialGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"        Optional\u003cReadOnlyConsultationList\u003e consultationListOptional;","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"        ReadOnlyConsultationList initialConsultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"        Optional\u003cReadOnlySessionList\u003e sessionListOptional;","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"        ReadOnlySessionList initialSessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"            if (!taskListOptional.isPresent()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"                logger.info(\"Creating a new data file \" + storage.getTaskListFilePath()","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"                        + \" populated with a sample TaskList.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"            initialTaskList \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"            logger.warning(\"Data file at \" + storage.getTaskListFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"                    + \" Will be starting with an empty TaskList.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"            initialTaskList \u003d new TaskListBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"raydenlim"},"content":"            gradedTestListOptional \u003d storage.readGradedTestList();","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"            if (!gradedTestListOptional.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"                logger.info(\"Creating a new data file \" + storage.getTaskListFilePath()","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"                        + \" populated with a sample GradedTest.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"raydenlim"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"            initialGradedTestList \u003d gradedTestListOptional.orElseGet(SampleDataUtil::getSampleGradedTestList);","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"raydenlim"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"raydenlim"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"raydenlim"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"raydenlim"},"content":"            initialGradedTestList \u003d new GradedTestListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"            consultationListOptional \u003d storage.readConsultationList();","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"            if (!consultationListOptional.isPresent()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"                logger.info(\"Creating a new data file \" + storage.getConsultationListFilePath()","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"                        + \" populated with a sample ConsultationList.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"raydenlim"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"            initialConsultationList \u003d consultationListOptional.orElseGet(SampleDataUtil::getSampleConsultationList);","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"raydenlim"},"content":"            logger.warning(\"Data file at \" + storage.getConsultationListFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"                    + \" Will be starting with an empty ConsultationList.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"            initialConsultationList \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"ldinghan"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"ldinghan"},"content":"            sessionListOptional \u003d storage.readSessionList();","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"ldinghan"},"content":"            if (!sessionListOptional.isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"ldinghan"},"content":"                logger.info(\"Creating a new data file \" + storage.getSessionListFilePath()","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"ldinghan"},"content":"                        + \" populated with a sample SessionList.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"ldinghan"},"content":"            initialSessionList \u003d sessionListOptional.orElseGet(SampleDataUtil::getSampleSessionList);","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"ldinghan"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"ldinghan"},"content":"            logger.warning(\"Data file at \" + storage.getSessionListFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"ldinghan"},"content":"                    + \" Will be starting with an empty SessionList.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"ldinghan"},"content":"            initialSessionList \u003d new SessionListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"        return new ModelManager(initialData, userPrefs, initialTaskList, initialSessionList, initialConsultationList,","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"raydenlim"},"content":"                initialGradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ldinghan":22,"Respirayson":15,"raydenlim":55,"-":187}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    /** Returns an unmodifiable view of the filtered list of consultations */","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    ObservableList\u003cConsultation\u003e getFilteredConsultationList();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"    /** Returns an unmodifiable view of the filtered list of sessions */","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    ObservableList\u003cSession\u003e getFilteredSessionList();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ldinghan":4,"Respirayson":4,"-":50,"wesho1107":5}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2023-09-29"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"            storage.saveConsultationList(model.getConsultationList());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"    public ObservableList\u003cConsultation\u003e getFilteredConsultationList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"        return model.getFilteredConsultationList();","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"        return model.getFilteredSessionList();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ldinghan":6,"Respirayson":7,"-":88,"wesho1107":7}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_INVALID_DATE_TIME \u003d \"The date or time provided is invalid\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    public static final String MESSAGE_ASSIGNMENT_GRADED \u003d \"The assignment has already been graded\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    public static final String MESSAGE_ASSIGNMENT_UNGRADED \u003d \"The assignment has not been graded\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        builder.append(\"; Graded Tests: \");","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        person.getGradedTest().forEach(gradedTest -\u003e builder.append(person.getGradedTest()).append(\", \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"     * Formats the {@code consultation} for display to the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"    public static String format(Consultation consultation) {","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"        builder.append(\"; Date: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"                .append(consultation.getDate())","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"                .append(consultation.getTime())","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"                .append(\"; Students: \");","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"        consultation.getStudents().forEach(student -\u003e builder.append(student.getName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"     * Formats the {@code session} for display to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"    public static String format(Session session) {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"        builder.append(\"Session: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"                .append(session.getSessionNumber())","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"                .append(\";\");","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"        session.getStudents().forEach(builder::append);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"     * Formats the {@code task} for display to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"    public static String format(Task task) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        return task.getName()","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"                + \"; Description: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"                + task.getDescription()","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"                + \"; isDone: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"                + task.getIsDone()","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"                + \"; Priority: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"                + task.getPriority();","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"     * Formats the {@code gradedTest} for display to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    public static String format(GradedTest gradedTest) {","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"        builder.append(\"Graded Test:\")","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"                .append(\"; Reading Assessment 1: \").append(gradedTest.getRA1())","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"                .append(\"; Reading Assessment 2: \").append(gradedTest.getRA2())","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"                .append(\"; MidTerms: \").append(gradedTest.getMidTerms())","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"                .append(\"; Final: \").append(gradedTest.getFinals())","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"                .append(\"; Practical Exam: \").append(gradedTest.getPracticalExam());","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ldinghan":13,"Respirayson":14,"raydenlim":33,"Originalidk":2,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"            + PREFIX_GRADED_TEST + \"Reading Assessment 1: 0\" + \"Reading Assessment 2: 0\"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"                    + \"MidTerms: 0\" + \"Finals: 0\" + \"Practical Exam: 0\";","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"raydenlim":4,"-":83}},{"path":"src/main/java/seedu/address/logic/commands/AddGradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Assignment;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentMap;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Grade;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":" * Adds a grade to a person\u0027s assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"public class AddGradeCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    public static final String COMMAND_WORD \u003d \"addgrade\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a grade to a person’s assignment identified \"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            + PREFIX_ASSIGNMENT + \"ASSIGNMENT \"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"            + PREFIX_GRADE + \"GRADE \";","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added grade to assignment: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENT \u003d \"This assignment has already been graded\";","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"    private final AssignmentName assignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"    private final String gradeString;","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"     * Creates an AddGradeCommand to add the specified grade to a person\u0027s assignment","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"    public AddGradeCommand(Index index, AssignmentName assignmentName, String grade) {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"        this.gradeString \u003d grade;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"        if (!AssignmentName.isValidName(this.assignmentName.toString())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"            throw new CommandException(AssignmentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"        Assignment assignmentToGrade \u003d personToEdit.getAssignment(this.assignmentName);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"        Grade newGrade \u003d new Grade(this.gradeString, assignmentToGrade.maxGrade());","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        Person editedPerson \u003d createGradedPerson(personToEdit, newGrade);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.assignmentName));","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"     * Creates a new Person with the newly graded assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"     * @param reference The person to be graded.","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"     * @param newGrade The new grade to be given to the person\u0027s assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"     * @return New person with a graded assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"    public Person createGradedPerson(Person reference, Grade newGrade) {","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"        Name name \u003d reference.getName();","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"        Phone phone \u003d reference.getPhone();","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"        Email email \u003d reference.getEmail();","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"        Address address \u003d reference.getAddress();","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"        Set\u003cTag\u003e tags \u003d reference.getTags();","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"        Set\u003cGradedTest\u003e gradedTest \u003d reference.getGradedTest();","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"        AssignmentMap updatedAssignmentMap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"            reference.getAllAssignments().createUpdatedMap(this.assignmentName, newGrade);","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"        return new Person(name, phone, email, address, tags, updatedAssignmentMap, gradedTest);","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Originalidk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"        if (!(other instanceof AddGradeCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Originalidk"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand otherAddGradeCommand \u003d (AddGradeCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"        boolean sameAssignmentName \u003d this.assignmentName.equals(otherAddGradeCommand.assignmentName);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"        boolean sameGrade \u003d this.gradeString.equals(otherAddGradeCommand.gradeString);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"        boolean samePersonIndex \u003d this.index.equals(otherAddGradeCommand.index);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Originalidk"},"content":"        return sameAssignmentName \u0026\u0026 sameGrade \u0026\u0026 samePersonIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"raydenlim":3,"Originalidk":118}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_PRIORITY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" * Adds a task to the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            + \": Adds a new task with the specified description.\\n\"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_NAME + \"NAME \"","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"            + \"[\" + PREFIX_TASK_DESCRIPTION + \"DESCRIPTION]\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"            + \"[\" + PREFIX_TASK_PRIORITY + \"PRIORITY]\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_NAME + \"Do laundry \"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_DESCRIPTION + \"Wash the clothes and pants in basket\"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_PRIORITY + \"medium\";","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task has been added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    private final Task task;","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        if (model.hasTask(task)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        model.addTask(task);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(task)));","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        return task.equals(e.task);","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":74}},{"path":"src/main/java/seedu/address/logic/commands/CompleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" * Marks a task identified using it\u0027s displayed index from the task list as completed.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"public class CompleteTaskCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public static final String COMMAND_WORD \u003d \"completetask\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"            + \": Marks the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public CompleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new Task(taskToMark.getName(), taskToMark.getDescription(),","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"                true, taskToMark.getPriority());","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        model.setTask(taskToMark, editedTask);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, Messages.format(taskToMark)));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof CompleteTaskCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand otherMarkCommand \u003d (CompleteTaskCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        return targetIndex.equals(otherMarkCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":76}},{"path":"src/main/java/seedu/address/logic/commands/CreateConsultCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":" * Creates a consultation to the consultation list.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"public class CreateConsultCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    public static final String COMMAND_WORD \u003d \"createconsult\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a consultation with the student(s). \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]...\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"            + PREFIX_DATE + \"10/10/2023 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"            + PREFIX_TIME + \"15:00 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"            + PREFIX_NAME + \"Foo Bar\";","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New consultation added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    private Set\u003cName\u003e names;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    private Consultation consultationToAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     * Creates an CreateConsultCommand to with the specified {@code date, time, names}","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"    public CreateConsultCommand(LocalDate date, LocalTime time, Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        requireAllNonNull(date, time, names);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        Set\u003cPerson\u003e studentsToAdd \u003d names.stream().map(model::getMatchingStudentName).collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        this.consultationToAdd \u003d new Consultation(date, time, studentsToAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"        model.addConsultation(this.consultationToAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(this.consultationToAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"        // instanceof handles null case","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"        if (!(other instanceof CreateConsultCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"        CreateConsultCommand otherCreateConsultCommand \u003d (CreateConsultCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"        return this.date.equals(otherCreateConsultCommand.date)","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"                \u0026\u0026 this.time.equals(otherCreateConsultCommand.time)","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"                \u0026\u0026 this.names.equals(otherCreateConsultCommand.names);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"                .add(\"toAdd\", consultationToAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wesho1107":86}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" * Deletes a task identified using it\u0027s displayed index from the task list.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, Messages.format(taskToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof DeleteTaskCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand otherDeleteCommand \u003d (DeleteTaskCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.Finals;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.MidTerms;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.PracticalExam;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.ReadingAssessment;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"            + \"[\" + PREFIX_GRADED_TEST + \"GRADED TEST]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"        Set\u003cGradedTest\u003e updatedGrades \u003d editPersonDescriptor.getGradedTests().orElse(personToEdit.getGradedTest());","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedGrades);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"        private ReadingAssessment ra1;","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"        private ReadingAssessment ra2;","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"        private MidTerms midTerms;","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"raydenlim"},"content":"        private Finals finals;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"        private PracticalExam pe;","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"raydenlim"},"content":"        private Set\u003cGradedTest\u003e gradedTests;","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"            setGradedTest(toCopy.gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"raydenlim"},"content":"        public void setReadingAssessment1(ReadingAssessment ra1) {","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"raydenlim"},"content":"            this.ra1 \u003d ra1;","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"raydenlim"},"content":"        public void setReadingAssessment2(ReadingAssessment ra2) {","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"raydenlim"},"content":"            this.ra2 \u003d ra2;","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"raydenlim"},"content":"        public void setMidTerms(MidTerms midTerms) {","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"raydenlim"},"content":"            this.midTerms \u003d midTerms;","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"raydenlim"},"content":"        public void setFinals(Finals finals) {","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"raydenlim"},"content":"            this.finals \u003d finals;","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"raydenlim"},"content":"        public void setPracticalExam(PracticalExam pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"raydenlim"},"content":"            this.pe \u003d pe;","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"raydenlim"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"raydenlim"},"content":"         * Sets {@code gradedTests} to this object\u0027s {@code gradedTests}.","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"raydenlim"},"content":"         * A defensive copy of {@code gradedTests} is used internally.","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"raydenlim"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"raydenlim"},"content":"        public void setGradedTest(Set\u003cGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"raydenlim"},"content":"            this.gradedTests \u003d (gradedTests !\u003d null) ? new HashSet\u003c\u003e(gradedTests) : null;","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"raydenlim"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"raydenlim"},"content":"         * Returns an unmodifiable gradedTest set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"raydenlim"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"raydenlim"},"content":"         * Returns {@code Optional#empty()} if {@code gradedTest} is null.","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"raydenlim"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"raydenlim"},"content":"        public Optional\u003cSet\u003cGradedTest\u003e\u003e getGradedTests() {","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"raydenlim"},"content":"            return (gradedTests !\u003d null) ? Optional.of(Collections.unmodifiableSet(gradedTests)) : Optional.empty();","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":279,"author":{"gitId":"raydenlim"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"raydenlim"},"content":"                    \u0026\u0026 Objects.equals(gradedTests, otherEditPersonDescriptor.gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"raydenlim"},"content":"                    .add(\"gradedTests\", gradedTests)","lastModifiedDate":"2023-10-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"raydenlim":56,"-":239}},{"path":"src/main/java/seedu/address/logic/commands/IncompleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" * Marks a task identified using it\u0027s displayed index from the task list as incomplete.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"public class IncompleteTaskCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public static final String COMMAND_WORD \u003d \"incompletetask\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"            + \": Unmarks the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Unmarked Task: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public IncompleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new Task(taskToMark.getName(), taskToMark.getDescription(),","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"                false, taskToMark.getPriority());","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        model.setTask(taskToMark, editedTask);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, Messages.format(taskToMark)));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof IncompleteTaskCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand otherMarkCommand \u003d (IncompleteTaskCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        return targetIndex.equals(otherMarkCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":76}},{"path":"src/main/java/seedu/address/logic/commands/session/CreateSessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.logic.commands.session;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionStudents;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":" * Command to create a session with the specified student(s).","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"public class CreateSessionCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    public static final String COMMAND_WORD \u003d \"createsession\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a session with the student(s). \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"            + PREFIX_SESSION + \"SESSION_NUMBER \"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"            + PREFIX_NAME + \"Foo Bar\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New session added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    private SessionNumber sessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    private Name name;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    private Set\u003cName\u003e names;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    private Session sessionToAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     * Creates a new CreateSessionCommand with a single student to be added to the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to create.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"     * @param name The name of the student to add to the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    public CreateSessionCommand(SessionNumber sessionNumber, Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        requireAllNonNull(sessionNumber, name);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"     * Creates a new CreateSessionCommand with multiple students to be added to the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to create.","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"     * @param names A set of names of the students to add to the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"    public CreateSessionCommand(SessionNumber sessionNumber, Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"        requireAllNonNull(sessionNumber, names);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"     * Executes the CreateSessionCommand to create a new session in the model.","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"     * @param model The model to execute the command on.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"     * @return A CommandResult containing the success message.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"     * @throws CommandException If an error occurs during execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"        this.sessionToAdd \u003d new Session(sessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"            // Get the student to add to the session","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"            Person studentToAdd \u003d model.getMatchingStudentName(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"            // Create the session to add","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"            this.sessionToAdd \u003d new Session(sessionNumber, studentToAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"        if (names !\u003d null \u0026\u0026 !names.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"            SessionStudents studentsToAdd \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"            for (Name name : names) {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"                Person studentToAdd \u003d model.getMatchingStudentName(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"                studentsToAdd.add(studentToAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"            this.sessionToAdd \u003d new Session(sessionNumber, studentsToAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"        // Add the session to the model","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"        model.addSession(this.sessionToAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"        // Return a success message","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(this.sessionToAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"     * Checks if this CreateSessionCommand is equal to another object.","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"        if (!(other instanceof CreateSessionCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand otherCreateSessionCommand \u003d (CreateSessionCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"        if (names !\u003d null \u0026\u0026 otherCreateSessionCommand.names !\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"            // Compare when both \u0027names\u0027 are not null","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"ldinghan"},"content":"            return this.names.equals(otherCreateSessionCommand.names)","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"ldinghan"},"content":"                    \u0026\u0026 this.sessionNumber.equals(otherCreateSessionCommand.sessionNumber);","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"ldinghan"},"content":"        } else if (names \u003d\u003d null \u0026\u0026 otherCreateSessionCommand.names \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"ldinghan"},"content":"            // Compare when both \u0027names\u0027 are null","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"ldinghan"},"content":"            return this.name \u003d\u003d null ? otherCreateSessionCommand.name \u003d\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"ldinghan"},"content":"                    : this.name.equals(otherCreateSessionCommand.name)","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"ldinghan"},"content":"                    \u0026\u0026 this.sessionNumber.equals(otherCreateSessionCommand.sessionNumber);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"ldinghan"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"ldinghan"},"content":"            // \u0027names\u0027 is null in one of the objects","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"ldinghan"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"ldinghan"},"content":"     * Returns a string representation of the CreateSessionCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ldinghan"},"content":"     * @return A string representation of the command.","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ldinghan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ldinghan"},"content":"                .add(\"toCreate\", sessionToAdd)","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"ldinghan"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":148}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        Set\u003cSession\u003e sessionList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        Set\u003cGradedTest\u003e gradedTestList \u003d ParserUtil.parseGradedTests(argMultimap.getAllValues(PREFIX_GRADED_TEST));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, gradedTestList);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ldinghan":3,"raydenlim":6,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddGradeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.commands.AddGradeCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":" * Parses input arguments and creates a new AddGradeCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"public class AddGradeCommandParser implements Parser\u003cAddGradeCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGradeCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"     * and returns an AddGradeCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    public AddGradeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ASSIGNMENT, PREFIX_GRADE);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT, PREFIX_GRADE)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"        Index index;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGradeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ASSIGNMENT, PREFIX_GRADE);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d ParserUtil.parseAssignmentName(argMultimap.getValue(PREFIX_ASSIGNMENT).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        String actualGrade \u003d argMultimap.getValue(PREFIX_GRADE).get();","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        return new AddGradeCommand(index, assignmentName, actualGrade);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":54}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_PRIORITY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskPriority;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_NAME, PREFIX_TASK_DESCRIPTION, PREFIX_TASK_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TASK_NAME, PREFIX_TASK_DESCRIPTION, PREFIX_TASK_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_TASK_NAME).get());","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        TaskDescription taskDescription \u003d ParserUtil.parseTaskDescription(argMultimap","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"                .getValue(PREFIX_TASK_DESCRIPTION).orElse(\"\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        TaskPriority priority \u003d ParserUtil.parseTaskPriority(argMultimap","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"                .getValue(PREFIX_TASK_PRIORITY).orElse(\"LOW\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        Task task \u003d new Task(name, taskDescription, priority);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.commands.AddGradeCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.CompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import seedu.address.logic.commands.CreateConsultCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.IncompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.session.CreateSessionCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"        // TASKS","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"        case CompleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"            return new CompleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"        case IncompleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"            return new IncompleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"        case CreateConsultCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"            return new CreateConsultCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"        case CreateSessionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"            return new CreateSessionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"        case AddGradeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"            return new AddGradeCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ldinghan":4,"Respirayson":17,"raydenlim":5,"Originalidk":4,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public static final Prefix PREFIX_GRADED_TEST \u003d new Prefix(\"gt/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"    public static final Prefix PREFIX_READING_ASSESSMENT \u003d new Prefix(\"gt/ra/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"    public static final Prefix PREFIX_MIDTERMS \u003d new Prefix(\"gt/m/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    public static final Prefix PREFIX_FINALS \u003d new Prefix(\"gt/f/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    public static final Prefix PREFIX_PRACTICAL_EXAM \u003d new Prefix(\"gt/pe/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    public static final Prefix PREFIX_ASSIGNMENT \u003d new Prefix(\"as/\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"tt/\");","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    public static final Prefix PREFIX_SESSION \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    public static final Prefix PREFIX_TASK_NAME \u003d new Prefix(\"tn/\");","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public static final Prefix PREFIX_TASK_DESCRIPTION \u003d new Prefix(\"td/\");","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public static final Prefix PREFIX_TASK_PRIORITY \u003d new Prefix(\"tp/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ldinghan":1,"Respirayson":3,"raydenlim":7,"Originalidk":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CompleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.CompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Parses input arguments and creates a new CompleteTaskCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class CompleteTaskCommandParser implements Parser\u003cCompleteTaskCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Parses the given {@code String} of arguments in the context of the CompleteTaskCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * and returns a CompleteTaskCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public CompleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            return new CompleteTaskCommand(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CompleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":29}},{"path":"src/main/java/seedu/address/logic/parser/CreateConsultCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.commands.CreateConsultCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":" * Parses input arguments and creates a new CreateConsultationCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"public class CreateConsultCommandParser implements Parser\u003cCreateConsultCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     * Parses the given `args` string and returns a CreateConsultCommand object if the input is valid.","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     * @param args The input arguments to be parsed.","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     * @return A CreateConsultCommand object.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * @throws ParseException If the input arguments are not in the correct format or if parsing fails.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    public CreateConsultCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIME, PREFIX_NAME);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_TIME, PREFIX_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateConsultCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        Set\u003cName\u003e names \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        return new CreateConsultCommand(date, time, names);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"     * Checks if the specified prefixes are present in the given ArgumentMultimap.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"     * @param argumentMultimap The ArgumentMultimap to check for prefix presence.","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"     * @param prefixes The prefixes to be checked.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"     * @return `true` if all specified prefixes are present, `false` otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wesho1107":57}},{"path":"src/main/java/seedu/address/logic/parser/CreateSessionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.session.CreateSessionCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":" * Parses input arguments and creates a new CreateSessionCommand object.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"public class CreateSessionCommandParser implements Parser\u003cCreateSessionCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"     * Parses the given `args` string and returns a CreateSessionCommand object if the input is valid.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"     * @param args The input arguments to be parsed.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"     * @return A CreateSessionCommand object.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"     * @throws ParseException If the input arguments are not in the correct format or if parsing fails.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    public CreateSessionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SESSION, PREFIX_NAME);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SESSION, PREFIX_NAME)","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateSessionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_SESSION);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        SessionNumber sessionNumber \u003d ParserUtil.parseSessionNumber(argMultimap.getValue(PREFIX_SESSION).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        return new CreateSessionCommand(sessionNumber, name);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     * Checks if the specified prefixes are present in the given ArgumentMultimap.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"     * @param argumentMultimap The ArgumentMultimap to check for prefix presence.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"     * @param prefixes The prefixes to be checked.","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"     * @return `true` if all specified prefixes are present, `false` otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":53}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"        parseGradedTestForEdit(argMultimap.getAllValues(PREFIX_GRADED_TEST))","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"                .ifPresent(editPersonDescriptor::setGradedTest);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"     * Parses {@code Collection\u003cString\u003e gradedTest} into a {@code Set\u003cGradedTest\u003e}","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"     * if {@code gradedTestIndv} is non-empty.","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"     * If {@code gradedTestIndv} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"     * {@code Set\u003cGradedTest\u003e} containing zero gradedTestIndv.","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"    private Optional\u003cSet\u003cGradedTest\u003e\u003e parseGradedTestForEdit(Collection\u003cString\u003e gradedTestIndv) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"        assert gradedTestIndv !\u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"        if (gradedTestIndv.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"        Collection\u003cString\u003e gradedTestIndvSet \u003d gradedTestIndv.size() \u003d\u003d 1","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 gradedTestIndv.contains(\"\") ? Collections.emptySet() : gradedTestIndv;","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"        return Optional.of(ParserUtil.parseGradedTests(gradedTestIndvSet));","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"raydenlim":23,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/IncompleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.IncompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Parses input arguments and creates a new IncompleteTaskCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class IncompleteTaskCommandParser implements Parser\u003cIncompleteTaskCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Parses the given {@code String} of arguments in the context of the IncompleteTaskCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * and returns a IncompleteTaskCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public IncompleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            return new IncompleteTaskCommand(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, IncompleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.Finals;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.MidTerms;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.PracticalExam;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.ReadingAssessment;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskPriority;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date is needs to be in the format dd/MM/yyyy.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"Time is needs to be in the format HH:mm.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cName\u003e}.","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        for (String studentName : names) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"            if (!Name.isValidName(studentName)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"                throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"            nameSet.add(parseName(studentName));","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"        return nameSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"raydenlim"},"content":"     * Parses {@code String date} into an {@code LocalDate} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"     * trimmed.","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"            return LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"raydenlim"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"raydenlim"},"content":"     * Parses {@code String time} into an {@code LocalTime} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"raydenlim"},"content":"     * trimmed.","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"    public static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"raydenlim"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"raydenlim"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"raydenlim"},"content":"            return LocalTime.parse(trimmedTime, formatter);","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"raydenlim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"raydenlim"},"content":"            throw new ParseException(MESSAGE_INVALID_TIME);","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"ldinghan"},"content":"     * Parses the input session number as a string and returns it as an integer.","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to be parsed.","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"ldinghan"},"content":"     * @return The parsed session number as an integer.","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"ldinghan"},"content":"     * @throws NumberFormatException If the session number is not a valid integer.","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"ldinghan"},"content":"    public static SessionNumber parseSessionNumber(String sessionNumber) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(sessionNumber);","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"ldinghan"},"content":"        String trimmedSessionNumber \u003d sessionNumber.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"ldinghan"},"content":"        if (!SessionNumber.isValidSessionNumber(trimmedSessionNumber)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"ldinghan"},"content":"            throw new ParseException(SessionNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"ldinghan"},"content":"        return new SessionNumber(trimmedSessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":203,"author":{"gitId":"Respirayson"},"content":"     * Parses a {@code String taskName} into a {@code TaskName}.","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"Respirayson"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-27"},{"lineNumber":205,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":206,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-09-27"},{"lineNumber":207,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":208,"author":{"gitId":"Respirayson"},"content":"    public static TaskName parseTaskName(String name) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":209,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-09-27"},{"lineNumber":210,"author":{"gitId":"Respirayson"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":211,"author":{"gitId":"Respirayson"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":212,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":214,"author":{"gitId":"Respirayson"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2023-09-27"},{"lineNumber":215,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":216,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":217,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":218,"author":{"gitId":"Respirayson"},"content":"     * Parses a {@code String taskDescription} into a {@code TaskDescription}.","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"Respirayson"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-27"},{"lineNumber":220,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":221,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-09-27"},{"lineNumber":222,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":223,"author":{"gitId":"Respirayson"},"content":"    public static TaskDescription parseTaskDescription(String name) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":224,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-09-27"},{"lineNumber":225,"author":{"gitId":"Respirayson"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":226,"author":{"gitId":"Respirayson"},"content":"        if (!TaskDescription.isValidDescription(trimmedName)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":227,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":228,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":229,"author":{"gitId":"Respirayson"},"content":"        return new TaskDescription(trimmedName);","lastModifiedDate":"2023-09-27"},{"lineNumber":230,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":231,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"raydenlim"},"content":"     * Parses a {@code String gradedTest} into a {@code GradedTest}.","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"raydenlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"raydenlim"},"content":"     * @throws ParseException if the given {@code gradedTest} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"raydenlim"},"content":"    public static GradedTest parseGradedTest(String gradedTest) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTest);","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"raydenlim"},"content":"        String trimmedGradedTest \u003d gradedTest.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"raydenlim"},"content":"            String[] components \u003d trimmedGradedTest.split(\"\\\\|\");","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"raydenlim"},"content":"            if (components.length !\u003d 5) {","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"raydenlim"},"content":"                throw new ParseException(\"Invalid GradedTest format. Expected 5 components.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"raydenlim"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"raydenlim"},"content":"            String ra1Score \u003d components[0].replaceAll(\"Reading Assessment 1:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"raydenlim"},"content":"            String ra2Score \u003d components[1].replaceAll(\"Reading Assessment 2:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":251,"author":{"gitId":"raydenlim"},"content":"            String midTermsScore \u003d components[2].replaceAll(\"MidTerms:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":252,"author":{"gitId":"raydenlim"},"content":"            String finalsScore \u003d components[3].replaceAll(\"Finals:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":253,"author":{"gitId":"raydenlim"},"content":"            String peScore \u003d components[4].replaceAll(\"Practical Exam:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":254,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":255,"author":{"gitId":"raydenlim"},"content":"            ReadingAssessment readingAssessment1 \u003d new ReadingAssessment(ra1Score);","lastModifiedDate":"2023-10-19"},{"lineNumber":256,"author":{"gitId":"raydenlim"},"content":"            ReadingAssessment readingAssessment2 \u003d new ReadingAssessment(ra2Score);","lastModifiedDate":"2023-10-19"},{"lineNumber":257,"author":{"gitId":"raydenlim"},"content":"            MidTerms midTerms \u003d new MidTerms(midTermsScore);","lastModifiedDate":"2023-10-19"},{"lineNumber":258,"author":{"gitId":"raydenlim"},"content":"            Finals finals \u003d new Finals(finalsScore);","lastModifiedDate":"2023-10-19"},{"lineNumber":259,"author":{"gitId":"raydenlim"},"content":"            PracticalExam practicalExam \u003d new PracticalExam(peScore);","lastModifiedDate":"2023-10-19"},{"lineNumber":260,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"raydenlim"},"content":"            return new GradedTest(readingAssessment1, readingAssessment2, midTerms, finals, practicalExam);","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"raydenlim"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":263,"author":{"gitId":"raydenlim"},"content":"            if (!GradedTest.isValidGradeTestName(trimmedGradedTest)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":264,"author":{"gitId":"raydenlim"},"content":"                throw new ParseException(GradedTest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":265,"author":{"gitId":"raydenlim"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":266,"author":{"gitId":"raydenlim"},"content":"            return new GradedTest(trimmedGradedTest);","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"raydenlim"},"content":"     * Parses {@code Collection\u003cString\u003e gradedTest} into a {@code Set\u003cGradedTest\u003e}.","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"raydenlim"},"content":"    public static Set\u003cGradedTest\u003e parseGradedTests(Collection\u003cString\u003e gradedTests) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"raydenlim"},"content":"        final Set\u003cGradedTest\u003e gradedTestSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"raydenlim"},"content":"        for (String gradedTestName : gradedTests) {","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"raydenlim"},"content":"            gradedTestSet.add(parseGradedTest(gradedTestName));","lastModifiedDate":"2023-10-13"},{"lineNumber":278,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"raydenlim"},"content":"        return gradedTestSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":281,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"raydenlim"},"content":"     * Parses a {@code String readingAssessment} into a {@code readingAssessment}.","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"raydenlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"raydenlim"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"raydenlim"},"content":"    public static ReadingAssessment parseReadingAssessment(String name) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"raydenlim"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"raydenlim"},"content":"        if (!ReadingAssessment.isValidRaResult(trimmedName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"raydenlim"},"content":"            throw new ParseException(ReadingAssessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"raydenlim"},"content":"        return new ReadingAssessment(trimmedName);","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"raydenlim"},"content":"     * Parses a {@code String readingAssessment} into a {@code readingAssessment}.","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"raydenlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":301,"author":{"gitId":"raydenlim"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"raydenlim"},"content":"    public static MidTerms parseMidTerms(String name) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":305,"author":{"gitId":"raydenlim"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"raydenlim"},"content":"        if (!MidTerms.isValidMidTermResult(trimmedName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"raydenlim"},"content":"            throw new ParseException(MidTerms.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"raydenlim"},"content":"        return new MidTerms(trimmedName);","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":313,"author":{"gitId":"raydenlim"},"content":"     * Parses a {@code String finals} into a {@code finals}.","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"raydenlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"raydenlim"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"raydenlim"},"content":"    public static Finals parseFinals(String name) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"raydenlim"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"raydenlim"},"content":"        if (!Finals.isValidFinalsResult(trimmedName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"raydenlim"},"content":"            throw new ParseException(Finals.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"raydenlim"},"content":"        return new Finals(trimmedName);","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":327,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"raydenlim"},"content":"     * Parses a {@code String practicalExam} into a {@code practicalExam}.","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"raydenlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":331,"author":{"gitId":"raydenlim"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":332,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":333,"author":{"gitId":"raydenlim"},"content":"    public static PracticalExam parsePracticalExam(String name) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"raydenlim"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"raydenlim"},"content":"        if (!PracticalExam.isValidPeResult(trimmedName)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":337,"author":{"gitId":"raydenlim"},"content":"            throw new ParseException(PracticalExam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":338,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":339,"author":{"gitId":"raydenlim"},"content":"        return new PracticalExam(trimmedName);","lastModifiedDate":"2023-10-18"},{"lineNumber":340,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":341,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":342,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":343,"author":{"gitId":"Respirayson"},"content":"     * Parses a {@code String priority} into a {@code TaskPriority}.","lastModifiedDate":"2023-10-18"},{"lineNumber":344,"author":{"gitId":"Respirayson"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":345,"author":{"gitId":"Respirayson"},"content":"     * String will be uppercase.","lastModifiedDate":"2023-10-18"},{"lineNumber":346,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":347,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":348,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"Respirayson"},"content":"    public static TaskPriority parseTaskPriority(String name) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":350,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":351,"author":{"gitId":"Respirayson"},"content":"        String trimmedName \u003d name.trim().toUpperCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":352,"author":{"gitId":"Respirayson"},"content":"        for (TaskPriority priority : TaskPriority.values()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":353,"author":{"gitId":"Respirayson"},"content":"            if (trimmedName.equals(priority.name())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":354,"author":{"gitId":"Respirayson"},"content":"                return TaskPriority.valueOf(trimmedName);","lastModifiedDate":"2023-10-18"},{"lineNumber":355,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":356,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":357,"author":{"gitId":"Respirayson"},"content":"        throw new ParseException(TaskPriority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":358,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":359,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":360,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":361,"author":{"gitId":"Originalidk"},"content":"     * Parses a {@code String assignmentName} into a {@code AssignmentName}.","lastModifiedDate":"2023-10-19"},{"lineNumber":362,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":363,"author":{"gitId":"Originalidk"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":364,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":365,"author":{"gitId":"Originalidk"},"content":"    public static AssignmentName parseAssignmentName(String name) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":366,"author":{"gitId":"Originalidk"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-14"},{"lineNumber":367,"author":{"gitId":"Originalidk"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":368,"author":{"gitId":"Originalidk"},"content":"        if (!AssignmentName.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":369,"author":{"gitId":"Originalidk"},"content":"            throw new ParseException(AssignmentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":370,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":371,"author":{"gitId":"Originalidk"},"content":"        return new AssignmentName(trimmedName);","lastModifiedDate":"2023-10-14"},{"lineNumber":372,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ldinghan":32,"Respirayson":49,"raydenlim":153,"Originalidk":15,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"     * Replaces the contents of the person list with {@code people}.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"     * {@code people} must not contain duplicate persons.","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    public void setPersons(List\u003cPerson\u003e people) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        this.persons.setPersons(people);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"     * Returns person if a {@code person} with the same name exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"    public Person matchName(Name name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        return persons.matchName(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ldinghan":9,"Originalidk":4,"-":126}},{"path":"src/main/java/seedu/address/model/AssignmentMapBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentMap;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":" * Represents a collection of assignments. This class is responsible for managing and manipulating assignment data.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"public class AssignmentMapBook implements ReadOnlyAssignmentMap {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    private final AssignmentMap assignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        assignments \u003d new AssignmentMap();","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    public AssignmentMapBook() {}","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"     * Creates an AssignmentMapBook using the AssignmentMap in the {@code toBeCopied}","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    public AssignmentMapBook(ReadOnlyAssignmentMap toBeCopied) {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        this();","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"     * Replaces the contents of the assignment map with {@code newAssignments}.","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    public void setAssignments(Map\u003cAssignmentName, Assignment\u003e newAssignments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        this.assignments.setAssignmentMap(newAssignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"     * Resets the existing data of this {@code AssignmentMapBook} with {@code newData}.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"    public void resetData(ReadOnlyAssignmentMap newData) {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        setAssignments(newData.getAssignmentMap());","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"    public Assignment getAssignment(AssignmentName assignmentName) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"        return assignments.get(assignmentName);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"    public ObservableMap\u003cAssignmentName, Assignment\u003e getAssignmentMap() {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        return assignments.asUnmodifiableObservableMap();","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":57}},{"path":"src/main/java/seedu/address/model/ConsultationListBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.ConsultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" * Represents a collection of consultations. This class is responsible for managing and manipulating","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" * consultation data.","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"public class ConsultationListBook implements ReadOnlyConsultationList {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    private final ConsultationList consultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     * Initializes a new instance of ConsultationListBook.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    public ConsultationListBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"        consultationList \u003d new ConsultationList();","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * Initializes a new instance of ConsultationListBook by copying data from an existing ReadOnlyConsultationList.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     * @param toBeCopied The ReadOnlyConsultationList to copy data from.","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    public ConsultationListBook(ReadOnlyConsultationList toBeCopied) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        this();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     * Sets the consultations list with the provided list of consultations.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"     * @param consultations The list of consultations to set.","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    public void setConsultationList(List\u003cConsultation\u003e consultations) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        this.consultationList.setConsultationList(consultations);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     * Resets the data in the ConsultationListBook by replacing it with the data from a ReadOnlyConsultationList.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"     * @param newData The ReadOnlyConsultationList to copy data from.","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    public void resetData(ReadOnlyConsultationList newData) {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        setConsultationList(newData.getConsultationList());","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"     * Checks if the ConsultationListBook contains the provided consultation.","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"     * @param consultation The consultation to check for existence.","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"     * @return True if the consultation exists in the list, false otherwise.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"    public boolean hasConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"        requireNonNull(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"        return consultationList.contains(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"     * Adds a consultation to the ConsultationListBook.","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"     * @param consultation The consultation to add.","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"    public void addConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"        consultationList.addConsultation(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"     * Returns an observable list of consultations from the ConsultationListBook.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"     * @return An unmodifiable observable list of consultations.","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"    public ObservableList\u003cConsultation\u003e getConsultationList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"        return consultationList.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"        if (!(other instanceof ConsultationListBook)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook otherConsultationList \u003d (ConsultationListBook) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"        return consultationList.equals(otherConsultationList.consultationList);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":97}},{"path":"src/main/java/seedu/address/model/GradedTestListBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":" * Wraps all data at the gradedTest-list level","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":" * Duplicates are not allowed (by .isSameGradedTest comparison)","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"public class GradedTestListBook implements ReadOnlyGradedTestList {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    private final GradedTestList gradedTests;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"     *   among constructors.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"        gradedTests \u003d new GradedTestList();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    public GradedTestListBook() {}","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"     * Creates an GradedTestList using the GradedTest in the {@code toBeCopied}","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    public GradedTestListBook(ReadOnlyGradedTestList toBeCopied) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        this();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"     * Replaces the contents of the GradedTest list with {@code gradedTEst}.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"     * {@code gradedTests} must not contain duplicate gradedTest.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTests(List\u003cGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        this.gradedTests.setGradedTests(gradedTests);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"     * Replaces the given gradedTest {@code target} in the list with {@code editedGradedTest}.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"     * {@code target} must exist in the gradedTest list.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"     * The gradedTest identity of {@code editedGradedTest} must not be the same as another existing","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"     * gradedTest in the gradedTest list.","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTests(GradedTest target, GradedTest editedGradedTest) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(editedGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        gradedTests.editGradedTest(target, editedGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"     * Resets the existing data of this {@code GradedTestList} with {@code newData}.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"    public void resetData(ReadOnlyGradedTestList newData) {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"        setGradedTests(newData.getGradedTestList());","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"    //// gradedTest-level operations","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"     * Returns the gradedTest at the given index.","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"    public GradedTest getGradedTest(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        return gradedTests.getGradedTest(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a gradedTest with the same identity as {@code gradedTest} exists in the gradedTest list.","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"    public boolean hasGradedTest(GradedTest gradedTest) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        return gradedTests.contains(gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"     * Adds a gradedTest to the gradedTest list.","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"     * The gradedTest must not already exist in the gradedTest list.","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"    public void addGradedTest(GradedTest gt) {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"        gradedTests.add(gt);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"     * Removes {@code key} from this {@code GradedTestListBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"     * {@code key} must exist in the gradedTest list book.","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"    public void removeGradedTest(GradedTest key) {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"        gradedTests.remove(key);","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"    //// util methods","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"                .add(\"gradedTests\", gradedTests)","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cGradedTest\u003e getGradedTestList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"        return gradedTests.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d null | getClass() !\u003d other.getClass()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook otherGradedTestList \u003d (GradedTestListBook) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"        return gradedTests.equals(otherGradedTestList.gradedTests);","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"        return gradedTests.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":138}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    Predicate\u003cSession\u003e PREDICATE_SHOW_ALL_SESSIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    Predicate\u003cGradedTest\u003e PREDICATE_SHOW_ALL_GRADED_TEST \u003d unused -\u003e true;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    Predicate\u003cConsultation\u003e PREDICATE_SHOW_ALL_CONSULTATIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"     * Sets the user prefs\u0027 task list file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SessionList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"    Session findSessionBySessionNumber(SessionNumber sessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"     * Adds the given sesssion.","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"    void addSession(Session session);","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"    /** Returns an unmodifiable view of the filtered session list */","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"    ObservableList\u003cSession\u003e getFilteredSessionList();","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"    /** Returns the SessionList */","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"    ReadOnlySessionList getSessionList();","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"ldinghan"},"content":"     * Updates the filter of the filtered session list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"ldinghan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"ldinghan"},"content":"    void updateFilteredSessionList(Predicate\u003cSession\u003e predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"     * Replaces task list data with the data in {@code taskList}.","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"    /** Returns the TaskList */","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-09-28"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2023-09-28"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"     * Adds the given task.","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-09-28"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"     * Returns task at the given index.","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"     * {@code index} must be within the size of the task list.","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"Respirayson"},"content":"    Task getTask(int index);","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":166,"author":{"gitId":"Respirayson"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2023-09-28"},{"lineNumber":167,"author":{"gitId":"Respirayson"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-09-28"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":169,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":170,"author":{"gitId":"Respirayson"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":171,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"raydenlim"},"content":"     * Replaces task list data with the data in {@code taskList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"raydenlim"},"content":"    void setGradedTestList(ReadOnlyGradedTestList gradedTestList);","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"raydenlim"},"content":"    /** Returns the GradeTestList */","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"raydenlim"},"content":"    ReadOnlyGradedTestList getGradedTestList();","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"raydenlim"},"content":"    boolean hasGradedTest(GradedTest gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"raydenlim"},"content":"     * Deletes the given gradedTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"raydenlim"},"content":"     * The gradedTest must exist in the gradedTest list.","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"raydenlim"},"content":"    void deleteGradedTest(GradedTest target);","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"raydenlim"},"content":"     * Adds the given task.","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"raydenlim"},"content":"     * {@code gradedTest} must not already exist in the gradedTest list.","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"    void addGradedTest(GradedTest gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"raydenlim"},"content":"     * Returns gradedTest at the given index.","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"raydenlim"},"content":"     * {@code index} must be within the size of the gradedTest list.","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"raydenlim"},"content":"    GradedTest getGradedTest(int index);","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"raydenlim"},"content":"     * Replaces the given task {@code target} with {@code editedGradedTest}.","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"raydenlim"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"raydenlim"},"content":"     * The gradedTest identity of {@code editedGradedTest} must not be the same","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"raydenlim"},"content":"     * as another existing gradedTest in the gradedTest List.","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"raydenlim"},"content":"    void setGradedTest(GradedTest target, GradedTest editedGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"raydenlim"},"content":"     * Returns the user prefs\u0027 gradedTest list file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"raydenlim"},"content":"    Path getGradedTestListFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"raydenlim"},"content":"    void setGradedTestListFilePath(Path gradedTestListFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":223,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":228,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a consultation with the same identity as {@code task} exists in the consultation list.","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"raydenlim"},"content":"    boolean hasConsultation(Consultation consultation);","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"raydenlim"},"content":"     * Adds the given consultation.","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"raydenlim"},"content":"    void addConsultation(Consultation consultation);","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"raydenlim"},"content":"    /** Returns the ConsultationList */","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"raydenlim"},"content":"    ReadOnlyConsultationList getConsultationList();","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"    /** Returns an unmodifiable view of the filtered consultation list */","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"raydenlim"},"content":"    ObservableList\u003cConsultation\u003e getFilteredConsultationList();","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":245,"author":{"gitId":"raydenlim"},"content":"     * Updates the filter of the filtered consultation list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-20"},{"lineNumber":246,"author":{"gitId":"raydenlim"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-20"},{"lineNumber":247,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":248,"author":{"gitId":"raydenlim"},"content":"    void updateFilteredConsultationList(Predicate\u003cConsultation\u003e predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":249,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"ldinghan"},"content":"    Person getMatchingStudentName(Name name);","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"Respirayson"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2023-09-28"},{"lineNumber":253,"author":{"gitId":"Respirayson"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":254,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":255,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":256,"author":{"gitId":"Respirayson"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2023-09-28"},{"lineNumber":257,"author":{"gitId":"Respirayson"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-09-28"},{"lineNumber":258,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":259,"author":{"gitId":"Respirayson"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-09-28"},{"lineNumber":260,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ldinghan":38,"Respirayson":63,"raydenlim":75,"-":85}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    private final SessionListBook sessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    private final TaskListBook taskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    private final GradedTestListBook gradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    private final ConsultationListBook consultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    private final FilteredList\u003cGradedTest\u003e filteredGradedTest;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    private final FilteredList\u003cConsultation\u003e filteredConsultations;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    private final FilteredList\u003cSession\u003e filteredSessions;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyTaskList taskList,","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"                        ReadOnlySessionList sessionList, ReadOnlyConsultationList consultationList,","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"                        ReadOnlyGradedTestList gradedTestList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        this.consultationList \u003d new ConsultationListBook(consultationList);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        this.sessionList \u003d new SessionListBook(sessionList);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        this.taskList \u003d new TaskListBook(taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        this.gradedTestList \u003d new GradedTestListBook(gradedTestList);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        filteredGradedTest \u003d new FilteredList\u003c\u003e(this.gradedTestList.getGradedTestList());","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        filteredConsultations \u003d new FilteredList\u003c\u003e(this.consultationList.getConsultationList());","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"        filteredSessions \u003d new FilteredList\u003c\u003e(this.sessionList.getSessionList());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"     * Initializes a ModelManager with default data.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"        this(new AddressBook(), new UserPrefs(), new TaskListBook(), new SessionListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"                new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"    public Path getGradedTestListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"        return userPrefs.getGradedTestListFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestListFilePath(Path gradedTestListFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTestListFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"        userPrefs.setGradedTestListFilePath(gradedTestListFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"ldinghan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SessionList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"ldinghan"},"content":"    public Session findSessionBySessionNumber(SessionNumber sessionNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(sessionNumber);","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"ldinghan"},"content":"        return sessionList.getSession(sessionNumber);","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":170,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"ldinghan"},"content":"    public void addSession(Session session) {","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"ldinghan"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"ldinghan"},"content":"    public ReadOnlySessionList getSessionList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"ldinghan"},"content":"        return sessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"ldinghan"},"content":"     * Returns an unmodifiable view of the list of {@code Session} backed by the internal list of","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"ldinghan"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"ldinghan"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"ldinghan"},"content":"        return filteredSessions;","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"ldinghan"},"content":"    public void updateFilteredSessionList(Predicate\u003cSession\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"ldinghan"},"content":"        filteredSessions.setPredicate(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":197,"author":{"gitId":"Respirayson"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskListBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":198,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":199,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":200,"author":{"gitId":"Respirayson"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-09-28"},{"lineNumber":201,"author":{"gitId":"Respirayson"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":202,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":203,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":204,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":205,"author":{"gitId":"Respirayson"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":206,"author":{"gitId":"Respirayson"},"content":"        return taskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":207,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":208,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":209,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":210,"author":{"gitId":"Respirayson"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-09-28"},{"lineNumber":211,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":212,"author":{"gitId":"Respirayson"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":213,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":214,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":215,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":216,"author":{"gitId":"Respirayson"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"Respirayson"},"content":"        return taskList.getTask(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":218,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":220,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":221,"author":{"gitId":"Respirayson"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-09-28"},{"lineNumber":222,"author":{"gitId":"Respirayson"},"content":"        taskList.removeTask(target);","lastModifiedDate":"2023-09-28"},{"lineNumber":223,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":224,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":225,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":226,"author":{"gitId":"Respirayson"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-28"},{"lineNumber":227,"author":{"gitId":"Respirayson"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":228,"author":{"gitId":"Respirayson"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-09-28"},{"lineNumber":229,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":230,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":231,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":232,"author":{"gitId":"Respirayson"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-09-28"},{"lineNumber":233,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":234,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":235,"author":{"gitId":"Respirayson"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":236,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":237,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":238,"author":{"gitId":"raydenlim"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Graded Test List Book  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestList(ReadOnlyGradedTestList gradedTestList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"        this.gradedTestList.resetData(gradedTestList);","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlyGradedTestList getGradedTestList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"raydenlim"},"content":"        return gradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":247,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":248,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":250,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a task with the same identity as {@code gradedTest} exists in the gradedTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":252,"author":{"gitId":"raydenlim"},"content":"    public boolean hasGradedTest(GradedTest gradedTest) {","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"raydenlim"},"content":"        return gradedTestList.hasGradedTest(gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"raydenlim"},"content":"    public GradedTest getGradedTest(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"raydenlim"},"content":"        return gradedTestList.getGradedTest(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":262,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":263,"author":{"gitId":"raydenlim"},"content":"    public void deleteGradedTest(GradedTest target) {","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.removeGradedTest(target);","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":267,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":268,"author":{"gitId":"raydenlim"},"content":"     * Adds the given gradedTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":269,"author":{"gitId":"raydenlim"},"content":"     * {@code gradedTest} must not already exist in the gradedTest list.","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":271,"author":{"gitId":"raydenlim"},"content":"    public void addGradedTest(GradedTest gradedTest) {","lastModifiedDate":"2023-10-15"},{"lineNumber":272,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.addGradedTest(gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":273,"author":{"gitId":"raydenlim"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":276,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":277,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest(GradedTest target, GradedTest editedGradedTest) {","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"raydenlim"},"content":"        requireAllNonNull(target, editedGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":279,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":280,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.setGradedTests(target, editedGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":281,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":282,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":300,"author":{"gitId":"raydenlim"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Consultations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":301,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":302,"author":{"gitId":"raydenlim"},"content":"    public void addConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-20"},{"lineNumber":303,"author":{"gitId":"raydenlim"},"content":"        consultationList.addConsultation(consultation);","lastModifiedDate":"2023-10-20"},{"lineNumber":304,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":305,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":306,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":307,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlyConsultationList getConsultationList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":308,"author":{"gitId":"raydenlim"},"content":"        return consultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":309,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":310,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":311,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":312,"author":{"gitId":"raydenlim"},"content":"    public boolean hasConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-20"},{"lineNumber":313,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(consultation);","lastModifiedDate":"2023-10-20"},{"lineNumber":314,"author":{"gitId":"raydenlim"},"content":"        return consultationList.hasConsultation(consultation);","lastModifiedDate":"2023-10-20"},{"lineNumber":315,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":316,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":317,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":318,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cConsultation\u003e getFilteredConsultationList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":319,"author":{"gitId":"raydenlim"},"content":"        return filteredConsultations;","lastModifiedDate":"2023-10-20"},{"lineNumber":320,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":321,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":322,"author":{"gitId":"raydenlim"},"content":"    public void updateFilteredConsultationList(Predicate\u003cConsultation\u003e predicate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":323,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":324,"author":{"gitId":"raydenlim"},"content":"        filteredConsultations.setPredicate(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":325,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":326,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":327,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":328,"author":{"gitId":"raydenlim"},"content":"    public Person getMatchingStudentName(Name name) {","lastModifiedDate":"2023-10-20"},{"lineNumber":329,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-20"},{"lineNumber":330,"author":{"gitId":"raydenlim"},"content":"        return addressBook.matchName(name);","lastModifiedDate":"2023-10-20"},{"lineNumber":331,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":332,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":333,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":334,"author":{"gitId":"Respirayson"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":335,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":336,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":337,"author":{"gitId":"Respirayson"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2023-09-28"},{"lineNumber":338,"author":{"gitId":"Respirayson"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-09-28"},{"lineNumber":339,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":340,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":341,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":342,"author":{"gitId":"Respirayson"},"content":"        return filteredTasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":343,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":344,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":345,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":346,"author":{"gitId":"Respirayson"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-09-28"},{"lineNumber":347,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-09-28"},{"lineNumber":348,"author":{"gitId":"Respirayson"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-09-28"},{"lineNumber":349,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":350,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":365,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-09-28"},{"lineNumber":366,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 taskList.equals(otherModelManager.taskList)","lastModifiedDate":"2023-09-28"},{"lineNumber":367,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 filteredTasks.equals(otherModelManager.filteredTasks)","lastModifiedDate":"2023-10-15"},{"lineNumber":368,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 filteredGradedTest.equals(otherModelManager.filteredGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":371,"author":{"gitId":"raydenlim"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered GradedTest List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":372,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":373,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":374,"author":{"gitId":"raydenlim"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2023-10-15"},{"lineNumber":375,"author":{"gitId":"raydenlim"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-15"},{"lineNumber":376,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":377,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":378,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cGradedTest\u003e getFilteredGradedTestList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":379,"author":{"gitId":"raydenlim"},"content":"        return filteredGradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":380,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":381,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":382,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":383,"author":{"gitId":"raydenlim"},"content":"     * Updates the filtered task list with the given predicate.","lastModifiedDate":"2023-10-15"},{"lineNumber":384,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":385,"author":{"gitId":"raydenlim"},"content":"     * @param predicate The filtering predicate to apply.","lastModifiedDate":"2023-10-15"},{"lineNumber":386,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":387,"author":{"gitId":"raydenlim"},"content":"    public void updateFilteredGradedTestList(Predicate\u003cGradedTest\u003e predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":388,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":389,"author":{"gitId":"raydenlim"},"content":"        filteredGradedTest.setPredicate(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":390,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ldinghan":40,"Respirayson":79,"raydenlim":128,"-":144}},{"path":"src/main/java/seedu/address/model/ReadOnlyAssignmentMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" * Unmodifiable view of an assignment map.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"public interface ReadOnlyAssignmentMap {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * Returns an unmodifiable view of the assignment map.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    ObservableMap\u003cAssignmentName, Assignment\u003e getAssignmentMap();","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyConsultationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":" * Unmodifiable view of a consultation list","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"public interface ReadOnlyConsultationList {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"     * Returns an unmodifiable view of the consultation list.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"     * This list will not contain any duplicate consultation.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    ObservableList\u003cConsultation\u003e getConsultationList();","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyGradedTestList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":" * Unmodified view of a gradedTest List","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"public interface ReadOnlyGradedTestList {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    ObservableList\u003cGradedTest\u003e getGradedTestList();","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":15}},{"path":"src/main/java/seedu/address/model/ReadOnlySessionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":" * Unmodifiable view of a session list","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"public interface ReadOnlySessionList {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"     * Returns an unmodifiable view of the session list.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"     * This list will not contain any duplicate session.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    ObservableList\u003cSession\u003e getSessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Unmodifiable view of a task list","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":17}},{"path":"src/main/java/seedu/address/model/SessionListBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":" * Represents a collection of sessions. This class is responsible for managing and manipulating","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":" * session data.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"public class SessionListBook implements ReadOnlySessionList {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    private final SessionList sessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"     * Initializes a new instance of SessionListBook.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    public SessionListBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        sessionList \u003d new SessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"     * Initializes a new instance of SessionListBook by copying data from an existing ReadOnlySessionList.","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     * @param toBeCopied The ReadOnlySessionList to copy data from.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    public SessionListBook(ReadOnlySessionList toBeCopied) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        this();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"     * Sets the session list with the provided list of sessions.","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"     * @param sessions The list of sessions to set.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    public void setSessionList(List\u003cSession\u003e sessions) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        this.sessionList.setSessionList(sessions);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     * Resets the data in the SessionListBook by replacing it with the data from a ReadOnlySessionList.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"     * @param newData The ReadOnlySessionList to copy data from.","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    public void resetData(ReadOnlySessionList newData) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        setSessionList(newData.getSessionList());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"     * Retrieves a session with the specified session number.","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to search for.","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"     * @return The session with the specified session number, or null if not found.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"    public Session getSession(SessionNumber sessionNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        return sessionList.findSessionBySessionNumber(sessionNumber);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"     * Checks if the SessionListBook contains the provided session.","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"     * @param session The session to check for existence.","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"     * @return True if the session exists in the list, false otherwise.","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"    public boolean hasSession(Session session) {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"        return sessionList.contains(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"     * Adds a session to the SessionListBook.","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"     * @param session The session to add.","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"    public void addSession(Session session) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"     * Sets a session with the specified session number to a new session.","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"     * @param targetSession The session to be modified.","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"     * @param editedSession The modified session information.","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"    public void setSession(Session targetSession, Session editedSession) {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(editedSession);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"        sessionList.setSession(targetSession, editedSession);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"     * Removes a session from the SessionListBook.","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"     * @param session The session to remove.","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"    public void removeSession(Session session) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"        sessionList.remove(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"                .add(\"sessions\", sessionList)","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"     * Returns an observable list of sessions from the SessionListBook.","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"     * @return An unmodifiable observable list of sessions.","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"    public ObservableList\u003cSession\u003e getSessionList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"        return sessionList.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"ldinghan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"ldinghan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"ldinghan"},"content":"        if (!(other instanceof SessionListBook)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"ldinghan"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"        SessionListBook otherSessionList \u003d (SessionListBook) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"        return sessionList.equals(otherSessionList.sessionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"ldinghan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"ldinghan"},"content":"        return sessionList.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":143}},{"path":"src/main/java/seedu/address/model/TaskListBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" * Wraps all data at the task-list level","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class TaskListBook implements ReadOnlyTaskList {","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    /*","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *   among constructors.","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    {","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public TaskListBook() {}","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * Creates an TaskList using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public TaskListBook(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        this();","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"    // task-level operations","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        return tasks.getTask(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"     * The task must not already exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        tasks.add(t);","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"        tasks.editTask(target, editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"     * Removes {@code key} from this {@code TaskListBook}.","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"     * {@code key} must exist in the task list book.","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"    //// util methods","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"                .add(\"tasks\", tasks)","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"                .toString();","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-09-28"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-28"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-28"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskListBook)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        TaskListBook otherTaskList \u003d (TaskListBook) other;","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        return tasks.equals(otherTaskList.tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"ldinghan":1,"Respirayson":136}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"tasklist.json\");","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    private Path sessionListFilePath \u003d Paths.get(\"data\", \"sessionlist.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    private Path consultationListFilePath \u003d Paths.get(\"data\", \"consultationlist.json\");","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"    private Path gradedTestListFilePath \u003d Paths.get(\"data\" , \"gradedtestlist.json\");","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"    public Path getSessionListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        return sessionListFilePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    public Path getConsultationListFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"        return consultationListFilePath;","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"    public void setSessionListFilePath(Path sessionListFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(sessionListFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"        this.sessionListFilePath \u003d sessionListFilePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        return taskListFilePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"    public Path getGradedTestListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        return gradedTestListFilePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestListFilePath(Path gradedTestListFilePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTestListFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"        this.gradedTestListFilePath \u003d gradedTestListFilePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"        sb.append(\"\\nTask list file location : \" + taskListFilePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"        sb.append(\"\\nSession list file location : \" + sessionListFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"        sb.append(\"\\nConsultation list file location : \" + consultationListFilePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"        sb.append(\"\\nGradedTask list file location : \" + gradedTestListFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ldinghan":11,"Respirayson":11,"raydenlim":16,"-":88}},{"path":"src/main/java/seedu/address/model/attendance/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionStudents;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":" * Utility class for managing attendance records.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"public abstract class Attendance {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"     * Marks a student as present in a specific session and updates their attendance record.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"     * @param session The session in which the student is marked present.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to be marked present.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    public static void markPresent(Session session, Person student) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"        student.attendSession(session);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"        session.addStudent(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     * Marks a student as absent in a specific session and updates their attendance record.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"     * @param session The session in which the student is marked absent.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to be marked absent.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    public static void markAbsent(Session session, Person student) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        student.missSession(session);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        session.removeStudent(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"     * Retrieves the list of students attending a specific session.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"     * @param session The session for which attendance is requested.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"     * @return A set of students attending the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    public static SessionStudents getAttendanceBySession(Session session) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        return session.getStudents();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     * Retrieves the list of sessions attended by a specific student.","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"     * @param student The student for which attendance records are requested.","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"     * @return A string representation of the sessions attended by the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"    public static Set\u003cSession\u003e getAttendanceByStudent(Person student, SessionList sessionList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        return sessionList.findSessionsByStudent(student);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":57}},{"path":"src/main/java/seedu/address/model/consultation/Consultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" * Represents a Consultation with a date, time and specified students.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class Consultation {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    private LocalDate date;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    private LocalTime time;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    private Set\u003cPerson\u003e students;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     * Constructs an {@code Consultation}.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     * @param date A valid date object.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * @param time A valid time object.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     * @param students A set of students.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    public Consultation(LocalDate date, LocalTime time, Set\u003cPerson\u003e students) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        if (!(other instanceof Consultation)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        Consultation otherConsultation \u003d (Consultation) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        return students.equals(otherConsultation.students)","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"                \u0026\u0026 date.equals(otherConsultation.date)","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"                \u0026\u0026 time.equals(otherConsultation.time);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"     * Returns true if both consultations have the same details.","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    public boolean isSameConsultation(Consultation other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        return other !\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"                \u0026\u0026 other.getDate().equals(getDate())","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"                \u0026\u0026 other.getTime().equals(getTime())","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"                \u0026\u0026 other.getStudents().equals(getStudents());","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"        return date;","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"        return time;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"    public Set\u003cPerson\u003e getStudents() {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"        return students;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"    public Set\u003cName\u003e getStudentsNames() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"        return students.stream().map(Person::getName).collect(Collectors.toSet());","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wesho1107":75}},{"path":"src/main/java/seedu/address/model/consultation/ConsultationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.exceptions.ConsultationNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.exceptions.DuplicateConsultationException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":" * A list of Consultations.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"public class ConsultationList implements Iterable\u003cConsultation\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    private ObservableList\u003cConsultation\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    private final ObservableList\u003cConsultation\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    public void setConsultationList(List\u003cConsultation\u003e consultationList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        requireAllNonNull(consultationList);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        internalList.setAll(consultationList);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     * Returns true if the list contains an equivalent consultation as the given argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    public boolean contains(Consultation toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"        return internalList.stream().anyMatch(toCheck::isSameConsultation);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     * Adds a consultation to the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    public void addConsultation(Consultation toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"            throw new DuplicateConsultationException();","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"     * Removes the equivalent consultation from the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"     * The consultation must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    public void remove(Consultation toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"            throw new ConsultationNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    public ObservableList\u003cConsultation\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    public Iterator\u003cConsultation\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"            return true; // Same object, equal","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"        if (!(other instanceof ConsultationList)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"            return false; // Not the same class, not equal","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"        ConsultationList otherList \u003d (ConsultationList) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"        // Check if the lists have the same sessions in the same order","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"        return internalList.equals(otherList.internalList);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wesho1107":86}},{"path":"src/main/java/seedu/address/model/consultation/ReadOnlyConsultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":" * Unmodifiable view of a Consultation.","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"public interface ReadOnlyConsultation {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wesho1107":17}},{"path":"src/main/java/seedu/address/model/consultation/exceptions/ConsultationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model.consultation.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":" * Signals that the operation is unable to find the specified consultation.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"public class ConsultationNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    public ConsultationNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"        super(\"Consultation not found\");","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wesho1107":10}},{"path":"src/main/java/seedu/address/model/consultation/exceptions/DuplicateConsultationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model.consultation.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":" * Signals that the operation will result in duplicate Consultations.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"public class DuplicateConsultationException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    public DuplicateConsultationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"        super(\"Operation would result in duplicate consultations\");","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wesho1107":10}},{"path":"src/main/java/seedu/address/model/gradedtest/Finals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":" * Represents a Final result.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":" * A Final result is a positive number and indicates the score achieved in the exam.","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":" * The result can be an integer or a decimal number.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class Finals {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"            \"Scores should be a positive number\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?:-|\\\\d+(\\\\.\\\\d+)?)\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code Finals}.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"     * @param finalResults A valid phone number.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"    public Finals(String finalResults) {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(finalResults);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"        checkArgument(isValidFinalsResult(finalResults), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"        this.value \u003d finalResults;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a given string is a valid finals result.","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    public static boolean isValidFinalsResult(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"        return value.equals(\"\") ? \"No Score Provided\" : value;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        if (!(other instanceof Finals)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        Finals otherFinals \u003d (Finals) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        return value.equals(otherFinals.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"raydenlim":62}},{"path":"src/main/java/seedu/address/model/gradedtest/GradedTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class GradedTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"            \"GradedTest Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"Reading Assessment 1:[-\\\\d]+ \\\\| Reading Assessment 2:[-\\\\d]+ \\\\| \"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"            + \"MidTerms:[-\\\\d]+ \\\\| Finals:[-\\\\d]+ \\\\| Practical Exam:[-\\\\d]+\";","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    public static final String DEFAULT_VALUE \u003d \"-\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    // Identity fields","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    public final String gradedTestsIndv;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"    // Data fields","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"    private final ReadingAssessment readingAssessment1;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    private final ReadingAssessment readingAssessment2;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    private final MidTerms midTerms;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"    private final Finals finals;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    private final PracticalExam practicalExam;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code GradedTest}.","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"     * @param readingAssessment1 The first reading assessment.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"     * @param readingAssessment2 The second reading assessment.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"     * @param midTerms The mid-terms.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"     * @param finals The finals.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"     * @param practicalExam The practical exam.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    public GradedTest(ReadingAssessment readingAssessment1, ReadingAssessment readingAssessment2,","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"                      MidTerms midTerms, Finals finals, PracticalExam practicalExam) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        requireAllNonNull(readingAssessment1, readingAssessment2, midTerms, finals, practicalExam);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"        this.readingAssessment1 \u003d readingAssessment1;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        this.readingAssessment2 \u003d readingAssessment2;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"        this.midTerms \u003d midTerms;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        this.finals \u003d finals;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        this.practicalExam \u003d practicalExam;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        this.gradedTestsIndv \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"                \"Reading Assessment 1:\" + readingAssessment1.toString() + \" | \"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"                + \"Reading Assessment 2:\" + readingAssessment2.toString() + \" | \"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"                + \"MidTerms:\" + midTerms.toString() + \" | \"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"                + \"Finals:\" + finals.toString() + \" | \"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"                + \"Practical Exam:\" + practicalExam.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code GradedTest}.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"     * @param gradedTestsIndv A valid gradedTest name.","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    public GradedTest(String gradedTestsIndv) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        this.gradedTestsIndv \u003d gradedTestsIndv;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTestsIndv);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        if (!isValidGradeTestName(gradedTestsIndv)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"            String[] components \u003d gradedTestsIndv.split(\"\\\\|\");","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"            if (components.length !\u003d 5) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"                throw new ParseException(\"Invalid GradedTest format. Expected 5 components.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"            String ra1Score \u003d components[0].replaceAll(\"Reading Assessment 1:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"            String ra2Score \u003d components[1].replaceAll(\"Reading Assessment 2:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"            String midTermsScore \u003d components[2].replaceAll(\"MidTerms:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"            String finalsScore \u003d components[3].replaceAll(\"Finals:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"            String peScore \u003d components[4].replaceAll(\"Practical Exam:\", \"\").trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"            this.readingAssessment1 \u003d new ReadingAssessment(ra1Score);","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"            this.readingAssessment2 \u003d new ReadingAssessment(ra2Score);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"            this.midTerms \u003d new MidTerms(midTermsScore);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"            this.finals \u003d new Finals(finalsScore);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"            this.practicalExam \u003d new PracticalExam(peScore);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"    public ReadingAssessment getRA1() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"        return readingAssessment1;","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"    public ReadingAssessment getRA2() {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"        return readingAssessment2;","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"    public MidTerms getMidTerms() {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"        return midTerms;","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"    public Finals getFinals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"        return finals;","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    public PracticalExam getPracticalExam() {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"        return practicalExam;","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"    public String getGradedTests() {","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"        return gradedTestsIndv;","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a given string is a valid gradedTest name.","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"    public static boolean isValidGradeTestName(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"     * Returns true if both tasks have the same name and description.","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"    public boolean isSameGradedTest(GradedTest otherGradedTest) {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"        if (otherGradedTest \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"        return otherGradedTest !\u003d null","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 otherGradedTest.getGradedTests().equals(gradedTestsIndv)","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 otherGradedTest.getRA1().equals(readingAssessment1)","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 otherGradedTest.getRA2().equals(readingAssessment2)","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 otherGradedTest.getMidTerms().equals(midTerms)","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 otherGradedTest.getFinals().equals(finals)","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 otherGradedTest.getPracticalExam().equals(practicalExam);","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"raydenlim"},"content":"        if (!(other instanceof GradedTest)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"        GradedTest otherTest \u003d (GradedTest) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"raydenlim"},"content":"        return readingAssessment1.equals(otherTest.readingAssessment1)","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 readingAssessment2.equals(otherTest.readingAssessment2)","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 midTerms.equals(otherTest.midTerms)","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 finals.equals(otherTest.finals)","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 practicalExam.equals(otherTest.practicalExam)","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 gradedTestsIndv.equals(otherTest.gradedTestsIndv);","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"        return Objects.hash(readingAssessment1, readingAssessment2, midTerms, finals, practicalExam);","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"raydenlim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"                .add(\"Reading Assessment 1\", readingAssessment1)","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"                .add(\"Reading Assessment 2\", readingAssessment2)","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"                .add(\"MidTerms\", midTerms)","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"                .add(\"Finals\", finals)","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"raydenlim"},"content":"                .add(\"Practical Exam\", practicalExam)","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"raydenlim"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"raydenlim":176}},{"path":"src/main/java/seedu/address/model/gradedtest/GradedTestList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.exceptions.DuplicateGradedTestException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.exceptions.GradedTestNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":" * A list of gradedTest that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":" * A gradedTest is considered unique by comparing using {@code GradedTest#isSameGradedTest(gradedTest)}.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":" * As such, adding and updating of gradedTest uses GradedTest#isSameGradedTest(gradedTest) for equality","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":" * so as to ensure that the gradedTest being added or updated is unique in terms of identity in the GradedTestList.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":" * However, the removal of a gradedTest uses GradedTest#equals(Object) so as to ensure that the gradedTest with exactly","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":" * the same fields will be removed.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":" * @see GradedTest#isSameGradedTest(GradedTest)","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"public class GradedTestList implements Iterable\u003cGradedTest\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    private final ObservableList\u003cGradedTest\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    private final ObservableList\u003cGradedTest\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"     * Returns true if the list contains an equivalent gradedTest as the given argument.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    public boolean contains(GradedTest toCheck) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"     * Returns the gradedTest at the given index.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"    public GradedTest getGradedTest(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        if (index \u003e\u003d internalList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalArgumentException(\"Index is out of bounds\");","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"     * Adds a gradedTest to the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"     * The gradedTest must not already exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"    public void add(GradedTest toAdd) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"            throw new DuplicateGradedTestException();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"     * Replaces the gradedTest {@code target} in the list with {@code editedGradedTest}.","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"     * The gradedTest identity of {@code editedGradedTest} must not be the same as another","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"     * existing gradedTest in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"    public void editGradedTest(GradedTest target, GradedTest editedGradedTest) {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        requireAllNonNull(target, editedGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"            throw new GradedTestNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"        if (!target.isSameGradedTest(editedGradedTest) \u0026\u0026 contains(editedGradedTest)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"            throw new DuplicateGradedTestException();","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        internalList.set(index, editedGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"     * Removes the equivalent gradedTest from the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"     * The gradedTest must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"    public void remove(GradedTest toRemove) {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"            throw new GradedTestNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTests(GradedTestList replacement) {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"     * Replaces the contents of this list with {@code gradedTest}.","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"     * {@code gradedTest} must not contain duplicate gradedTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTests(List\u003cGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"        requireAllNonNull(gradedTests);","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"        if (!isUniqueGradedTest(gradedTests)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"            throw new DuplicateGradedTestException();","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"        internalList.setAll(gradedTests);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cGradedTest\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"    public Iterator\u003cGradedTest\u003e iterator() {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"        if (!(other instanceof GradedTestList)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"        GradedTestList otherList \u003d (GradedTestList) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"        return internalList.equals(otherList.internalList);","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"raydenlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"raydenlim"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"raydenlim"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"raydenlim"},"content":"     * Returns true if {@code gradedTest} contains only unique gradedTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"raydenlim"},"content":"    private boolean isUniqueGradedTest(List\u003cGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"raydenlim"},"content":"        for (int i \u003d 0; i \u003c gradedTests.size() - 1; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"raydenlim"},"content":"            for (int j \u003d i + 1; j \u003c gradedTests.size(); j++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"raydenlim"},"content":"                if (gradedTests.get(i).isSameGradedTest(gradedTests.get(j))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"raydenlim"},"content":"                    return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"                }","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"        return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":163}},{"path":"src/main/java/seedu/address/model/gradedtest/GradedTestNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":" * Tests that a {@code GradedTest}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"public class GradedTestNameContainsKeywordsPredicate implements Predicate\u003cGradedTest\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"    public GradedTestNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    public boolean test(GradedTest gradedTest) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"        return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"                StringUtil.containsWordIgnoreCase(gradedTest.getRA1().value, keyword)","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"                        || StringUtil.containsWordIgnoreCase(gradedTest.getRA2().value, keyword)","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"                        || StringUtil.containsWordIgnoreCase(gradedTest.getMidTerms().value, keyword)","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"                        || StringUtil.containsWordIgnoreCase(gradedTest.getFinals().value, keyword)","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"                        || StringUtil.containsWordIgnoreCase(gradedTest.getPracticalExam().value, keyword)","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"        );","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        if (!(other instanceof GradedTestNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        GradedTestNameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"                (GradedTestNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        return new ToStringBuilder(this).add(\"gradedTest keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":50}},{"path":"src/main/java/seedu/address/model/gradedtest/MidTerms.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":" * Represents a MidTerm result.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":" * A MidTerm result is a positive number that indicates the score achieved in the exam.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":" * The result can be an integer or a decimal number.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class MidTerms {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"            \"Scores should be a positive number\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?:-|\\\\d+(\\\\.\\\\d+)?)\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code Finals}.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"     * @param midTermResults A valid phone number.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    public MidTerms(String midTermResults) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(midTermResults);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"        checkArgument(isValidMidTermResult(midTermResults), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"        this.value \u003d midTermResults;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a given string is a valid PE result.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    public static boolean isValidMidTermResult(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        return value.equals(\"\") ? \"No Score Provided\" : value;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"        if (!(other instanceof MidTerms)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        MidTerms otherMidTerm \u003d (MidTerms) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        return value.equals(otherMidTerm.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"raydenlim":63}},{"path":"src/main/java/seedu/address/model/gradedtest/PracticalExam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":" * Represents a Practical Exam result.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":" * A Practical Exam result is a positive number that indicates the score achieved in the exam.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":" * The result can be an integer or a decimal number.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class PracticalExam {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"            \"Scores should be a positive number\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?:-|\\\\d+(\\\\.\\\\d+)?)\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code Finals}.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"     * @param peResults A valid phone number.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    public PracticalExam(String peResults) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(peResults);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"        checkArgument(isValidPeResult(peResults), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"        this.value \u003d peResults;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a given string is a valid PE result.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    public static boolean isValidPeResult(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        return value.equals(\"\") ? \"No Score Provided\" : value;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"        if (!(other instanceof PracticalExam)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        PracticalExam otherPE \u003d (PracticalExam) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        return value.equals(otherPE.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"raydenlim":64}},{"path":"src/main/java/seedu/address/model/gradedtest/ReadingAssessment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":" * Represents a Reading Assessment result.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":" * A Reading Assessment result is a positive number that indicates the score achieved in the assessment.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":" * The result can be an integer or a decimal number.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class ReadingAssessment {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"            \"Scores should be a positive number\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?:-|\\\\d+(\\\\.\\\\d+)?)\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code Finals}.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"     * @param raResult A valid raResult number.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    public ReadingAssessment(String raResult) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(raResult);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"        checkArgument(isValidRaResult(raResult), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"        this.value \u003d raResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"     * Returns true if a given string is a valid RA result.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    public static boolean isValidRaResult(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        return value.equals(\"\") ? \"No Score Provided\" : value;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"        if (!(other instanceof ReadingAssessment)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment otherRA \u003d (ReadingAssessment) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        return value.equals(otherRA.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"raydenlim":64}},{"path":"src/main/java/seedu/address/model/gradedtest/exceptions/DuplicateGradedTestException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":" * Signals that the operation will result in duplicate Graded Test","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":" * (Graded Tests are considered duplicates if they have the same identity).","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"public class DuplicateGradedTestException extends RuntimeException {","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"    public DuplicateGradedTestException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"        super(\"Operation would result in duplicate graded tests\");","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":11}},{"path":"src/main/java/seedu/address/model/gradedtest/exceptions/GradedTestNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest.exceptions;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":" * Signals that the operation is unable to find the specified gradedTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"public class GradedTestNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"    public GradedTestNotFoundException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"        super(\"Graded Test not found.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":10}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Assignment;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentMap;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    private final Set\u003cGradedTest\u003e gradedTests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    private final AssignmentMap assignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        requireAllNonNull(name, phone, email, address, tags, gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        this.gradedTests.addAll(gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        this.assignments \u003d new AssignmentMap();","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"     * Creates a new Person object with a pre-set map of assignments.","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"                  AssignmentMap assignments, Set\u003cGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        requireAllNonNull(name, phone, email, address, tags, assignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        this.gradedTests.addAll(gradedTests);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"     * Returns an immutable gradedTests set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    public Set\u003cGradedTest\u003e getGradedTest() {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"        return Collections.unmodifiableSet(gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"     * Adds a student to a session and a session to a student.","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"     * @param session The session to attend.","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"    public void attendSession(Session session) {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"        session.addStudent(this);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"     * Removes a student from a session and a session from a student.","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"     * @param session The session to miss.","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"    public void missSession(Session session) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"        session.removeStudent(this);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"    public AssignmentMap getAllAssignments() {","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"        return assignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Originalidk"},"content":"    public Assignment getAssignment(AssignmentName assignmentName) {","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"Originalidk"},"content":"        return assignments.get(assignmentName);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"ldinghan"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ldinghan"},"content":"    public boolean isSameName(Name otherName) {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"        if (otherName \u003d\u003d this.getName()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ldinghan"},"content":"        return otherName.equals(getName());","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 assignments.equals(otherPerson.assignments)","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"                \u0026\u0026 gradedTests.equals(otherPerson.gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"raydenlim"},"content":"        return Objects.hash(name, phone, email, address, tags, gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"raydenlim"},"content":"                .add(\"gradedTests\", gradedTests)","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ldinghan":32,"raydenlim":21,"Originalidk":26,"-":113}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"     * Returns student in the list that matches the name {@code toCheck}.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    public Person matchName(Name toCheck) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        Optional\u003cPerson\u003e matchingStudent \u003d internalList.stream().filter(p -\u003e p.isSameName(toCheck)).findAny();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"        if (matchingStudent.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"        return matchingStudent.get();","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"    public void setPersons(List\u003cPerson\u003e people) {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"        requireAllNonNull(people);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"        if (!personsAreUnique(people)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"        internalList.setAll(people);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"Originalidk"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e people) {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c people.size() - 1; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"Originalidk"},"content":"            for (int j \u003d i + 1; j \u003c people.size(); j++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"Originalidk"},"content":"                if (people.get(i).isSamePerson(people.get(j))) {","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ldinghan":14,"Originalidk":8,"-":142}},{"path":"src/main/java/seedu/address/model/person/assignment/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * Represents an assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"public class Assignment {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    // Identity fields","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    private final AssignmentName assignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    private final Grade grade;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * Creates an assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    public Assignment(AssignmentName name, Grade grade) {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        this.assignmentName \u003d name;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    public String name() {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        return this.assignmentName.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    public String gradeToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        return this.grade.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    public String maxGrade() {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        return this.grade.getMax();","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    public Assignment copyAssignment() {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        return new Assignment(this.assignmentName, this.grade.copyGrade());","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        if (!(other instanceof Assignment)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        Assignment otherName \u003d (Assignment) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        return assignmentName.equals(otherName.assignmentName) \u0026\u0026 grade.equals(otherName.grade);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Originalidk":48}},{"path":"src/main/java/seedu/address/model/person/assignment/AssignmentMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static javafx.collections.FXCollections.observableHashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static javafx.collections.FXCollections.unmodifiableObservableMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.initialise.AssignmentInitialise;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":" * Stores the list of assignments a person has.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"public class AssignmentMap {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    private final ObservableMap\u003cAssignmentName, Assignment\u003e assignments \u003d observableHashMap();","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    private final ObservableMap\u003cAssignmentName, Assignment\u003e unmodifiableAssignments \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"            unmodifiableObservableMap(assignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"     * Creates an AssignmentMap to store all assignments a person has.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    public AssignmentMap() {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        if (!AssignmentInitialise.getInitialisationStatus()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"            AssignmentInitialise.init();","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c AssignmentInitialise.size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"            AssignmentName assignmentName \u003d AssignmentInitialise.getAssignmentName(i);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"            Grade assignmentMaxGrade \u003d AssignmentInitialise.getAssignmentMaxGrade(i);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"            assignments.put(assignmentName, new Assignment(assignmentName, assignmentMaxGrade));","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    public void setAssignmentMap(Map\u003cAssignmentName, Assignment\u003e assignments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c AssignmentInitialise.size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"            AssignmentName assignmentName \u003d AssignmentInitialise.getAssignmentName(i);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"            Assignment replaceAssignment \u003d assignments.get(assignmentName);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"            this.assignments.replace(assignmentName, replaceAssignment.copyAssignment());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"     * Creates a new AssignmentMap with the updated grade being given to an assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"     * @param toBeGraded Name of assignment being graded.","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"     * @param newGrade Grade being given to the assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"     * @return New AssignmentMap with the updated grades.","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    public AssignmentMap createUpdatedMap(AssignmentName toBeGraded, Grade newGrade) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        AssignmentMap updateTo \u003d new AssignmentMap();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c AssignmentInitialise.size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"            AssignmentName assignmentName \u003d AssignmentInitialise.getAssignmentName(i);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"            if (assignmentName.equals(toBeGraded)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"                Assignment gradedAssignment \u003d new Assignment(toBeGraded, newGrade);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"                updateTo.assignments.replace(assignmentName, gradedAssignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"                Assignment originalAssignment \u003d this.assignments.get(assignmentName);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"                updateTo.assignments.replace(assignmentName, originalAssignment.copyAssignment());","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        return updateTo;","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"    public boolean contains(AssignmentName key) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"        return assignments.containsKey(key);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"    public Assignment get(AssignmentName key) {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"        return assignments.get(key);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"    public ObservableMap\u003cAssignmentName, Assignment\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"        return unmodifiableAssignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"        if (!(other instanceof AssignmentMap)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"        AssignmentMap otherMap \u003d (AssignmentMap) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"        return this.assignments.equals(otherMap.assignments);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":88}},{"path":"src/main/java/seedu/address/model/person/assignment/AssignmentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.initialise.AssignmentInitialise;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.initialise.AssignmentNameInitialise;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":" * Represents an assignment name.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"public class AssignmentName {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"            \"Assignment does not exist\";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    private static final AssignmentNameInitialise checkIfValid \u003d new AssignmentNameInitialise();","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    public final String assignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"     * Creates an assignment name.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    public AssignmentName(String name) {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        this.assignmentName \u003d name;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"     * Checks if the assignment name exists.","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"     * @param test The assignment name as a string.","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"     * @return Whether the assignment exists.","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        AssignmentInitialise.init();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        return checkIfValid.contains(new AssignmentName(test));","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        return this.assignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        if (!(other instanceof AssignmentName)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        AssignmentName otherName \u003d (AssignmentName) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"        return assignmentName.equals(otherName.assignmentName);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        return assignmentName.hashCode();","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Originalidk":61}},{"path":"src/main/java/seedu/address/model/person/assignment/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":" * Represents the Grade given to an assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":" * Consists of the maximum grade as well as the actual grade.","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"public class Grade {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"    private String actualGrade;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"    private final String maxGrade;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    private boolean isGraded;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"     * Creates a Grade for an assignment with only the maximum grade.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     * @param maxGrade The maximum grade for the assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    public Grade(String maxGrade) {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        this.maxGrade \u003d maxGrade;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        this.isGraded \u003d false;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"     * Creates a Grade for an assignment with both the actual grade and the maximum grade.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"     * @param actualGrade The grade the person scores for the assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"     * @param maxGrade The maximum grade for the assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    public Grade(String actualGrade, String maxGrade) {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        this.actualGrade \u003d actualGrade;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        this.maxGrade \u003d maxGrade;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"        this.isGraded \u003d true;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    public String getMax() {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        return this.maxGrade;","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"     * Creates a new copy of the Grade of an assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"     * @return New copy of the Grade of an assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"    public Grade copyGrade() {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        if (this.isGraded) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"            return new Grade(this.actualGrade, this.maxGrade);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"            return new Grade(this.maxGrade);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        if (this.isGraded) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"            return this.actualGrade + \"/\" + this.maxGrade;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"            return \"UNGRADED/\" + this.maxGrade;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"        if (!(other instanceof Grade)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"        Grade otherGrade \u003d (Grade) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"        boolean sameMaxGrade \u003d this.maxGrade.equals(otherGrade.maxGrade);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"        if (this.isGraded \u0026\u0026 otherGrade.isGraded) {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"            boolean sameGrade \u003d this.actualGrade.equals(otherGrade.actualGrade);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"            return sameMaxGrade \u0026\u0026 sameGrade;","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"            return sameMaxGrade \u0026\u0026 !otherGrade.isGraded;","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Originalidk":80}},{"path":"src/main/java/seedu/address/model/person/assignment/initialise/AssignmentInitialise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment.initialise;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Grade;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":" * Represents an initializer to create assignments for each person.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"public class AssignmentInitialise {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    private static boolean isInitialised \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private static AssignmentNameInitialise nameInitialise;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    private static AssignmentMaxGradeInitialise maxGradeInitialise;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     * Initializes all assignment names and maximum grades if they have yet to be initialized.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    public static void init() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        AssignmentInitialise.nameInitialise \u003d new AssignmentNameInitialise();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        AssignmentInitialise.nameInitialise.initMissions();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        AssignmentInitialise.nameInitialise.initQuests();","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        AssignmentInitialise.maxGradeInitialise \u003d new AssignmentMaxGradeInitialise();","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        AssignmentInitialise.maxGradeInitialise.missionGrades();","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        AssignmentInitialise.maxGradeInitialise.questGrades();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        isInitialised \u003d true;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"    public static AssignmentName getAssignmentName(int index) {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        return AssignmentInitialise.nameInitialise.getName(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"    public static Grade getAssignmentMaxGrade(int index) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        return AssignmentInitialise.maxGradeInitialise.getGrade(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"    public static boolean getInitialisationStatus() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        return isInitialised;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"    public static int size() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        return AssignmentInitialise.nameInitialise.size();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":44}},{"path":"src/main/java/seedu/address/model/person/assignment/initialise/AssignmentMaxGradeInitialise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment.initialise;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Grade;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" * Represents an initializer to create grades for each assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"public class AssignmentMaxGradeInitialise {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private static ArrayList\u003cGrade\u003e maxGrades \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * Initialises mission grades.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public void missionGrades() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"600\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"1000\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"800\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"700\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"600\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"800\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"950\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"1200\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"1300\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"720\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"950\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"800\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"1000\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"1200\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"1200\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"     * Initialises quest grades.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"    public void questGrades() {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"400\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"600\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"500\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"500\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"600\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"800\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"670\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        AssignmentMaxGradeInitialise.maxGrades.add(new Grade(\"750\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    public Grade getGrade(int index) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        return this.maxGrades.get(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":51}},{"path":"src/main/java/seedu/address/model/person/assignment/initialise/AssignmentNameInitialise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment.initialise;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":" * Represents an initializer to create names for each assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"public class AssignmentNameInitialise {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private static ArrayList\u003cAssignmentName\u003e assignmentNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"     * Initialises mission names.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"    public void initMissions() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Rune Trials\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Rune Reading\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Beyond the Second Dimension\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Curve Introduction\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Curve Manipulation\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Beyond the First Dimension\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Premorseal Communications\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"POTS and Pans\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Musical Diversions\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Search and Rescue\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Sorting Things Out\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Robotic Trials\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Moving about on Planet Y\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Finding ELDRIC\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Know Your Environment\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"     * Initialises quest names.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"    public void initQuests() {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Runic Carpets\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Colorful Carpets\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Functional Expressionism\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Cardioid Arrest\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Curvaceous Wizardry\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"The Magical Tone Matrix\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Echoes of the Past\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        AssignmentNameInitialise.assignmentNames.add(new AssignmentName(\"Grading a Sort\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"    public AssignmentName getName(int index) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        return assignmentNames.get(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"    public boolean contains(AssignmentName assignmentName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        return assignmentNames.contains(assignmentName);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"    public int size() {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"        return assignmentNames.size();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":59}},{"path":"src/main/java/seedu/address/model/session/ReadOnlySession.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"public interface ReadOnlySession {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":15}},{"path":"src/main/java/seedu/address/model/session/Session.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":" * Represents a class for managing a session, which can hold a list of students and session-specific details.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"public class Session {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    private final SessionNumber sessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"    private SessionStudents students;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"     * Creates a session with a session number and an initial set of students.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The unique identifier for this session.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"     * @param presentStudents The set of students present in this session.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    public Session(SessionNumber sessionNumber, SessionStudents presentStudents) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"        requireAllNonNull(sessionNumber, presentStudents);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d presentStudents;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"     * Creates a session with a session number and a single student. Useful for adding students individually.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The unique identifier for this session.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to add to this session.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    public Session(SessionNumber sessionNumber, Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        requireAllNonNull(sessionNumber, student);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d new SessionStudents(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     * Creates a session with just a session number. Useful for creating empty sessions.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The unique identifier for this session.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"    public Session(SessionNumber sessionNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(sessionNumber);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"     * Adds a student to the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to add.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"     * @return","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"    public void addStudent(Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"        this.students.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"     * Removes a student from the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to remove.","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"    public void removeStudent(Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"        this.students.remove(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"     * Checks if this session is equal to another object.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"        if (!(other instanceof Session)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"        Session otherSession \u003d (Session) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"        return sessionNumber.equals(otherSession.sessionNumber) \u0026\u0026 students.equals(otherSession.students);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"     * Checks if this session is the same as another session.","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"     * @param other The session to compare with.","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"     * @return True if the sessions are the same, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"    public boolean isSameSession(Session other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"        return other !\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"                \u0026\u0026 other.getSessionNumber().equals(sessionNumber)","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"                \u0026\u0026 other.getStudents().equals(students);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"     * Retrieves the set of students in this session.","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"     * @return The set of students.","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"    public SessionStudents getStudents() {","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"        if (students \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"            students \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"        return students.getStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"     * Retrieves the session number, a unique identifier for this session.","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"ldinghan"},"content":"     * @return The session number.","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"ldinghan"},"content":"    public SessionNumber getSessionNumber() {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"ldinghan"},"content":"        return sessionNumber;","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"ldinghan"},"content":"     * Generates a human-readable representation of the session, including the session number and the set of students.","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"ldinghan"},"content":"     * @return A string representation of the session.","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"    public String getSessionInfo() {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"        String studentNames \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"ldinghan"},"content":"            studentNames \u003d students.toStudentNames();","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ldinghan"},"content":"        return String.format(\"%s - %s\", sessionNumber, studentNames);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ldinghan"},"content":"        return this.getSessionInfo();","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"ldinghan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"ldinghan"},"content":"        return Objects.hash(sessionNumber, students);","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":152}},{"path":"src/main/java/seedu/address/model/session/SessionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.exceptions.DuplicateSessionException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.exceptions.SessionNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":" * A list of sessions that can be used to manage and manipulate session data.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"public class SessionList implements Iterable\u003cSession\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    private ObservableList\u003cSession\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    private final ObservableList\u003cSession\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    public void setSessionList(List\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        requireAllNonNull(sessionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"        internalList.setAll(sessionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     * Checks if the list contains a specific session.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"     * @param toCheck The session to check for existence.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"     * @return True if the session exists in the list, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    public boolean contains(Session toCheck) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameSession);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     * Adds a session to the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"     * @param toAdd The session to add.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"    public void addSession(Session toAdd) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"            throw new DuplicateSessionException();","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"     * Sets the information of a session in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"     * @param target The session to be modified.","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"     * @param editedSession The modified session information.","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"     * @throws SessionNotFoundException If the target session is not found in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"     * @throws DuplicateSessionException If the edited session information duplicates an existing session.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"    public void setSession(Session target, Session editedSession) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        requireAllNonNull(target, editedSession);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"        if (!target.isSameSession(editedSession) \u0026\u0026 contains(editedSession)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"            throw new DuplicateSessionException();","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        internalList.set(index, editedSession);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"     * Finds a session in the list based on its session number.","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to search for.","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"     * @return The session with the specified session number, or null if not found.","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"    public Session findSessionBySessionNumber(SessionNumber sessionNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(sessionNumber);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"        for (Session session : internalList) {","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"            if (session.getSessionNumber().equals(sessionNumber)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"                return session;","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"        // Session not found, return null or handle the situation as needed.","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"        return null;","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"     * Finds and returns a set of sessions attended by a specific student.","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"     * @param student The student for whom to find attended sessions.","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"     * @return A set of sessions that the specified student has attended.","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"    public Set\u003cSession\u003e findSessionsByStudent(Person student) {","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"        Set\u003cSession\u003e sessionsAttendedByStudent \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"        for (Session session : internalList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"            if (session.getStudents().contains(student)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"                sessionsAttendedByStudent.add(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"        return sessionsAttendedByStudent;","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"     * Removes a session from the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"     * @param toRemove The session to remove.","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"     * @throws SessionNotFoundException If the session to remove is not found in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"    public void remove(Session toRemove) {","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"ldinghan"},"content":"            throw new SessionNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"ldinghan"},"content":"     * Returns an unmodifiable view of the list of sessions.","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"ldinghan"},"content":"     * @return An unmodifiable list of sessions.","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"ldinghan"},"content":"    public ObservableList\u003cSession\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"ldinghan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"     * Provides an iterator to iterate through the list of sessions.","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"     * @return An iterator for the list of sessions.","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"    public Iterator\u003cSession\u003e iterator() {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ldinghan"},"content":"     * Returns a string representation of the list of sessions.","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"ldinghan"},"content":"     * @return A string representation of the sessions in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"ldinghan"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"ldinghan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"ldinghan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"ldinghan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"ldinghan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"ldinghan"},"content":"            return true; // Same object, equal","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"ldinghan"},"content":"        if (!(other instanceof SessionList)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"ldinghan"},"content":"            return false; // Not the same class, not equal","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"ldinghan"},"content":"        SessionList otherList \u003d (SessionList) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"ldinghan"},"content":"        // Check if the lists have the same sessions in the same order","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"ldinghan"},"content":"        return internalList.equals(otherList.internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":176}},{"path":"src/main/java/seedu/address/model/session/SessionNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":" * Represents a session number, ensuring it adheres to certain constraints.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":" * A valid session number consists of one or more digits and should not be blank.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"public class SessionNumber {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"            \"Session numbers must only contain numbers, and it should not be blank\";","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]\\\\d*$\";","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    public final String sessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"     * Constructs a SessionNumber with the given session number.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to create.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    public SessionNumber(String sessionNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(sessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"        checkArgument(isValidSessionNumber(sessionNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     * Checks whether the provided string is a valid session number.","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"     * @param test The string to test for validity.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     * @return True if the string is a valid session number, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    public static boolean isValidSessionNumber(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"     * Returns the session number as a string.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"     * @return The session number as a string.","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        return sessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     * Checks whether this SessionNumber is equal to another object.","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"        if (!(other instanceof SessionNumber)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        SessionNumber otherSessionNumber \u003d (SessionNumber) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"        return sessionNumber.equals(otherSessionNumber.sessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"     * Returns the hash code of this SessionNumber.","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"     * @return The hash code of the session number.","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        return sessionNumber.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ldinghan":78}},{"path":"src/main/java/seedu/address/model/session/SessionNumberContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":" * Tests that a {@code Session}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"public class SessionNumberContainsKeywordsPredicate implements Predicate\u003cSession\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    public SessionNumberContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    public boolean test(Session session) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"                .anyMatch(keyword -\u003e containsSubstringIgnoreCase(","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"                        session.getSessionNumber().sessionNumber, keyword));","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    private boolean containsSubstringIgnoreCase(String str, String substring) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        // Convert both the main string and substring to lowercase for a case-insensitive match","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        String lowerCaseStr \u003d str.toLowerCase();","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"        String lowerCaseSubstring \u003d substring.toLowerCase();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        // Check if the main string contains the substring","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        return lowerCaseStr.contains(lowerCaseSubstring);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        if (!(other instanceof SessionNumberContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"        SessionNumberContainsKeywordsPredicate otherNumberContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"                (SessionNumberContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        return keywords.equals(otherNumberContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        return new ToStringBuilder(this).add(\"session keywords\", keywords).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ldinghan":53}},{"path":"src/main/java/seedu/address/model/session/SessionStudents.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":" * Represents a collection of students in a session. This class provides methods for managing and manipulating","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":" * the set of students within a session.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"public class SessionStudents implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"            \"Session students must not be null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    /** The set of students in the session. */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    public final Set\u003cPerson\u003e students;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     * Constructs an empty SessionStudents object.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    public SessionStudents() {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"     * Constructs a SessionStudents object with a given set of students.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"     * @param students The set of students to initialize the object with.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    public SessionStudents(Set\u003cPerson\u003e students) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(students);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     * Constructs a SessionStudents object with a single student.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to add to the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    public SessionStudents(Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        this.students.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"     * Constructs a SessionStudents object with an array of students.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"     * @param students The students to add to the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"    public SessionStudents(Person ...students) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"        for (Person student : students) {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"            this.students.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"     * Adds a student to the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to add.","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"    public void add(Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"        this.students.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"     * Removes a student from the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to remove.","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"    public void remove(Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"        this.students.remove(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"     * Returns a string containing the names of the students in the session, sorted alphabetically.","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"     * @return A string with student names.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"    public String toStudentNames() {","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"        List\u003cPerson\u003e studentsArray \u003d new ArrayList\u003c\u003e(students);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"        studentsArray.sort(Comparator.comparing(p -\u003e p.getName().toString()));","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"        StringBuilder studentNames \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"        for (Person student : studentsArray) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"            studentNames.append(String.format(\"%s, \", student.getName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"        if (!students.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"            studentNames.delete(studentNames.length() - 2, studentNames.length());","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"        return studentNames.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"     * Creates and returns a new SessionStudents object with the same students as this one.","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"     * @return A new SessionStudents object with a copy of the students.","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"    public SessionStudents getStudents() {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"        SessionStudents anotherSet \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"        for (Person student : students) {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"            anotherSet.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"        return anotherSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"     * Checks if the session contains a specific student.","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to check for existence.","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"     * @return True if the student exists in the session, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"ldinghan"},"content":"    public boolean contains(Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"ldinghan"},"content":"        return students.contains(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"ldinghan"},"content":"     * Provides a stream of students in the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"ldinghan"},"content":"     * @return A stream of students.","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"ldinghan"},"content":"    public Stream\u003cPerson\u003e stream() {","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"ldinghan"},"content":"        return students.stream();","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"     * Returns the number of students in the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"     * @return The number of students in the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"ldinghan"},"content":"    public int size() {","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"        return students.size();","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"ldinghan"},"content":"     * Provides an iterator to iterate through the students in the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"ldinghan"},"content":"     * @return An iterator for the students in the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"ldinghan"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"ldinghan"},"content":"        return students.iterator();","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"ldinghan"},"content":"     * Returns a string representation of the students in the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"ldinghan"},"content":"     * @return A string representation of the students.","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"ldinghan"},"content":"        return students.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"ldinghan"},"content":"     * Checks if this SessionStudents object is equal to another object.","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"ldinghan"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"ldinghan"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"ldinghan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"ldinghan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"ldinghan"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"ldinghan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"ldinghan"},"content":"        if (!(other instanceof SessionStudents)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"ldinghan"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"ldinghan"},"content":"        SessionStudents otherSessionStudents \u003d (SessionStudents) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"ldinghan"},"content":"        return students.equals(otherSessionStudents.students);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"ldinghan"},"content":"     * Returns the hash code of this SessionStudents object.","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"ldinghan"},"content":"     * @return The hash code of the session students.","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"ldinghan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"ldinghan"},"content":"        return students.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ldinghan":196}},{"path":"src/main/java/seedu/address/model/session/exceptions/DuplicateSessionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" * Exception to indicate that an operation would result in duplicate sessions in the session list.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"public class DuplicateSessionException extends RuntimeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"     * Constructs a DuplicateSessionException with a default error message.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"    public DuplicateSessionException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        super(\"Operation would result in duplicate sessions\");","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    // You can also add additional constructors or methods if needed","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":16}},{"path":"src/main/java/seedu/address/model/session/exceptions/SessionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" * Exception to indicate that a requested session was not found in the session list.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"public class SessionNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"     * Constructs a SessionNotFoundException with a default error message.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"    public SessionNotFoundException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        super(\"Session not found\");","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    // You can also add additional constructors or methods if needed","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":16}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public class Task {","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    // Identity fields","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    private final TaskName taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    // Data fields","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    private final TaskDescription taskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private final TaskPriority priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Creates a new task with the given name, description, and completion status.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param taskName        The name of the task. Must not be null.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * @param taskDescription The description of the task. Must not be null.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * @param isDone          The completion status of the task.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public Task(TaskName taskName, TaskDescription taskDescription, boolean isDone, TaskPriority priority) {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(taskName, taskDescription);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     * Creates a new task with the given name and description.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * This task is initially marked as not done.","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     * @param taskName        The name of the task. Must not be null.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * @param taskDescription The description of the task. Must not be null.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public Task(TaskName taskName, TaskDescription taskDescription, TaskPriority priority) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(taskName, taskDescription);","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    public TaskName getName() {","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        return taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"    public TaskDescription getDescription() {","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        return taskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        return isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    public TaskPriority getPriority() {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        return priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     * Returns true if both tasks have the same name and description.","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 otherTask.getName().equals(getName())","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        return taskName.equals(otherTask.taskName)","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 taskDescription.equals(otherTask.taskDescription);","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        return Objects.hash(taskName, taskDescription, isDone, priority);","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"                .add(\"name\", taskName)","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"                .add(\"description\", taskDescription)","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"                .add(\"isDone\", isDone)","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"                .toString();","lastModifiedDate":"2023-09-27"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":118}},{"path":"src/main/java/seedu/address/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Represents a Task\u0027s description in the task list.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class TaskDescription {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description should not only consist of whitespace\";","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s+$).*$\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    public final String description;","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskDescription)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        TaskDescription otherTaskDescription \u003d (TaskDescription) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return description.equals(otherTaskDescription.description);","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        return description.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        return description.equals(\"\") ? \"No Description Provided\" : description;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":63}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" * unique in terms of identity in the TaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":" *","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":" *","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        if (index \u003e\u003d internalList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalArgumentException(\"Index is out of bounds\");","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    public void editTask(Task target, Task editedTask) {","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-09-27"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    public void setTasks(TaskList replacement) {","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-09-27"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-09-27"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskList)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"        TaskList otherUniquePersonList \u003d (TaskList) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-09-27"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"        return internalList.toString();","lastModifiedDate":"2023-09-27"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"                    return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"                }","lastModifiedDate":"2023-09-27"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"        return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":161}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Represents a Task\u0027s name in the task list.","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class TaskName {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"            \"Task Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    /*","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * The task names should ony consist of letters (both uppercase and lowercase),","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * digits, spaces, underscores, and hyphens","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[A-Za-z0-9_-])[-A-Za-z0-9\\\\s_-]*$\";","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    public final String taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    public TaskName(String name) {","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        taskName \u003d name;","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        return taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskName)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        TaskName otherTaskName \u003d (TaskName) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        return taskName.equals(otherTaskName.taskName);","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        return taskName.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":67}},{"path":"src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().taskName, keyword));","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"                (TaskNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this).add(\"task keywords\", keywords).toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":45}},{"path":"src/main/java/seedu/address/model/task/TaskPriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Enum representing the priority levels of tasks.","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public enum TaskPriority {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"     * Priority levels","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    LOW, MEDIUM, HIGH;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     * A constant message indicating the constraints for valid task priorities.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"TaskPriority should only be low, medium, or high\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":17}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" * identity).","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.Finals;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.MidTerms;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.PracticalExam;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.ReadingAssessment;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionStudents;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskPriority;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GRADED_TEST_1 \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"            \"Reading Assessment 1:- | Reading Assessment 2:- | MidTerms:3 | Finals:4 | Practical Exam:5\";","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GRADED_TEST_2 \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"            \"Reading Assessment 1:100 | Reading Assessment 2:100 | MidTerms:100 | Finals:100 | Practical Exam:100\";","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"    public static final Person PERSON_ALEX \u003d new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"            new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"            getTagSet(\"friends\"), getGradedTestSet(VALID_GRADED_TEST_1));","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"    public static final Person PERSON_BERNICE \u003d new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"            new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"            getTagSet(\"colleagues\", \"friends\"), getGradedTestSet(VALID_GRADED_TEST_1));","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"    public static final Person PERSON_CHARLOTTE \u003d new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"            new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"            getTagSet(\"neighbours\"), getGradedTestSet(VALID_GRADED_TEST_1));","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    public static final Person PERSON_DAVID \u003d new Person(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"            new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"            getTagSet(\"family\"), getGradedTestSet(VALID_GRADED_TEST_1));","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    public static final Person PERSON_IRFAN \u003d new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"            new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"            getTagSet(\"classmates\"), getGradedTestSet(VALID_GRADED_TEST_2));","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"    public static final Person PERSON_ROY \u003d new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"            new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"            getTagSet(\"colleagues\"), getGradedTestSet(VALID_GRADED_TEST_2));","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"        return new Person[] { PERSON_ALEX, PERSON_BERNICE, PERSON_CHARLOTTE, PERSON_DAVID, PERSON_IRFAN, PERSON_ROY };","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        return new Task[] {","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"            new Task(new TaskName(\"Do 2103T\"), new TaskDescription(\"Homework assignment\"), TaskPriority.HIGH),","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"            new Task(new TaskName(\"Do cs2101\"), new TaskDescription(\"Practice script\"), TaskPriority.HIGH),","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"            new Task(new TaskName(\"Do cs2100\"), new TaskDescription(\"Remember mips\"), TaskPriority.HIGH)","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        };","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"    public static Consultation[] getSampleConsultations() {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        return new Consultation[] { new Consultation(","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"                LocalDate.parse(\"11/11/2023\", dateFormatter),","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"                LocalTime.parse(\"11:11\", timeFormatter),","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"                SampleDataUtil.getStudentSet(PERSON_ALEX, PERSON_BERNICE)","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"        ), new Consultation(","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"                LocalDate.parse(\"01/11/2023\", dateFormatter),","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"                LocalTime.parse(\"10:00\", timeFormatter),","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"                SampleDataUtil.getStudentSet(PERSON_ALEX)","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"        ), new Consultation(","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"                LocalDate.parse(\"11/12/2023\", dateFormatter),","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"                LocalTime.parse(\"15:00\", timeFormatter),","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"                SampleDataUtil.getStudentSet(PERSON_DAVID, PERSON_IRFAN, PERSON_ROY)","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"        ),","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"        };","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"    public static Session[] getSampleSessions() {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"        return new Session[] {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"            new Session(new SessionNumber(\"1\"), new SessionStudents(getSamplePersons())),","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"            new Session(new SessionNumber(\"2\"), new SessionStudents(getSamplePersons()))","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        };","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"    public static GradedTest[] getSampleGradedTest() {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"        return new GradedTest[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"            new GradedTest(new ReadingAssessment(\"1\"), new ReadingAssessment(\"2\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"                    new MidTerms(\"3\"), new Finals(\"4\"), new PracticalExam(\"5\"))","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"        TaskListBook sampleTl \u003d new TaskListBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"            sampleTl.addTask(sampleTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        return sampleTl;","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"    public static ReadOnlyConsultationList getSampleConsultationList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"        ConsultationListBook sampleClb \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"        for (Consultation sampleConsultation : getSampleConsultations()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"            sampleClb.addConsultation(sampleConsultation);","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"        return sampleClb;","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"ldinghan"},"content":"    public static ReadOnlySessionList getSampleSessionList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"        SessionListBook sampleSl \u003d new SessionListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"ldinghan"},"content":"        for (Session sampleSession : getSampleSessions()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"ldinghan"},"content":"            sampleSl.addSession(sampleSession);","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"        return sampleSl;","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":155,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"raydenlim"},"content":"     * Returns a student set containing the list of person given.","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"    public static Set\u003cPerson\u003e getStudentSet(Person ... students) {","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"        return Arrays.stream(students)","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"raydenlim"},"content":"     * Returns a names set containing the list of string names given.","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"    public static Set\u003cName\u003e getNamesSet(String ... names) {","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"raydenlim"},"content":"        return Arrays.stream(names)","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"                .map(Name::new)","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"raydenlim"},"content":"    public static ReadOnlyGradedTestList getSampleGradedTestList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook sampleTl \u003d new GradedTestListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"raydenlim"},"content":"        for (GradedTest sampleGradedTest : getSampleGradedTest()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"            sampleTl.addGradedTest(sampleGradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"raydenlim"},"content":"        return sampleTl;","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"raydenlim"},"content":"     * Returns a gradedTest set containing the list of strings given.","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"    public static Set\u003cGradedTest\u003e getGradedTestSet(String... strings) {","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"raydenlim"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"                .map(GradedTest::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"raydenlim"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ldinghan":17,"Respirayson":23,"raydenlim":105,"-":44}},{"path":"src/main/java/seedu/address/storage/ConsultationListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":" * Represents a storage for {@link seedu.address.model.ConsultationListBook}.","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"public interface ConsultationListStorage {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     * @return The file path of the data file.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    Path getConsultationListFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     * Reads the consultation list data from the default file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     * @return An {@link Optional} containing the read {@link ReadOnlyConsultationList},","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     *         or an empty {@link Optional} if no data is found.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * @throws DataLoadingException If there is an error reading the data from the file.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    Optional\u003cReadOnlyConsultationList\u003e readConsultationList() throws DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     * Reads the consultation list data from the default file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * @return An {@link Optional} containing the read {@link ReadOnlyConsultationList},","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     *         or an empty {@link Optional} if no data is found.","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @throws DataLoadingException If there is an error reading the data from the file.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    Optional\u003cReadOnlyConsultationList\u003e readConsultationList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"     * Saves the consultation list data to the default file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"     * @param consultationList The {@link ReadOnlyConsultationList} to be saved.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there is an error writing the data to the file.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"    void saveConsultationList(ReadOnlyConsultationList consultationList) throws IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"     * Saves the consultation list data to the specified file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"     * @param consultationList The {@link ReadOnlyConsultationList} to be saved.","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"     * @param filePath   The file path to which the data should be saved.","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there is an error writing the data to the file.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    void saveConsultationList(ReadOnlyConsultationList consultationList, Path filePath) throws IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":55}},{"path":"src/main/java/seedu/address/storage/GradedTestListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":" * Represents a storage for {@link seedu.address.model.GradedTestListBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"public interface GradedTestListStorage {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    Path getGradedTestListFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"     * Returns GradedTest data as a {@link ReadOnlyGradedTestList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList() throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"     * @see #getGradedTestListFilePath()","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"     * Saves the given {@link ReadOnlyGradedTestList} to the storage.","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"     * @param gradedTestList cannot be null.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    void saveGradedTestList(ReadOnlyGradedTestList gradedTestList) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"     * @see #saveGradedTestList(ReadOnlyGradedTestList, Path)","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    void saveGradedTestList(ReadOnlyGradedTestList gradedTestList, Path filePath) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Grade;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"public class JsonAdaptedAssignment {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Assignment\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    private final String assignmentName;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    private final String grade;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given person details.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    public JsonAdaptedAssignment(@JsonProperty(\"assignmentName\") String assignmentName,","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        @JsonProperty(\"grade\") String grade) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    public JsonAdaptedAssignment(Assignment source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"        assignmentName \u003d source.name();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        grade \u003d source.gradeToString();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"     * Converts this Jackson-friendly adapted assignment object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assignment.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        if (assignmentName \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"                    AssignmentName.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"        final AssignmentName modelName \u003d new AssignmentName(assignmentName);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        if (grade \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"                    TaskDescription.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"        // Add valid grade checker later","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        final Grade modelGrade;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"        if (grade.startsWith(\"UNGRADED/\")) {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"            String maxGradeString \u003d grade.substring(9);","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"            modelGrade \u003d new Grade(maxGradeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"            String[] arrOfGradeStrings \u003d grade.split(\"/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"            String actualGradeString \u003d arrOfGradeStrings[0];","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"            String maxGradeString \u003d arrOfGradeStrings[1];","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"            modelGrade \u003d new Grade(actualGradeString, maxGradeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"        return new Assignment(modelName, modelGrade);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":71}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedConsultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":" * Jackson-friendly version of {@link Consultation}.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"public class JsonAdaptedConsultation {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    private final String date;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    private final String time;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    private final List\u003cJsonAdaptedPerson\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * * Constructs a {@code JsonAdaptedConsultation} with the given consultation details.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    public JsonAdaptedConsultation(@JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"                                   @JsonProperty(\"students\") List\u003cJsonAdaptedPerson\u003e students) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"        this.students.addAll(students);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    * Converts a given {@code Consultation} into this class for Jackson use.","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    */","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    public JsonAdaptedConsultation(Consultation source) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        date \u003d source.getDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"        time \u003d source.getTime().toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        students.addAll(source.getStudents().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"     * Converts this Jackson-friendly adapted consultation object into the model\u0027s {@code Consultation} object.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"     * @throws DateTimeParseException if there were date and time format constraints violated in the adapted","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"     *      consultation.","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    public Consultation toModelType() throws DateTimeParseException, IllegalValueException {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        // TODO check for invalid values of date and time","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"        LocalDate formattedDate \u003d LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"        LocalTime formattedTime \u003d LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"        final List\u003cPerson\u003e studentsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"            for (JsonAdaptedPerson student : students) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"                studentsList.add(student.toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"        final Set\u003cPerson\u003e studentSet \u003d new HashSet\u003c\u003e(studentsList);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"        return new Consultation(formattedDate, formattedTime, studentSet);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":75}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGradedTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.Finals;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.MidTerms;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.PracticalExam;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.ReadingAssessment;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":" * Jackson-friendly version of {@link GradedTest}.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"class JsonAdaptedGradedTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"GradedTest\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    private final String readingAssessment1;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"    private final String readingAssessment2;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"    private final String midTerms;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    private final String finals;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    private final String practicalExam;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code JsonAdaptedGradedTest} with the given gradedTest details","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    public JsonAdaptedGradedTest(@JsonProperty(\"Reading Assessment 1\") String readingAssessment1,","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"                                 @JsonProperty(\"Reading Assessment 2\") String readingAssessment2,","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"                                 @JsonProperty(\"MidTerms\") String midTerms,","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"                                 @JsonProperty(\"Finals\") String finals,","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"                                 @JsonProperty(\"Practical Exam\") String practicalExam) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"        this.readingAssessment1 \u003d readingAssessment1;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        this.readingAssessment2 \u003d readingAssessment2;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        this.midTerms \u003d midTerms;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"        this.finals \u003d finals;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        this.practicalExam \u003d practicalExam;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"     * Converts a given {@code GradedTest} into this class for Jackson use.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    public JsonAdaptedGradedTest(GradedTest source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"        readingAssessment1 \u003d source.getRA1().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        readingAssessment2 \u003d source.getRA2().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        midTerms \u003d source.getMidTerms().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        finals \u003d source.getFinals().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        practicalExam \u003d source.getPracticalExam().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code GradedTest} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted gradedTest.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    public GradedTest toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        if (readingAssessment1 \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"                    ReadingAssessment.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        if (!ReadingAssessment.isValidRaResult(readingAssessment1)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(ReadingAssessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"        final ReadingAssessment modelRA1 \u003d new ReadingAssessment(readingAssessment1);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"        if (readingAssessment2 \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"                    ReadingAssessment.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        if (!ReadingAssessment.isValidRaResult(readingAssessment2)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(ReadingAssessment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        final ReadingAssessment modelRA2 \u003d new ReadingAssessment(readingAssessment2);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"        if (midTerms \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"                    MidTerms.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        if (!MidTerms.isValidMidTermResult(midTerms)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(MidTerms.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        final MidTerms modelMidTerms \u003d new MidTerms(midTerms);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"        if (finals \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"                    Finals.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"        if (!Finals.isValidFinalsResult(finals)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(Finals.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"        final Finals modelFinals \u003d new Finals(finals);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"        if (practicalExam \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"                    PracticalExam.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"        if (!PracticalExam.isValidPeResult(practicalExam)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"            throw new IllegalValueException(PracticalExam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"        final PracticalExam modelPE \u003d new PracticalExam(practicalExam);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"        return new GradedTest(modelRA1, modelRA2, modelMidTerms, modelFinals, modelPE);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"raydenlim":107}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentMap;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.initialise.AssignmentInitialise;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    private final List\u003cJsonAdaptedGradedTest\u003e gradedTests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"    private final JsonSerializableAssignmentMap assignmentMap;","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"                             @JsonProperty(\"assignmentMap\") JsonSerializableAssignmentMap assignmentMap,","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"                             @JsonProperty(\"gradedTests\") List\u003cJsonAdaptedGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        if (gradedTests !\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"            this.gradedTests.addAll(gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        this.assignmentMap \u003d assignmentMap;","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"    public JsonAdaptedPerson(String name, String phone, String email, String address, List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"                             List\u003cJsonAdaptedGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        HashMap\u003cString, JsonAdaptedAssignment\u003e jsonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c AssignmentInitialise.size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"            String assignmentName \u003d AssignmentInitialise.getAssignmentName(i).toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"            String assignmentGrade \u003d AssignmentInitialise.getAssignmentMaxGrade(i).toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"            jsonMap.put(assignmentName, new JsonAdaptedAssignment(assignmentName, assignmentGrade));","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"        this.assignmentMap \u003d new JsonSerializableAssignmentMap(jsonMap);","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"        HashMap\u003cString, JsonAdaptedAssignment\u003e jsonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c AssignmentInitialise.size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"            AssignmentName assignmentName \u003d AssignmentInitialise.getAssignmentName(i);","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"Originalidk"},"content":"            Assignment assignment \u003d source.getAllAssignments().get(assignmentName);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"            jsonMap.put(assignmentName.toString(),","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"                    new JsonAdaptedAssignment(assignment));","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"        this.assignmentMap \u003d new JsonSerializableAssignmentMap(jsonMap);","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"        gradedTests.addAll(source.getGradedTest().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"                .map(JsonAdaptedGradedTest::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"        final List\u003cGradedTest\u003e personGradedTests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"        for (JsonAdaptedGradedTest gradedTest : gradedTests) {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"            personGradedTests.add(gradedTest.toModelType());","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"        final Set\u003cGradedTest\u003e modelGradedTests \u003d new HashSet\u003c\u003e(personGradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"Originalidk"},"content":"        final AssignmentMap assignments \u003d new AssignmentMap();","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"Originalidk"},"content":"        HashMap\u003cString, JsonAdaptedAssignment\u003e jsonMap \u003d assignmentMap.getAssignments();","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"Originalidk"},"content":"        HashMap\u003cAssignmentName, Assignment\u003e actualMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c AssignmentInitialise.size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"Originalidk"},"content":"            AssignmentName assignmentName \u003d AssignmentInitialise.getAssignmentName(i);","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"Originalidk"},"content":"            Assignment assignment \u003d jsonMap.get(assignmentName.toString()).toModelType();","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"Originalidk"},"content":"            actualMap.put(assignmentName, assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"Originalidk"},"content":"        assignments.setAssignmentMap(actualMap);","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, assignments, modelGradedTests);","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"raydenlim":24,"Originalidk":32,"-":117}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSession.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionStudents;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":" * Jackson-friendly version of {@link Session}.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"public class JsonAdaptedSession {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    private final String sessionNumber;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    private final List\u003cJsonAdaptedPerson\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     * Constructs a {@code JsonAdaptedSession} with the given {@code sessionInfo}.","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    public JsonAdaptedSession(@JsonProperty(\"sessionNumber\") String sessionNumber,","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"            @JsonProperty(\"students\") List\u003cJsonAdaptedPerson\u003e students) {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        this.students.addAll(students);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"     * Converts a given {@code Session} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    public JsonAdaptedSession(Session source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d source.getSessionNumber().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        if (source.getStudents() !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"            students.addAll(source.getStudents().stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"                    .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     * Converts this Jackson-friendly adapted session object into the model\u0027s {@code Session} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted session.","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"    public Session toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        if (sessionNumber \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"            throw new IllegalValueException(SessionNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"        final SessionNumber modelSessionNumber \u003d new SessionNumber(sessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"        final List\u003cPerson\u003e studentsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"        SessionStudents sessionStudents \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"            for (JsonAdaptedPerson student : students) {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"                studentsList.add(student.toModelType());","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"            final Set\u003cPerson\u003e studentSet \u003d new HashSet\u003c\u003e(studentsList);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"            sessionStudents \u003d new SessionStudents(studentSet);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"        return new Session(modelSessionNumber, sessionStudents);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":74}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskPriority;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    private final String name;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private final String description;","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private final String priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given task details.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    @JsonCreator","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"                           @JsonProperty(\"isDone\") boolean isDone, @JsonProperty(\"priority\") String priority) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        name \u003d source.getName().taskName;","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        isDone \u003d source.getIsDone();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        priority \u003d source.getPriority().name();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"                    TaskName.class.getSimpleName()));","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        if (!TaskName.isValidName(name)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        final TaskName modelName \u003d new TaskName(name);","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"                    TaskDescription.class.getSimpleName()));","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        if (!TaskDescription.isValidDescription(description)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        final TaskDescription modelDescription \u003d new TaskDescription(description);","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        final TaskPriority modelPriority;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"                    TaskPriority.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"            modelPriority \u003d TaskPriority.valueOf(priority);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(TaskPriority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"        return new Task(modelName, modelDescription, isDone, modelPriority);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":84}},{"path":"src/main/java/seedu/address/storage/JsonConsultationListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":" * A class to access ConsultationList data stored as a JSON file on the hard disk.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"public class JsonConsultationListStorage implements ConsultationListStorage {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonConsultationListStorage.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * Constructs a JsonConsultationListStorage with the specified file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     * @param filePath The file path for storing the ConsultationList data.","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    public JsonConsultationListStorage(Path filePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * Returns the file path of the ConsultationList data.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"     * @return The file path of the ConsultationList data.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    public Path getConsultationListFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        return filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     * Reads the ConsultationList data from the file specified during construction.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"     * @return An {@link Optional} containing the read ConsultationList data, or an empty","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"     *         Optional if the file does not exist.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"     * @throws DataLoadingException If there is an error reading the data or the","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"     *         data does not conform to the expected format.","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"    public Optional\u003cReadOnlyConsultationList\u003e readConsultationList() throws DataLoadingException {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"        return readConsultationList(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"     * Reads the ConsultationList data from the specified file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"     * @param filePath The file path to read the ConsultationList data from.","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"     * @return An {@link Optional} containing the read ConsultationList data,","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"     *         or an empty Optional if the file does not exist.","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"     * @throws DataLoadingException If there is an error reading the data or","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"     *         the data does not conform to the expected format.","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"    public Optional\u003cReadOnlyConsultationList\u003e readConsultationList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"        Optional\u003cJsonSerializableConsultationList\u003e jsonConsultationList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"                filePath, JsonSerializableConsultationList.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"        if (!jsonConsultationList.isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"            return Optional.of(jsonConsultationList.get().toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"     * Saves the given ConsultationList data to the file specified during construction.","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"     * @param consultationList The ConsultationList data to be saved.","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there is an error saving the data to the file.","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"    public void saveConsultationList(ReadOnlyConsultationList consultationList) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"        saveConsultationList(consultationList, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"     * Saves the given ConsultationList data to the specified file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"     * @param consultationList The ConsultationList data to be saved.","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"     * @param filePath The file path where the data should be saved.","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there is an error saving the data to the file.","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"wesho1107"},"content":"    public void saveConsultationList(ReadOnlyConsultationList consultationList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"wesho1107"},"content":"        requireAllNonNull(consultationList, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"wesho1107"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"wesho1107"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableConsultationList(consultationList), filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":109}},{"path":"src/main/java/seedu/address/storage/JsonGradedTestListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":" * A class to access GradedTestList data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"public class JsonGradedTestListStorage implements GradedTestListStorage {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonGradedTestListStorage.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"    public JsonGradedTestListStorage(Path filePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    public Path getGradedTestListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        return filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    public Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"        return readGradedTestList(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"     * Similar to {@link #readGradedTestList()}.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    public Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        Optional\u003cJsonSerializableGradedTestList\u003e jsonGradedTestList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"                filePath, JsonSerializableGradedTestList.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        if (!jsonGradedTestList.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"            return Optional.of(jsonGradedTestList.get().toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    public void saveGradedTestList(ReadOnlyGradedTestList gradedTestList) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        saveGradedTestList(gradedTestList, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"     * Similar to {@link #saveGradedTestList(ReadOnlyGradedTestList)}.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"    public void saveGradedTestList(ReadOnlyGradedTestList gradedTestList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(gradedTestList);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableGradedTestList(gradedTestList), filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAssignmentMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.ReadOnlyAssignmentMap;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.initialise.AssignmentInitialise;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":" * An Immutable AssignmentMap that is serializable to JSON format.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"@JsonRootName(\"assignmentMap\")","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"public class JsonSerializableAssignmentMap {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"    private final HashMap\u003cString, JsonAdaptedAssignment\u003e assignments;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"     * Constructs a {@code JsonSerializableAssignmentMap} with the given persons.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"    public JsonSerializableAssignmentMap(","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"            @JsonProperty(\"assignments\") HashMap\u003cString, JsonAdaptedAssignment\u003e assignments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"     * Converts a given {@code ReadOnlyAssignmentMap} into this class for Jackson use.","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAssignmentMap}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"    public JsonSerializableAssignmentMap(ReadOnlyAssignmentMap source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"        this.assignments \u003d new HashMap\u003cString, JsonAdaptedAssignment\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"        for (int i \u003d 0; i \u003c AssignmentInitialise.size(); i++) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"            AssignmentName assignmentName \u003d AssignmentInitialise.getAssignmentName(i);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"            JsonAdaptedAssignment assignmentToBeAdded \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"                    new JsonAdaptedAssignment(source.getAssignmentMap().get(assignmentName));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"            this.assignments.put(assignmentName.toString(), assignmentToBeAdded);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"    public HashMap\u003cString, JsonAdaptedAssignment\u003e getAssignments() {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        return this.assignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Originalidk":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableConsultationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":" * An Immutable ConsultationList that is serializable to JSON format.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"@JsonRootName(value \u003d \"consultationlist\")","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"public class JsonSerializableConsultationList {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    public static final String MESSAGE_DUPLICATE_CONSULTATION \u003d \"Consultation list contains duplicate consultation(s).\";","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    private final List\u003cJsonAdaptedConsultation\u003e consultations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    public JsonSerializableConsultationList(@JsonProperty(\"consultations\")","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"                                                List\u003cJsonAdaptedConsultation\u003e consultations) {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        this.consultations.addAll(consultations);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * Converts a given {@code ReadOnlyConsultationList} into this class for Jackson use.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableConsultationList}.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public JsonSerializableConsultationList(ReadOnlyConsultationList source) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        consultations.addAll(source.getConsultationList().stream().map(JsonAdaptedConsultation::new)","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     * Converts this consultation list into the model\u0027s {@code ConsultationListBook} object.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    public ConsultationListBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook consultationList \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        for (JsonAdaptedConsultation jsonAdaptedConsultation : consultations) {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"            Consultation consultation \u003d jsonAdaptedConsultation.toModelType();","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"            if (consultationList.hasConsultation(consultation)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONSULTATION);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"            consultationList.addConsultation(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        return consultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":58}},{"path":"src/main/java/seedu/address/storage/JsonSerializableGradedTestList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"@JsonRootName(value \u003d \"gradedtestlist\")","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"class JsonSerializableGradedTestList {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    public static final String MESSAGE_DUPLICATE_GRADED_TEST \u003d \"Graded list contains duplicate gradedTest(s).\";","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"    private final List\u003cJsonAdaptedGradedTest\u003e gradedTests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"     * Constructs a {@code JsonSerializableGradedTestList} with the given gradedTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    public JsonSerializableGradedTestList(@JsonProperty(\"gradedTests\")","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"            List\u003cJsonAdaptedGradedTest\u003e gradedTests) {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        this.gradedTests.addAll(gradedTests);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"     * Converts a given {@code ReadOnlyGradedTestList} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableGradedTestList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    public JsonSerializableGradedTestList(ReadOnlyGradedTestList source) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"        gradedTests.addAll(source.getGradedTestList().stream().map(JsonAdaptedGradedTest::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"     * Converts this gradedTest list into the model\u0027s {@code GradedTestListBook} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"    public GradedTestListBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook gradedTestList \u003d new GradedTestListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        for (JsonAdaptedGradedTest jsonAdaptedGradedTest : gradedTests) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"            GradedTest gradedTest \u003d jsonAdaptedGradedTest.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"            if (gradedTestList.hasGradedTest(gradedTest)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GRADED_TEST);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"            gradedTestList.addGradedTest(gradedTest);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        return gradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":62}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSessionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":" * An Immutable SessionList that is serializable to JSON format.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"@JsonRootName(value \u003d \"sessionlist\")","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"public class JsonSerializableSessionList {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    public static final String MESSAGE_DUPLICATE_SESSION \u003d \"Session list contains duplicate session(s).\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    private final List\u003cJsonAdaptedSession\u003e sessions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    public JsonSerializableSessionList(@JsonProperty(\"sessions\") List\u003cJsonAdaptedSession\u003e sessions) {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"        this.sessions.addAll(sessions);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     * Converts a given {@code ReadOnlySessionList} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSessionList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    public JsonSerializableSessionList(ReadOnlySessionList source) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        sessions.addAll(source.getSessionList().stream().map(JsonAdaptedSession::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"     * Converts this session list into the model\u0027s {@code SessionListBook} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"    public SessionListBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        SessionListBook sessionList \u003d new SessionListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"        for (JsonAdaptedSession jsonAdaptedSession : sessions) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"            Session session \u003d jsonAdaptedSession.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"            if (sessionList.hasSession(session)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SESSION);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"            sessionList.addSession(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"        return sessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":56}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"class JsonSerializableTaskList {","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    @JsonCreator","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * Converts a given {@code ReadOnlyTaskList} into this class for Jackson use.","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskList}.","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     * Converts this task list into the model\u0027s {@code TaskListBook} object.","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    public TaskListBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        TaskListBook taskList \u003d new TaskListBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"            if (taskList.hasTask(task)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        return taskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":60}},{"path":"src/main/java/seedu/address/storage/JsonSessionListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":" * A class to access SessionList data stored as a JSON file on the hard disk.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"public class JsonSessionListStorage implements SessionListStorage {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSessionListStorage.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"     * Constructs a JsonSessionListStorage with the specified file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     * @param filePath The file path for storing the SessionList data.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    public JsonSessionListStorage(Path filePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"     * Returns the file path of the SessionList data.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"     * @return The file path of the SessionList data.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    public Path getSessionListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        return filePath;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     * Reads the SessionList data from the file specified during construction.","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"     * @return An {@link Optional} containing the read SessionList data, or an empty","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"     *         Optional if the file does not exist.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"     * @throws DataLoadingException If there is an error reading the data or the","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     *         data does not conform to the expected format.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"    public Optional\u003cReadOnlySessionList\u003e readSessionList() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"        return readSessionList(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"     * Reads the SessionList data from the specified file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"     * @param filePath The file path to read the SessionList data from.","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"     * @return An {@link Optional} containing the read SessionList data,","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"     *         or an empty Optional if the file does not exist.","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"     * @throws DataLoadingException If there is an error reading the data or","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"     *         the data does not conform to the expected format.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"    public Optional\u003cReadOnlySessionList\u003e readSessionList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"        Optional\u003cJsonSerializableSessionList\u003e jsonSessionList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"                filePath, JsonSerializableSessionList.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"        if (!jsonSessionList.isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"            return Optional.of(jsonSessionList.get().toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"     * Saves the given SessionList data to the file specified during construction.","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"     * @param sessionList The SessionList data to be saved.","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"     * @throws IOException If there is an error saving the data to the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"    public void saveSessionList(ReadOnlySessionList sessionList) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"        saveSessionList(sessionList, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"     * Saves the given SessionList data to the specified file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"     * @param sessionList The SessionList data to be saved.","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"     * @param filePath The file path where the data should be saved.","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"     * @throws IOException If there is an error saving the data to the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"    public void saveSessionList(ReadOnlySessionList sessionList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"        requireAllNonNull(sessionList, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSessionList(sessionList), filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":106}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" * A class to access TaskList data stored as a json file on the hard disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private Path filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        return filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * Similar to {@link #readTaskList()}.","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        if (!jsonTaskList.isPresent()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":80}},{"path":"src/main/java/seedu/address/storage/SessionListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":" * Represents a storage for {@link seedu.address.model.SessionListBook}.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"public interface SessionListStorage {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"     * @return The file path of the data file.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    Path getSessionListFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"     * Reads the session list data from the default file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"     * @return An {@link Optional} containing the read {@link ReadOnlySessionList},","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"     *         or an empty {@link Optional} if no data is found.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"     * @throws DataLoadingException If there is an error reading the data from the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    Optional\u003cReadOnlySessionList\u003e readSessionList() throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"     * Reads the session list data from the specified file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"     * @param filePath The file path from which to read the session list data.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"     * @return An {@link Optional} containing the read {@link ReadOnlySessionList},","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"     *         or an empty {@link Optional} if no data is found.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"     * @throws DataLoadingException If there is an error reading the data from the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    Optional\u003cReadOnlySessionList\u003e readSessionList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"     * Saves the session list data to the default file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     * @param sessionList The {@link ReadOnlySessionList} to be saved.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"     * @throws IOException If there is an error writing the data to the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    void saveSessionList(ReadOnlySessionList sessionList) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     * Saves the session list data to the specified file path.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"     * @param sessionList The {@link ReadOnlySessionList} to be saved.","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"     * @param filePath   The file path to which the data should be saved.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"     * @throws IOException If there is an error writing the data to the file.","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    void saveSessionList(ReadOnlySessionList sessionList, Path filePath) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":56}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage,","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"        TaskListStorage, SessionListStorage, ConsultationListStorage, GradedTestListStorage {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    Optional\u003cReadOnlySessionList\u003e readSessionList() throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    void saveSessionList(ReadOnlySessionList sessionList) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    Optional\u003cReadOnlyConsultationList\u003e readConsultationList() throws DataLoadingException;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    void saveConsultationList(ReadOnlyConsultationList consultationList) throws IOException;","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"    Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList() throws DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    void saveGradedTestList(ReadOnlyGradedTestList gradedTestList, Path filePath) throws IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ldinghan":7,"Respirayson":6,"raydenlim":17,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    private GradedTestListStorage gradedTestListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    private SessionListStorage sessionListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    private ConsultationListStorage consultationListStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}, {@code UserPrefStorage},","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"     * {@code TaskListStorage}, {@code SessionListStorage} and {@code ConsultationListStorage}.","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"                          UserPrefsStorage userPrefsStorage, TaskListStorage taskListStorage,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"                          SessionListStorage sessionListStorage, ConsultationListStorage consultationListStorage,","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"                          GradedTestListStorage gradedTestListStorage) {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        this.sessionListStorage \u003d sessionListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        this.consultationListStorage \u003d consultationListStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        this.gradedTestListStorage \u003d gradedTestListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SessionList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"    public Path getSessionListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"        return sessionListStorage.getSessionListFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"    public Optional\u003cReadOnlySessionList\u003e readSessionList() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"        return readSessionList(sessionListStorage.getSessionListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"    public Optional\u003cReadOnlySessionList\u003e readSessionList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"        return sessionListStorage.readSessionList(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"    public void saveSessionList(ReadOnlySessionList sessionList) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"        saveSessionList(sessionList, sessionListStorage.getSessionListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"    public void saveSessionList(ReadOnlySessionList sessionList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"        sessionListStorage.saveSessionList(sessionList, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ConsultationList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"    public Path getConsultationListFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"raydenlim"},"content":"        return consultationListStorage.getConsultationListFilePath();","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"    public Optional\u003cReadOnlyConsultationList\u003e readConsultationList() throws DataLoadingException {","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"        return readConsultationList(consultationListStorage.getConsultationListFilePath());","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"    public Optional\u003cReadOnlyConsultationList\u003e readConsultationList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"        return consultationListStorage.readConsultationList(filePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"raydenlim"},"content":"    public void saveConsultationList(ReadOnlyConsultationList consultationList) throws IOException {","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"raydenlim"},"content":"        saveConsultationList(consultationList, consultationListStorage.getConsultationListFilePath());","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"raydenlim"},"content":"    public void saveConsultationList(ReadOnlyConsultationList consultationList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"        consultationListStorage.saveConsultationList(consultationList, filePath);","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-09-28"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2023-09-28"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":162,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":163,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":164,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":165,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":166,"author":{"gitId":"Respirayson"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":167,"author":{"gitId":"Respirayson"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":169,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":170,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":171,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":172,"author":{"gitId":"Respirayson"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":173,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":174,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":175,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":176,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":177,"author":{"gitId":"Respirayson"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":178,"author":{"gitId":"Respirayson"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":179,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":180,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":181,"author":{"gitId":"raydenlim"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GradedTest methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"    public Path getGradedTestListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"raydenlim"},"content":"        return gradedTestListStorage.getGradedTestListFilePath();","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"raydenlim"},"content":"    public Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"raydenlim"},"content":"        return readGradedTestList(gradedTestListStorage.getGradedTestListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"raydenlim"},"content":"    public Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"raydenlim"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"raydenlim"},"content":"        return gradedTestListStorage.readGradedTestList(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"raydenlim"},"content":"    public void saveGradedTestList(ReadOnlyGradedTestList gradedTestList) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"raydenlim"},"content":"        saveGradedTestList(gradedTestList, gradedTestListStorage.getGradedTestListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"raydenlim"},"content":"    public void saveGradedTestList(ReadOnlyGradedTestList gradedTestList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"raydenlim"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"raydenlim"},"content":"        gradedTestListStorage.saveGradedTestList(gradedTestList, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ldinghan":31,"Respirayson":34,"raydenlim":68,"-":76}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * Represents a storage for {@link seedu.address.model.TaskListBook}.","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public interface TaskListStorage {","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * Returns TaskList data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @see #getTaskListFilePath()","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     * @see #saveTaskList(ReadOnlyTaskList)","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":45}},{"path":"src/main/java/seedu/address/ui/ConsultationCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" * A UI component that displays information of a {@code Consultation}.","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"public class ConsultationCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    private static final String FXML \u003d \"ConsultationListCard.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    public final Consultation consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    private Label id;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    private Label date;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    private Label time;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    private FlowPane students;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     * Creates a {@code ConsultationCard} with the given {@code Consultation} and index to display.","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    public ConsultationCard(Consultation consultation, int displayedIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"        this.consultation \u003d consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"        date.setText(consultation.getDate().toString() + \", \");","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        time.setText(consultation.getTime().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        consultation.getStudents().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"                .sorted(Comparator.comparing(student -\u003e student.getName().fullName))","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"                .forEach(student -\u003e students.getChildren().add(new Label(student.getName().fullName)));","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":43}},{"path":"src/main/java/seedu/address/ui/ConsultationListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" * Panel containing the list of consultations","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"public class ConsultationListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    private static final String FXML \u003d \"ConsultationListPanel.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ConsultationListPanel.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    private ListView\u003cConsultation\u003e consultationListView;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     * Creates a {@code ConsultationListPanel} with the given {@code ObservableList}","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    public ConsultationListPanel(ObservableList\u003cConsultation\u003e consultationList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        consultationListView.setItems(consultationList);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        consultationListView.setCellFactory(listView -\u003e new ConsultationListViewCell());","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Consultation} using a {@code ConsultationCard}.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    class ConsultationListViewCell extends ListCell\u003cConsultation\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"        protected void updateItem(Consultation consultation, boolean empty) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"            super.updateItem(consultation, empty);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"            if (empty || consultation \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"                setText(null);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"            } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"                setGraphic(new ConsultationCard(consultation, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":48}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    private ConsultationListPanel consultationListPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    private SessionListPanel sessionListPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    private StackPane consultationListPanelPlaceholder;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"    private StackPane sessionListPanelPlaceholder;","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"wesho1107"},"content":"        consultationListPanel \u003d new ConsultationListPanel(logic.getFilteredConsultationList());","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"wesho1107"},"content":"        consultationListPanelPlaceholder.getChildren().add(consultationListPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"        sessionListPanel \u003d new SessionListPanel(logic.getFilteredSessionList());","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"        sessionListPanelPlaceholder.getChildren().add(sessionListPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ldinghan":7,"Respirayson":7,"-":196,"wesho1107":7}},{"path":"src/main/java/seedu/address/ui/SessionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":" * Represents a UI component that displays information about a session in the user interface.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"public class SessionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    private static final String FXML \u003d \"SessionListCard.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    /** The session associated with this card. */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"    public final Session session;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    private Label sessionNumberLabel;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    private Label studentListLabel;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"     * Creates a `SessionCard` object to display information about a session.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     * @param session The session to display information about.","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    public SessionCard(Session session) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        this.session \u003d session;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"        sessionNumberLabel.setText(session.getSessionNumber() + \". \");","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        studentListLabel.setText(session.getStudents().toStudentNames());","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ldinghan":36}},{"path":"src/main/java/seedu/address/ui/SessionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":" * Represents a UI component that displays a list of sessions in the user interface.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"public class SessionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"    private static final String FXML \u003d \"SessionListPanel.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SessionListPanel.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    private ListView\u003cSession\u003e sessionListView;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"     * Creates a `SessionListPanel` with the given `ObservableList` of sessions.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     * @param sessionList The list of sessions to display.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    public SessionListPanel(ObservableList\u003cSession\u003e sessionList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        sessionListView.setItems(sessionList);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        sessionListView.setCellFactory(listView -\u003e new SessionListViewCell());","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"     * Custom `ListCell` that displays the graphics of a `Session` using a `SessionCard`.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    class SessionListViewCell extends ListCell\u003cSession\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        protected void updateItem(Session session, boolean empty) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"            super.updateItem(session, empty);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"            if (empty || session \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"                setText(null);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"            } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"                setGraphic(new SessionCard(session).getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ldinghan":51}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * A UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public final Task task;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private Text name;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private Label id;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    private Text description;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    private Text priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        name.setText(task.getName().taskName);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        priority.setText(task.getPriority().name());","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        switch(task.getPriority()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        case LOW:","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"            priority.setStyle(\"-fx-fill: green\");","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        case MEDIUM:","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"            priority.setStyle(\"-fx-fill: yellow\");","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        case HIGH:","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"            priority.setStyle(\"-fx-fill: red\");","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"            break;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"            priority.setStyle(\"-fx-fill: white\");","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        name.setStrikethrough(task.getIsDone());","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        description.setStrikethrough(task.getIsDone());","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        priority.setStrikethrough(task.getIsDone());","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":60}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":49}},{"path":"src/main/resources/view/ConsultationListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"                \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$date\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"                \u003cLabel fx:id\u003d\"time\" text\u003d\"\\$time\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"            \u003cFlowPane fx:id\u003d\"students\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":39}},{"path":"src/main/resources/view/ConsultationListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    \u003cListView fx:id\u003d\"consultationListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"wesho1107"},"content":"#tags, #students {","lastModifiedDate":"2023-10-19"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"wesho1107"},"content":"#tags .label, #students .label {","lastModifiedDate":"2023-10-19"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":350,"wesho1107":2}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":".section-label {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":6,"-":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"         title\u003d\"Address App\" minWidth\u003d\"600\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        \u003cHBox styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"          \u003cVBox fx:id\u003d\"personList\"  minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"            \u003cLabel text\u003d\"Person List\" maxWidth\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"section-label\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"          \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"            \u003cLabel text\u003d\"Task List\" maxWidth\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"section-label\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"taskListPanelPlaceholder\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"          \u003cVBox fx:id\u003d\"consultationList\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"            \u003cLabel text\u003d\"Consultation List\" maxWidth\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"section-label\"/\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"consultationListPanelPlaceholder\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"          \u003cVBox fx:id\u003d\"sessionList\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"            \u003cLabel text\u003d\"Session List\" maxWidth\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"section-label\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"sessionListPanelPlaceholder\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ldinghan":4,"Respirayson":9,"raydenlim":9,"-":55}},{"path":"src/main/resources/view/SessionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"\u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"                    \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"            \u003cLabel fx:id\u003d\"sessionNumberLabel\" text\u003d\"\\$sessionNumberLabel\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        \u003cLabel fx:id\u003d\"studentListLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentListLabel\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ldinghan":34}},{"path":"src/main/resources/view/SessionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"\u003cListView fx:id\u003d\"sessionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ldinghan":8}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"                \u003cText fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-fill: white;\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"            \u003cText fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" style\u003d\"-fx-fill: white;\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"            \u003cText fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" style\u003d\"-fx-fill: white;\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":37}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.JsonConsultationListStorage;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"import seedu.address.storage.JsonGradedTestListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"import seedu.address.storage.JsonSessionListStorage;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        JsonGradedTestListStorage gradedTestListStorage \u003d new JsonGradedTestListStorage(","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"                temporaryFolder.resolve(\"gradedTestList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"        JsonSessionListStorage sessionListStorage \u003d new JsonSessionListStorage(","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"                temporaryFolder.resolve(\"sessionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        JsonConsultationListStorage consultationListStorage \u003d new JsonConsultationListStorage(","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"                temporaryFolder.resolve(\"consultationList.json\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"                taskListStorage, sessionListStorage, consultationListStorage, gradedTestListStorage);","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"    public void getFilteredConsultationList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredConsultationList().remove(0));","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"    public void getFilteredSessionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredSessionList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":190,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":191,"author":{"gitId":"Respirayson"},"content":"                new JsonTaskListStorage(temporaryFolder.resolve(\"ExceptionTaskList.json\"));","lastModifiedDate":"2023-09-28"},{"lineNumber":192,"author":{"gitId":"raydenlim"},"content":"        JsonGradedTestListStorage gradedTestListStorage \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"raydenlim"},"content":"                new JsonGradedTestListStorage(temporaryFolder.resolve(\"ExceptionGradedTestList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"ldinghan"},"content":"        JsonSessionListStorage sessionListStorage \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"ldinghan"},"content":"                new JsonSessionListStorage(temporaryFolder.resolve(\"ExceptionSessionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"raydenlim"},"content":"        JsonConsultationListStorage consultationListStorage \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"raydenlim"},"content":"                new JsonConsultationListStorage(temporaryFolder.resolve(\"ExceptionConsultationList.json\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"raydenlim"},"content":"                taskListStorage, sessionListStorage, consultationListStorage, gradedTestListStorage);","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ldinghan":11,"Respirayson":5,"raydenlim":23,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ldinghan":1,"Respirayson":1,"raydenlim":7,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":123,"wesho1107":1}},{"path":"src/test/java/seedu/address/logic/commands/AddGradeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_400;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ASSIGNMENT_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.Grade;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"public class AddGradeCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    public void execute_addGrade_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(VALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"        Grade actualGrade \u003d new Grade(GRADE_400, personToEdit.getAssignment(assignmentName).maxGrade());","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommand \u003d new AddGradeCommand(targetIndex, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"        Person editedPerson \u003d addGradeCommand.createGradedPerson(personToEdit, actualGrade);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        String expectedMessage \u003d String.format(AddGradeCommand.MESSAGE_SUCCESS, VALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"                new UserPrefs(), new TaskListBook(), new SessionListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"                new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"        assertCommandSuccess(addGradeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    public void execute_invalidAssignment_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(INVALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommand \u003d new AddGradeCommand(INDEX_FIRST_PERSON, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"        assertCommandFailure(addGradeCommand, model, assignmentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(VALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommand \u003d new AddGradeCommand(outOfBoundIndex, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"        assertCommandFailure(addGradeCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Originalidk"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Originalidk"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Originalidk"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Originalidk"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Originalidk"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(VALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommand \u003d new AddGradeCommand(outOfBoundIndex, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Originalidk"},"content":"        assertCommandFailure(addGradeCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Originalidk"},"content":"    public void test_sameObject_equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(VALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommand \u003d new AddGradeCommand(INDEX_FIRST_PERSON, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Originalidk"},"content":"        assertEquals(addGradeCommand, addGradeCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Originalidk"},"content":"    public void test_differentObject_equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(VALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommand \u003d new AddGradeCommand(INDEX_FIRST_PERSON, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"        assertFalse(addGradeCommand.equals(assignmentName));","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Originalidk"},"content":"    public void test_differentObjectSameContent_equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(VALID_ASSIGNMENT_NAME);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommandFirst \u003d new AddGradeCommand(INDEX_FIRST_PERSON, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"Originalidk"},"content":"        AddGradeCommand addGradeCommandSecond \u003d new AddGradeCommand(INDEX_FIRST_PERSON, assignmentName, GRADE_400);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"        assertEquals(addGradeCommandFirst, addGradeCommandSecond);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"raydenlim":4,"Originalidk":113}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ldinghan":1,"Respirayson":1,"raydenlim":7,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINALS;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MIDTERMS;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRACTICAL_EXAM;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_READING_ASSESSMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GT_RA1 \u003d \"1.0\";","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GT_RA2 \u003d \"2\";","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GT_MIDTERMS \u003d \"3\";","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GT_FINALS \u003d \"4\";","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GT_PE \u003d \"5\";","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GRADED_TEST_1 \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"            \"Reading Assessment 1:- | Reading Assessment 2:- | MidTerms:3 | Finals:4 | Practical Exam:5\";","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_GRADED_TEST_2 \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"            \"Reading Assessment 1:100 | Reading Assessment 2:100 | MidTerms:100 | Finals:100 | Practical Exam:100\";","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    public static final String VALID_TASK_NAME \u003d \"Do cs2103t\";","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public static final String VALID_TASK_DESCRIPTION \u003d \"Complete PRS\";","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"    public static final String VALID_ASSIGNMENT_NAME \u003d \"Finding ELDRIC\";","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"    public static final String INVALID_ASSIGNMENT_NAME \u003d \"Finding BOYD\";","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"    public static final String GRADE_400 \u003d \"400\";","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_DATE \u003d \"11/11/2023\";","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_TIME \u003d \"11:11\";","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"    public static final LocalDate VALID_DATE_OBJ \u003d LocalDate.parse(VALID_DATE,","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"    public static final LocalTime VALID_TIME_OBJ \u003d LocalTime.parse(VALID_TIME,","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"            DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"    public static final String GT_DESC_DEFAULT \u003d \" \" + PREFIX_GRADED_TEST + VALID_GRADED_TEST_1;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"    public static final String GT_DESC_100 \u003d \" \" + PREFIX_GRADED_TEST + VALID_GRADED_TEST_2;","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"    public static final String GT_DESC_RA1 \u003d \" \" + PREFIX_READING_ASSESSMENT + VALID_GT_RA1;","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"    public static final String GT_DESC_RA2 \u003d \" \" + PREFIX_READING_ASSESSMENT + VALID_GT_RA2;","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"    public static final String GT_DESC_MIDTERMS \u003d \" \" + PREFIX_MIDTERMS + VALID_GT_MIDTERMS;","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    public static final String GT_DESC_FINALS \u003d \" \" + PREFIX_FINALS + VALID_GT_FINALS;","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"    public static final String GT_DESC_PE \u003d \" \" + PREFIX_PRACTICAL_EXAM + VALID_GT_PE;","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"Originalidk"},"content":"    public static final String ASSIGNMENT_DESC \u003d \" \" + PREFIX_ASSIGNMENT + \"Finding ELDRIC\";","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Originalidk"},"content":"    public static final String GRADE_DESC_400 \u003d \" \" + PREFIX_GRADE + \"400\";","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GT_RA_DESC \u003d \"-1\";","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GT_MIDTERMS_DESC \u003d \"wergwrg\"; // only numerics","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GT_FINALS_DESC \u003d \"-43\"; // no negative numbers","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GT_PE_DESC \u003d \"%#\u0026@%$^@#\"; // no special symbols","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"Originalidk"},"content":"    public static final String INVALID_ASSIGNMENT_DESC \u003d \" \" + PREFIX_ASSIGNMENT + \"Finding BOYD\";","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GRADED_TEST_DESC_1 \u003d \"Reading Assessment 1:-1 | Reading Assessment 2:0 \"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"            + \"| MidTerms:0 | Finals:-1 | Practical Exam:0\"; // No negative scores","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GRADED_TEST_DESC_2 \u003d \"Reading Assessment 1:0 | Reading Assessment 2:0 \"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"            + \"| MidTerms:0 | Finals:0 | Practical Exam:*\"; // No special char * allowed","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_NAME_TASK1 \u003d \" \" + PREFIX_TASK_NAME + VALID_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_DESCRIPTION_TASK1 \u003d \" \" + PREFIX_TASK_DESCRIPTION + VALID_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_NAME_TASK2 \u003d \" \" + PREFIX_TASK_NAME + \"Read quant guide\";","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_DESCRIPTION_TASK2 \u003d \" \" + PREFIX_TASK_DESCRIPTION + \"The green book\";","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    public static final String INVALID_TASK_NAME \u003d \" \" + PREFIX_TASK_NAME + \"@@@@HER\"; // \u0027@\u0027 not allowed in name","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"    public static final String GRADED_TEST_1 \u003d \" \" + PREFIX_GRADED_TEST + VALID_GRADED_TEST_1;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"    public static final String GRADED_TEST_2 \u003d \" \" + PREFIX_GRADED_TEST + VALID_GRADED_TEST_2;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GRADED_TEST_1 \u003d \" \" + PREFIX_GRADED_TEST + INVALID_GRADED_TEST_DESC_1;","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_GRADED_TEST_2 \u003d \" \" + PREFIX_GRADED_TEST + INVALID_GRADED_TEST_DESC_2;","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_RA_TEST \u003d \" \" + PREFIX_READING_ASSESSMENT + INVALID_GT_RA_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_MIDTERMS_TEST \u003d \" \" + PREFIX_MIDTERMS + INVALID_GT_MIDTERMS_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_FINALS_TEST \u003d \" \" + PREFIX_FINALS + INVALID_GT_FINALS_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_PE_TEST \u003d \" \" + PREFIX_PRACTICAL_EXAM + INVALID_GT_PE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"    public static final String INVALID_TASK_DESCRIPTION \u003d \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_DESCRIPTION + \"\\\\    \"; // whitespaces only not allowed in description","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"1/1/2002\";","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"    public static final String INVALID_TIME_DESC \u003d \" \" + PREFIX_TIME + \"0:30\";","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_DATE_DESC \u003d \" \" + PREFIX_DATE + VALID_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"    public static final String VALID_TIME_DESC \u003d \" \" + PREFIX_TIME + VALID_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"    public static final String SESSION_NUMBER_SESSION1 \u003d \" \" + PREFIX_SESSION + \"1\";","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"    public static final String INVALID_SESSION_NUMBER \u003d \" \" + PREFIX_SESSION + \"abc\";","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"    public static final String SESSION_STUDENTS_STUDENTS1 \u003d \" \" + PREFIX_NAME + \"Bob\";","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"    public static final String INVALID_SESSION_STUDENTS \u003d \" \" + PREFIX_NAME + \"Charlie123@abc\";","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":143,"author":{"gitId":"raydenlim"},"content":"    // public static final EditCommand.EditPersonDescriptor DESC_AMY2;","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"                .withTags(VALID_TAG_FRIEND).withGradedTest(VALID_GRADED_TEST_1).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withGradedTest(VALID_GRADED_TEST_2).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"Respirayson"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"Respirayson"},"content":"     * {@code model}\u0027s task list.","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"Respirayson"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"Respirayson"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"Respirayson"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"Respirayson"},"content":"        final String[] splitName \u003d task.getName().taskName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"Respirayson"},"content":"        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"Respirayson"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ldinghan":5,"Respirayson":27,"raydenlim":60,"Originalidk":7,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/CompleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalConsultations.getTypicalConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.getTypicalGradedTestList;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalSessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":" * {@code CompleteTaskCommand}.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"public class CompleteTaskCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"            getTypicalTaskList(), getTypicalSessionList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"            getTypicalConsultationListBook(), getTypicalGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new TaskBuilder(taskToMark).withIsDone(true).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(CompleteTaskCommand.MESSAGE_MARK_TASK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"                Messages.format(taskToMark));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"                model.getSessionList(), model.getConsultationList(), model.getGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        expectedModel.setTask(taskToMark, editedTask);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        assertCommandSuccess(completeTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        assertCommandFailure(completeTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new TaskBuilder(taskToMark).withIsDone(true).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(CompleteTaskCommand.MESSAGE_MARK_TASK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"                Messages.format(taskToMark));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"                model.getSessionList(), model.getConsultationList(), model.getGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        expectedModel.setTask(taskToMark, editedTask);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        assertCommandSuccess(completeTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"        assertCommandFailure(completeTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeFirstCommand \u003d new CompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeSecondCommand \u003d new CompleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        assertEquals(completeFirstCommand, completeFirstCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeFirstCommandCopy \u003d new CompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        assertEquals(completeFirstCommand, completeFirstCommandCopy);","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"        assertFalse(completeFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"        assertNotEquals(null, completeFirstCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"        assertNotEquals(completeFirstCommand, completeSecondCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand completeTaskCommand \u003d new CompleteTaskCommand(targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"        String expected \u003d CompleteTaskCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expected, completeTaskCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ldinghan":3,"Respirayson":109,"raydenlim":12}},{"path":"src/test/java/seedu/address/logic/commands/CreateConsultationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_OBJ;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_OBJ;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"import seedu.address.testutil.ConsultationBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"public class CreateConsultationCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    public void constructor_nullDetails_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateConsultCommand(null, null, null));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    public void execute_consultationAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        ModelStubAcceptingConsultationAdded modelStub \u003d new ModelStubAcceptingConsultationAdded();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        Consultation validConsultation \u003d new ConsultationBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        CommandResult commandResult \u003d new CreateConsultCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"                validConsultation.getDate(),","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"                validConsultation.getTime(),","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"                validConsultation.getStudentsNames()).execute(modelStub);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        assertEquals(String.format(CreateConsultCommand.MESSAGE_SUCCESS, Messages.format(validConsultation)),","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        assertEquals(Arrays.asList(validConsultation), modelStub.consultationAdded);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        LocalDate date \u003d VALID_DATE_OBJ;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        LocalTime time \u003d VALID_TIME_OBJ;","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        Set\u003cName\u003e students \u003d SampleDataUtil.getNamesSet(VALID_NAME_AMY);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"        CreateConsultCommand createConsultCommand \u003d new CreateConsultCommand(date, time, students);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"        assertTrue(createConsultCommand.equals(createConsultCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"        assertFalse(createConsultCommand.equals(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        assertFalse(createConsultCommand.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"     * A Model stub that always accept the consultation being added.","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"    private class ModelStubAcceptingConsultationAdded extends ModelStub {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"        final ArrayList\u003cConsultation\u003e consultationAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"        final AddressBook addressBook \u003d new AddressBookBuilder().withPerson(AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"        public boolean hasConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"            requireNonNull(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"            return consultationAdded.stream().anyMatch(consultation::isSameConsultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"        public void addConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"            requireNonNull(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"            consultationAdded.add(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"        public Person getMatchingStudentName(Name name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"            requireNonNull(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"            return addressBook.matchName(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"        public ReadOnlyConsultationList getConsultationList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"            return new ConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":101}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"            new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ldinghan":1,"Respirayson":1,"raydenlim":10,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalConsultations.getTypicalConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.getTypicalGradedTestList;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalSessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"            getTypicalSessionList(), getTypicalConsultationListBook(), getTypicalGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"                Messages.format(taskToDelete));","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"                model.getSessionList(), model.getConsultationList(), model.getGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"                Messages.format(taskToDelete));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"                model.getSessionList(), model.getConsultationList(), model.getGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"        String expected \u003d DeleteTaskCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expected, deleteTaskCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ldinghan":3,"Respirayson":116,"raydenlim":10}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADED_TEST_1;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADED_TEST_2;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"            new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"                new UserPrefs(), new TaskListBook(), new SessionListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"                new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_successWithValidGradedTest1() {","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"                .withTags(VALID_TAG_HUSBAND).withGradedTest(VALID_GRADED_TEST_1).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"                .withGradedTest(VALID_GRADED_TEST_1).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"                new UserPrefs(), new TaskListBook(), new SessionListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"                new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_successWithValidGradedTest2() {","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"                .withTags(VALID_TAG_HUSBAND).withGradedTest(VALID_GRADED_TEST_2).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"                .withGradedTest(VALID_GRADED_TEST_2).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"                new UserPrefs(), new TaskListBook(), new SessionListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"                new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"                new UserPrefs(), new TaskListBook(), new SessionListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"                new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"                new UserPrefs(), new TaskListBook(), new SessionListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"                new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ldinghan":1,"Respirayson":5,"raydenlim":39,"-":182}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", gradedTests\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"                + editPersonDescriptor.getGradedTests().orElse(null) + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"raydenlim":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"            new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"            new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ldinghan":1,"Respirayson":1,"raydenlim":6,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/IncompleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalConsultations.getTypicalConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.getTypicalGradedTestList;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalSessionList;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":" * {@code IncompleteTaskCommand}.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"public class IncompleteTaskCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"            getTypicalSessionList(), getTypicalConsultationListBook(), getTypicalGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new TaskBuilder(taskToMark).withIsDone(true).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteTaskCommand \u003d new IncompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(IncompleteTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"                Messages.format(taskToMark));","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"                model.getSessionList(), model.getConsultationList(), model.getGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        expectedModel.setTask(taskToMark, editedTask);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertCommandSuccess(incompleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteTaskCommand \u003d new IncompleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        assertCommandFailure(incompleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new TaskBuilder(taskToMark).withIsDone(true).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteTaskCommand \u003d new IncompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(IncompleteTaskCommand.MESSAGE_UNMARK_TASK_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"                Messages.format(taskToMark));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"                model.getSessionList(), model.getConsultationList(), model.getGradedTestList());","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        expectedModel.setTask(taskToMark, editedTask);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        assertCommandSuccess(incompleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteTaskCommand \u003d new IncompleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        assertCommandFailure(incompleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteFirstCommand \u003d new IncompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteSecondCommand \u003d new IncompleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"        assertEquals(incompleteFirstCommand, incompleteFirstCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteFirstCommandCopy \u003d new IncompleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        assertEquals(incompleteFirstCommand, incompleteFirstCommandCopy);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"        assertFalse(incompleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"        assertNotEquals(null, incompleteFirstCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"        assertNotEquals(incompleteFirstCommand, incompleteSecondCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand incompleteTaskCommand \u003d new IncompleteTaskCommand(targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"        String expected \u003d IncompleteTaskCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expected, incompleteTaskCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ldinghan":3,"Respirayson":109,"raydenlim":10}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ldinghan":1,"Respirayson":1,"raydenlim":6,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/session/CreateSessionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.logic.commands.session;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"public class CreateSessionCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    public void execute_createSessionWithSingleStudent_success() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        Person student \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"        SessionNumber sessionNumber \u003d new SessionNumber(\"1\");","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        model.addPerson(student);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand command \u003d new CreateSessionCommand(sessionNumber, new Name(\"Alice\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        command.execute(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        Session createdSession \u003d model.findSessionBySessionNumber(sessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        assertEquals(1, createdSession.getStudents().size());","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"        assertTrue(createdSession.getStudents().contains(student));","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    public void execute_createSessionWithMultipleStudents_success() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"        model.addPerson(alice);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        model.addPerson(bob);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"        Set\u003cName\u003e studentNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"        studentNames.add(new Name(\"Alice\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        studentNames.add(new Name(\"Bob\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand command \u003d new CreateSessionCommand(new SessionNumber(\"1\"), studentNames);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        command.execute(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"        Session createdSession \u003d model.findSessionBySessionNumber(new SessionNumber(\"1\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        assertEquals(2, createdSession.getStudents().size());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"        assertTrue(createdSession.getStudents().contains(alice));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"        assertTrue(createdSession.getStudents().contains(bob));","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"    public void equals_sameCommands_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand command1 \u003d new CreateSessionCommand(new SessionNumber(\"1\"), new Name(\"Alice\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand command2 \u003d new CreateSessionCommand(new SessionNumber(\"1\"), new Name(\"Alice\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"    public void equals_differentCommands_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand command1 \u003d new CreateSessionCommand(new SessionNumber(\"1\"), new Name(\"Alice\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand command2 \u003d new CreateSessionCommand(new SessionNumber(\"1\"), new Name(\"Bob\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"        assertFalse(command1.equals(command2));","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"    public void toStringMethod() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"        String name \u003d \"Bob\";","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"        Person bob \u003d new PersonBuilder().withName(name).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"        SessionNumber sessionNumber \u003d new SessionNumber(\"1\");","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"        model.addPerson(bob);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"        CreateSessionCommand command \u003d new CreateSessionCommand(sessionNumber, new Name(name));","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"        // Before execution, session has not been created and is null","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"        String expectedBeforeExecute \u003d CreateSessionCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"                + \"{toCreate\u003dnull}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expectedBeforeExecute, command.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"        // Execute creates the session to be added","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"        command.execute(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"        String expectedAfterExecute \u003d CreateSessionCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"                + \"{toCreate\u003d\" + sessionNumber + \" - \" + name + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expectedAfterExecute, command.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":98}},{"path":"src/test/java/seedu/address/logic/parser/AddGradeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ASSIGNMENT_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GRADE_DESC_400;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ASSIGNMENT_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"import seedu.address.logic.commands.AddGradeCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentName;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"public class AddGradeCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGradeCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"    private AddGradeCommandParser parser \u003d new AddGradeCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"        // no index specified","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"        // no field specified","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Originalidk"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Originalidk"},"content":"        // negative index","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, \"-5\" + ASSIGNMENT_DESC + GRADE_DESC_400, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Originalidk"},"content":"        // zero index","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, \"0\" + ASSIGNMENT_DESC + GRADE_DESC_400, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"        // invalid order of prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, \"0\" + GRADE_DESC_400 + ASSIGNMENT_DESC, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Originalidk"},"content":"    public void parse_invalidAssignment_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"            \"1\" + INVALID_ASSIGNMENT_DESC + GRADE_DESC_400, AssignmentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Originalidk"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Originalidk"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Originalidk"},"content":"        String userInput \u003d targetIndex.getOneBased() + ASSIGNMENT_DESC + GRADE_DESC_400;","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(\"Finding ELDRIC\");","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"Originalidk"},"content":"        assertParseSuccess(parser, userInput, new AddGradeCommand(targetIndex, assignmentName, \"400\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"Originalidk"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Originalidk"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Originalidk"},"content":"        String userInput \u003d targetIndex.getOneBased() + ASSIGNMENT_DESC + ASSIGNMENT_DESC + GRADE_DESC_400;","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Originalidk"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Originalidk"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ASSIGNMENT));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Originalidk":79}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_TASK2;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_TASK2;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        Task expectedTask \u003d new TaskBuilder(TASK1).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"                + TASK_NAME_TASK1 + TASK_DESCRIPTION_TASK1, new AddTaskCommand(expectedTask));","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        String validExpectedTaskString \u003d TASK_NAME_TASK1 + TASK_DESCRIPTION_TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        // multiple names","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, TASK_NAME_TASK2 + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        // multiple description","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, TASK_DESCRIPTION_TASK2 + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        // invalid description","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_DESCRIPTION + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, validExpectedTaskString + INVALID_TASK_NAME,","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        // invalid description","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, validExpectedTaskString + INVALID_TASK_DESCRIPTION,","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, VALID_TASK_NAME + TASK_DESCRIPTION_TASK1,","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, VALID_TASK_NAME + VALID_TASK_DESCRIPTION,","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        // no description","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        Task expectedTask \u003d new TaskBuilder(TASK1).withDescription(\"\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"        assertParseSuccess(parser, TASK_NAME_TASK1, new AddTaskCommand(expectedTask));","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME + TASK_DESCRIPTION_TASK2,","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME + INVALID_TASK_DESCRIPTION,","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"                        + TASK_NAME_TASK1 + TASK_NAME_TASK1 + TASK_DESCRIPTION_TASK2,","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":109,"wesho1107":1}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SESSION;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.CompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"import seedu.address.logic.commands.CreateConsultCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.IncompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.session.CreateSessionCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        descriptor.setGradedTest(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"    public void parseCommand_createConsultation() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"        String inputCommandString \u003d CreateConsultCommand.COMMAND_WORD + VALID_DATE_DESC + VALID_TIME_DESC","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"                + NAME_DESC_AMY;","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"        assertTrue(parser.parseCommand(inputCommandString) instanceof CreateConsultCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"    public void parseCommand_addTask() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"        AddTaskCommand command \u003d (AddTaskCommand) parser.parseCommand(TaskUtil.getAddCommand(task));","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"        assertEquals(new AddTaskCommand(task), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"    public void parseCommand_deleteTask() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"        DeleteTaskCommand command \u003d (DeleteTaskCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"                DeleteTaskCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"        assertEquals(new DeleteTaskCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"    public void parseCommand_completeTask() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        CompleteTaskCommand command \u003d (CompleteTaskCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"                CompleteTaskCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        assertEquals(new CompleteTaskCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"    public void parseCommand_incompleteTask() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"        IncompleteTaskCommand command \u003d (IncompleteTaskCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"                IncompleteTaskCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"        assertEquals(new IncompleteTaskCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"ldinghan"},"content":"    public void parseCommand_createSession() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"ldinghan"},"content":"        String sessionNumber \u003d \"1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"ldinghan"},"content":"        String studentName \u003d \"Ding Han\";","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"ldinghan"},"content":"        String whiteSpace \u003d \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"ldinghan"},"content":"        assertTrue(parser.parseCommand(CreateSessionCommand.COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"ldinghan"},"content":"                + whiteSpace + PREFIX_SESSION + sessionNumber","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"ldinghan"},"content":"                + whiteSpace + PREFIX_NAME + studentName) instanceof CreateSessionCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ldinghan":13,"Respirayson":36,"raydenlim":12,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/CompleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.CompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" * JUnit test class for the CompleteTaskCommandParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class CompleteTaskCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private CompleteTaskCommandParser parser \u003d new CompleteTaskCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public void parse_validArgs_returnsCompleteTaskCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        assertParseSuccess(parser, \"1\", new CompleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                CompleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":29}},{"path":"src/test/java/seedu/address/logic/parser/CreateConsultationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_OBJ;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_OBJ;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.commands.CreateConsultCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"public class CreateConsultationCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"    private CreateConsultCommandParser parser \u003d new CreateConsultCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_DATE_DESC + VALID_TIME_DESC + NAME_DESC_AMY,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"                new CreateConsultCommand(VALID_DATE_OBJ, VALID_TIME_OBJ,","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"                        SampleDataUtil.getNamesSet(VALID_NAME_AMY)));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    public void parse_multipleNames_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"                        + VALID_DATE_DESC + VALID_TIME_DESC + NAME_DESC_AMY + NAME_DESC_BOB,","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"                new CreateConsultCommand(VALID_DATE_OBJ, VALID_TIME_OBJ,","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"                        SampleDataUtil.getNamesSet(VALID_NAME_AMY, VALID_NAME_BOB)));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    public void parse_repeatedPrefix_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"        String validExpectedConsultationString \u003d VALID_DATE_DESC + VALID_TIME_DESC + NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"        // multiple dates","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"        assertParseFailure(parser, VALID_DATE_DESC + validExpectedConsultationString,","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        // multiple time","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        assertParseFailure(parser, VALID_TIME_DESC + validExpectedConsultationString,","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIME));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    public void parse_invalidInput_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"        // invalid date","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"        String invalidDateInput \u003d INVALID_DATE_DESC + VALID_TIME_DESC + NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidDateInput));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"        // invalid time","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        String invalidTimeInput \u003d VALID_DATE_DESC + INVALID_TIME_DESC + NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidTimeInput));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"        // invalid date and time","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"        String invalidDateTimeInput \u003d INVALID_DATE_DESC + INVALID_TIME_DESC + NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidDateTimeInput));","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateConsultCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"        // missing time","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"        assertParseFailure(parser, VALID_DATE + VALID_NAME_AMY,","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"        // missing date","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"        assertParseFailure(parser, VALID_TIME + VALID_NAME_AMY,","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"        // missing name","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"        assertParseFailure(parser, VALID_DATE + VALID_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":94}},{"path":"src/test/java/seedu/address/logic/parser/CreateSessionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SESSION_NUMBER;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SESSION_STUDENTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SESSION_NUMBER_SESSION1;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SESSION_STUDENTS_STUDENTS1;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.logic.commands.session.CreateSessionCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"public class CreateSessionCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"    private CreateSessionCommandParser parser \u003d new CreateSessionCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"                + SESSION_NUMBER_SESSION1 + SESSION_STUDENTS_STUDENTS1,","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"                new CreateSessionCommand(new SessionNumber(\"1\"), new Name(\"Bob\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        // invalid session number","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        assertParseFailure(parser, INVALID_SESSION_NUMBER + SESSION_STUDENTS_STUDENTS1,","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"                SessionNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        //invalid names","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        assertParseFailure(parser, SESSION_NUMBER_SESSION1 + INVALID_SESSION_STUDENTS,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        assertParseFailure(parser, INVALID_SESSION_NUMBER + INVALID_SESSION_STUDENTS,","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"                SessionNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":44}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" * JUnit test class for the DeleteTaskCommandParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    private static final String GRADED_TEST_EMPTY \u003d \" \" + PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"raydenlim"},"content":"    public void parse_invalidPrefix_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"raydenlim"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"raydenlim"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" i/JohnDoe\";","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"raydenlim"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"raydenlim":12,"-":208}},{"path":"src/test/java/seedu/address/logic/parser/IncompleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.IncompleteTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" * JUnit test class for the IncompleteTaskCommandParser.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class IncompleteTaskCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private IncompleteTaskCommandParser parser \u003d new IncompleteTaskCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public void parse_validArgs_returnsCompleteTaskCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        assertParseSuccess(parser, \"1\", new IncompleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                IncompleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":29}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    private static final String INVALID_PRIORITY \u003d \"jason\";","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"ldinghan"},"content":"    public void parseNames_validNames_returnsSetOfNames() throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"ldinghan"},"content":"        Collection\u003cString\u003e names \u003d Collections.singletonList(\"Alice\");","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"ldinghan"},"content":"        Set\u003cName\u003e expectedNameSet \u003d Collections.singleton(new Name(\"Alice\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"ldinghan"},"content":"        Set\u003cName\u003e parsedNameSet \u003d ParserUtil.parseNames(names);","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expectedNameSet, parsedNameSet);","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"ldinghan"},"content":"    public void parseNames_multipleValidNames_returnsSetOfNames() throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"ldinghan"},"content":"        Collection\u003cString\u003e names \u003d List.of(\"Alice\", \"Bob\", \"Charlie\");","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"ldinghan"},"content":"        Set\u003cName\u003e expectedNameSet \u003d Set.of(new Name(\"Alice\"), new Name(\"Bob\"), new Name(\"Charlie\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"ldinghan"},"content":"        Set\u003cName\u003e parsedNameSet \u003d ParserUtil.parseNames(names);","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expectedNameSet, parsedNameSet);","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"ldinghan"},"content":"    public void parseNames_mixedValidAndInvalidNames_throwsParseException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"ldinghan"},"content":"        Collection\u003cString\u003e names \u003d List.of(\"Alice\", \"abc_help\", \"Charlie\");","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":222,"author":{"gitId":"ldinghan"},"content":"        // When there\u0027s an invalid name, a ParseException should be thrown","lastModifiedDate":"2023-10-15"},{"lineNumber":223,"author":{"gitId":"ldinghan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNames(names));","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"ldinghan"},"content":"    public void parsePriority_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"ldinghan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTaskPriority(INVALID_PRIORITY));","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ldinghan":35,"-":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"Originalidk"},"content":"        List\u003cPerson\u003e newPeople \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Originalidk"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPeople);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"    public void matchName_personWithMatchingName_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"        // matching name","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"        assertEquals(addressBook.matchName(ALICE.getName()), ALICE);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"    public void matchName_noMatchingNameFound_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"        // no matching name","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e addressBook.matchName(BOB.getName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"Originalidk"},"content":"        private final ObservableList\u003cPerson\u003e people \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"Originalidk"},"content":"        AddressBookStub(Collection\u003cPerson\u003e people) {","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"Originalidk"},"content":"            this.people.setAll(people);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"Originalidk"},"content":"            return people;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Originalidk":6,"-":102,"wesho1107":16}},{"path":"src/test/java/seedu/address/model/ConsultationListBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION1;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class ConsultationListBookTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    private final ConsultationListBook consultationListBook \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"        assertEquals(Collections.emptyList(), consultationListBook.getConsultationList());","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e consultationListBook.resetData(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    public void hasConsultation_nullCase_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e consultationListBook.hasConsultation(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    public void hasConsultation_consultationNotInConsultationListBook_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        assertFalse(consultationListBook.hasConsultation(CONSULTATION1));","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    public void hasConsultation_consultationInConsultationListBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        consultationListBook.addConsultation(CONSULTATION1);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        assertTrue(consultationListBook.hasConsultation(CONSULTATION1));","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"    public void getConsultationList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"                consultationListBook.getConsultationList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook consultationListBook \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"        // New SessionListBook should be equal to itself","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"        assertEquals(consultationListBook, consultationListBook);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        // Other class objects not equals to ConsultationListBook","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        assertFalse(consultationListBook.equals(new Integer(1)));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"        // ConsultationListBook with different data should not be equal","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook other \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"        other.addConsultation(CONSULTATION1);","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"        assertNotEquals(consultationListBook, other);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"        // ReadOnlyConsultationList should be equal to ConsultationListBook with the same data","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"        ReadOnlyConsultationList readOnlyConsultationList \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"        assertEquals(consultationListBook, readOnlyConsultationList);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":68}},{"path":"src/test/java/seedu/address/model/GradedTestListBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"public class GradedTestListBookTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":5}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONSULTATIONS;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GRADED_TEST;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SESSIONS;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT1;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT3;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1A;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK2;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTestNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.session.SessionNumberContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"import seedu.address.testutil.ConsultationBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.SessionBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        assertEquals(new TaskListBook(), new TaskListBook(modelManager.getTaskList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskListFilePath(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        Path path \u003d Paths.get(\"task/list/file/path\");","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"        modelManager.setTaskListFilePath(path);","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        assertEquals(path, modelManager.getTaskListFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"    public void hasTask_taskNotInTaskList_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"        assertFalse(modelManager.hasTask(TASK1));","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"    public void hasTask_taskInTaskList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"        modelManager.addTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"        assertTrue(modelManager.hasTask(TASK1));","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexWithinBounds_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"        modelManager.addTask(TASK2);","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"        assertEquals(modelManager.getTask(0), TASK2);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexOutsideBounds_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e modelManager.getTask(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"    public void matchName_personWithMatchingName_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"        // matching name","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"        assertEquals(modelManager.getMatchingStudentName(ALICE.getName()), ALICE);","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"    public void matchName_noMatchingNameFound_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"raydenlim"},"content":"        // no matching name","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e modelManager.getMatchingStudentName(BOB.getName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"raydenlim"},"content":"    public void addConsultation_nullCase_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addConsultation(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"raydenlim"},"content":"    public void hasConsultation_nullCase_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasConsultation(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"    public void addConsultation_validConsultation_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"raydenlim"},"content":"        Consultation consultation \u003d new ConsultationBuilder().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"        modelManager.addConsultation(consultation);","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"raydenlim"},"content":"        assertTrue(modelManager.hasConsultation(consultation));","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"Respirayson"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":191,"author":{"gitId":"Respirayson"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":193,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"raydenlim"},"content":"    public void getFilteredConsultationList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"raydenlim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"raydenlim"},"content":"                modelManager.getFilteredConsultationList().remove(0));","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"ldinghan"},"content":"    public void findSessionBySessionNumber_successful() {","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"ldinghan"},"content":"        SessionList sessionList \u003d new SessionList();","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"ldinghan"},"content":"        Person student \u003d new PersonBuilder(TypicalPersons.ALICE).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"ldinghan"},"content":"        Session toAdd \u003d new SessionBuilder().withSessionNumber(\"0\").withStudent(student).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"ldinghan"},"content":"        assertTrue(toAdd.equals(sessionList.findSessionBySessionNumber(new SessionNumber(\"0\"))));","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":209,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"ldinghan"},"content":"    public void getFilteredSessionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"ldinghan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredSessionList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGradedTestList(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestListFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":222,"author":{"gitId":"raydenlim"},"content":"        Path path \u003d Paths.get(\"gradedtest/list/file/path\");","lastModifiedDate":"2023-10-15"},{"lineNumber":223,"author":{"gitId":"raydenlim"},"content":"        modelManager.setTaskListFilePath(path);","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"raydenlim"},"content":"        modelManager.setGradedTestListFilePath(path);","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"raydenlim"},"content":"        assertEquals(path, modelManager.getTaskListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":227,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":229,"author":{"gitId":"raydenlim"},"content":"    public void hasGradedTest_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":230,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGradedTest(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":231,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"raydenlim"},"content":"    public void hasGradedTest_gradedTestNotInGradedTestList_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.hasGradedTest(GT3));","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":237,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":238,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"raydenlim"},"content":"    public void hasGradedTest_gradedTestInGradedTestList_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"raydenlim"},"content":"        modelManager.addGradedTest(GT1);","lastModifiedDate":"2023-10-15"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"        assertTrue(modelManager.hasGradedTest(GT1));","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"raydenlim"},"content":"    public void getGradedTest_indexWithinBounds_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"raydenlim"},"content":"        modelManager.addGradedTest(GT1);","lastModifiedDate":"2023-10-15"},{"lineNumber":247,"author":{"gitId":"raydenlim"},"content":"        assertEquals(modelManager.getGradedTest(0), GT1);","lastModifiedDate":"2023-10-15"},{"lineNumber":248,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":250,"author":{"gitId":"raydenlim"},"content":"    public void getGradedTest_indexOutsideBounds_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e modelManager.getGradedTest(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":252,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"raydenlim"},"content":"    public void getFilteredGradedTestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"raydenlim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGradedTestList().remove(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"Respirayson"},"content":"        TaskListBook taskList \u003d new TaskListBook();","lastModifiedDate":"2023-10-05"},{"lineNumber":265,"author":{"gitId":"raydenlim"},"content":"        ConsultationListBook consultationList \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook gradedTestList \u003d new GradedTestListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":267,"author":{"gitId":"ldinghan"},"content":"        SessionListBook sessionList \u003d new SessionListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"Respirayson"},"content":"        taskList.addTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.addGradedTest(GT1);","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"raydenlim"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, taskList, sessionList,","lastModifiedDate":"2023-10-20"},{"lineNumber":274,"author":{"gitId":"raydenlim"},"content":"                consultationList, gradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":275,"author":{"gitId":"raydenlim"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, taskList,","lastModifiedDate":"2023-10-20"},{"lineNumber":276,"author":{"gitId":"raydenlim"},"content":"                sessionList, consultationList, gradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":277,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, taskList,","lastModifiedDate":"2023-10-20"},{"lineNumber":291,"author":{"gitId":"raydenlim"},"content":"                sessionList, consultationList, gradedTestList)));","lastModifiedDate":"2023-10-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":296,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":297,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, taskList,","lastModifiedDate":"2023-10-20"},{"lineNumber":298,"author":{"gitId":"raydenlim"},"content":"                sessionList, consultationList, gradedTestList)));","lastModifiedDate":"2023-10-20"},{"lineNumber":299,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":304,"author":{"gitId":"Respirayson"},"content":"        // different taskList -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":305,"author":{"gitId":"Respirayson"},"content":"        String[] taskKeywords \u003d TASK1.getName().taskName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"Respirayson"},"content":"        modelManager.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(taskKeywords)));","lastModifiedDate":"2023-10-05"},{"lineNumber":307,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":308,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, new TaskListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":309,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook())));","lastModifiedDate":"2023-10-20"},{"lineNumber":310,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":311,"author":{"gitId":"raydenlim"},"content":"        // different consultationList -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":312,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, new TaskListBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":313,"author":{"gitId":"raydenlim"},"content":"                new SessionListBook(), new ConsultationListBook(), new GradedTestListBook())));","lastModifiedDate":"2023-10-20"},{"lineNumber":314,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":315,"author":{"gitId":"raydenlim"},"content":"        // different sessionList -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":316,"author":{"gitId":"raydenlim"},"content":"        String[] sessionKeywords \u003d SESSION1A.getSessionNumber().sessionNumber.split(\"\");","lastModifiedDate":"2023-10-20"},{"lineNumber":317,"author":{"gitId":"raydenlim"},"content":"        modelManager.updateFilteredSessionList(","lastModifiedDate":"2023-10-20"},{"lineNumber":318,"author":{"gitId":"raydenlim"},"content":"                new SessionNumberContainsKeywordsPredicate(Arrays.asList(sessionKeywords)));","lastModifiedDate":"2023-10-20"},{"lineNumber":319,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs,","lastModifiedDate":"2023-10-15"},{"lineNumber":320,"author":{"gitId":"raydenlim"},"content":"                new TaskListBook(), new SessionListBook(), new ConsultationListBook(), new GradedTestListBook())));","lastModifiedDate":"2023-10-20"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":322,"author":{"gitId":"raydenlim"},"content":"        // different gradedTestList -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"raydenlim"},"content":"        String[] gradedTestKeywords \u003d GT1.getGradedTests().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"raydenlim"},"content":"        modelManager.updateFilteredGradedTestList(","lastModifiedDate":"2023-10-19"},{"lineNumber":325,"author":{"gitId":"raydenlim"},"content":"                new GradedTestNameContainsKeywordsPredicate(Arrays.asList(gradedTestKeywords)));","lastModifiedDate":"2023-10-19"},{"lineNumber":326,"author":{"gitId":"raydenlim"},"content":"        System.out.println(GT1.getGradedTests());","lastModifiedDate":"2023-10-19"},{"lineNumber":327,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs,","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"raydenlim"},"content":"                new TaskListBook(), new SessionListBook(), new ConsultationListBook(), new GradedTestListBook())));","lastModifiedDate":"2023-10-20"},{"lineNumber":329,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":332,"author":{"gitId":"Respirayson"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"raydenlim"},"content":"        modelManager.updateFilteredGradedTestList(PREDICATE_SHOW_ALL_GRADED_TEST);","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"raydenlim"},"content":"        modelManager.updateFilteredConsultationList(PREDICATE_SHOW_ALL_CONSULTATIONS);","lastModifiedDate":"2023-10-20"},{"lineNumber":335,"author":{"gitId":"ldinghan"},"content":"        modelManager.updateFilteredSessionList(PREDICATE_SHOW_ALL_SESSIONS);","lastModifiedDate":"2023-10-19"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":340,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":341,"author":{"gitId":"raydenlim"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, taskList,","lastModifiedDate":"2023-10-20"},{"lineNumber":342,"author":{"gitId":"raydenlim"},"content":"                sessionList, consultationList, gradedTestList)));","lastModifiedDate":"2023-10-20"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":344,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ldinghan":25,"Respirayson":55,"raydenlim":134,"-":131}},{"path":"src/test/java/seedu/address/model/SessionListBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1A;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3A;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3B;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalSessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"public class SessionListBookTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"    private final SessionListBook sessionListBook \u003d new SessionListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        assertEquals(Collections.emptyList(), sessionListBook.getSessionList());","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        assertThrows(NullPointerException.class, () -\u003e sessionListBook.resetData(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    public void resetData_withValidReadOnlySessionListBook_replacesData() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        SessionListBook newData \u003d getTypicalSessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"        sessionListBook.resetData(newData);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        assertEquals(newData, sessionListBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    public void hasSession_nullSession_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        assertThrows(NullPointerException.class, () -\u003e sessionListBook.hasSession(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    public void hasSession_sessionNotInSessionListBook_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionListBook.hasSession(SESSION3B));","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"    public void hasSession_sessionInSessionListBook_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"        sessionListBook.addSession(SESSION3A);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionListBook.hasSession(SESSION3A));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    public void getSessionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e sessionListBook.getSessionList().remove(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"        SessionListBook sessionListBook \u003d new SessionListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"        // New SessionListBook should be equal to itself","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionListBook.equals(sessionListBook));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        // SessionListBook with different data should not be equal","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        SessionListBook differentSessionListBook \u003d new SessionListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"        differentSessionListBook.addSession(SESSION1A);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionListBook.equals(differentSessionListBook));","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"        // ReadOnlySessionList should be equal to SessionListBook with the same data","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"        ReadOnlySessionList readOnlySessionList \u003d new SessionListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionListBook.equals(readOnlySessionList));","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        String expected \u003d SessionListBook.class.getCanonicalName() + \"{sessions\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"                + sessionListBook.getSessionList() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expected, sessionListBook.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":80}},{"path":"src/test/java/seedu/address/model/attendance/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.EMPTY_SESSION;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1A;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3A;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"public class AttendanceTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    public void markPresentTest() {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"        Session emptySession \u003d EMPTY_SESSION;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"        Attendance.markPresent(emptySession, alice);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        assertTrue(emptySession.getStudents().contains(alice));","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    public void markAbsentTest() {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        Session sessionWithAlice \u003d new Session(SESSION1A.getSessionNumber(), SESSION1A.getStudents());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"        Attendance.markAbsent(sessionWithAlice, alice);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionWithAlice.getStudents().contains(alice));","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    public void getAttendanceBySessionTest() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        assertTrue(Attendance.getAttendanceBySession(SESSION3A).equals(SESSION3A.getStudents()));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    public void getAttendanceByStudentTest() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        SessionList sessionList \u003d new SessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"        Person carl \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"        Session tempSession3a \u003d new Session(SESSION3A.getSessionNumber(), SESSION3A.getStudents());","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(tempSession3a);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"        Set\u003cSession\u003e attendanceBefore \u003d Attendance.getAttendanceByStudent(carl, sessionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        // bob has not attended tempSession3a","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        assertFalse(attendanceBefore.contains(tempSession3a));","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"        carl.attendSession(tempSession3a);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"        Set\u003cSession\u003e attendanceAfter \u003d Attendance.getAttendanceByStudent(carl, sessionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"        // Check if the list contains the expected session","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"        assertTrue(attendanceAfter.contains(tempSession3a));","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":60}},{"path":"src/test/java/seedu/address/model/consultation/ConsultationListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION1;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION2;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION3;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION4;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.exceptions.ConsultationNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.exceptions.DuplicateConsultationException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"public class ConsultationListTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    private final ConsultationList consultations \u003d new ConsultationList();","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    public void contains_nullConsultation_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e consultations.contains(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    public void contains_consultationNotInList_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        assertFalse(consultations.contains(CONSULTATION1));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"    public void contains_consultationInList_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"        consultations.addConsultation(CONSULTATION1);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"        assertTrue(consultations.contains(CONSULTATION1));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public void addConsultation_nullConsultation_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e consultations.addConsultation(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    public void addConsultation_duplicateConsultation_throwsDuplicateConsultationException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        consultations.addConsultation(CONSULTATION2);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        assertThrows(DuplicateConsultationException.class, () -\u003e consultations.addConsultation(CONSULTATION2));","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"    public void remove_nullConsultation_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e consultations.remove(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"    public void remove_consultationDoesNotExist_throwsConsultationNotFoundException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"        assertThrows(ConsultationNotFoundException.class, () -\u003e consultations.remove(CONSULTATION4));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"    public void remove_existingConsultation_removesConsultation() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"        consultations.addConsultation(CONSULTATION3);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"        consultations.remove(CONSULTATION3);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"        assertFalse(consultations.contains(CONSULTATION3));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"                consultations.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"        // Same ConsultationList object","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"        ConsultationList sameConsultations \u003d consultations;","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"        assertEquals(consultations, sameConsultations);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"        // Object of different class -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"        assertFalse(consultations.equals(new Integer(1)));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"        assertEquals(consultations.asUnmodifiableObservableList().toString(), consultations.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":84}},{"path":"src/test/java/seedu/address/model/consultation/ConsultationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION1;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION2;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION3;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION4;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import seedu.address.testutil.ConsultationBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class ConsultationTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    public void isSameConsultation() {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"        assertTrue(CONSULTATION1.isSameConsultation(CONSULTATION1));","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"        assertFalse(CONSULTATION1.isSameConsultation(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        // same date, same time, same set of students -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        Consultation editedConsultation \u003d new ConsultationBuilder(CONSULTATION1).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"        assertTrue(CONSULTATION1.isSameConsultation(editedConsultation));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        // different date, same time, same set of students -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        editedConsultation \u003d new ConsultationBuilder(CONSULTATION1).withDate(\"01/01/2002\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        assertFalse(CONSULTATION1.isSameConsultation(editedConsultation));","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        // different time, same date, same set of students -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"        editedConsultation \u003d new ConsultationBuilder(CONSULTATION2).withTime(\"23:59\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"        assertFalse(CONSULTATION2.isSameConsultation(editedConsultation));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        Consultation consultationCopy \u003d new ConsultationBuilder(CONSULTATION2).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        assertTrue(CONSULTATION2.equals(consultationCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        assertTrue(CONSULTATION1.equals(CONSULTATION1));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        assertFalse(CONSULTATION4.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        // different consultation -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        assertFalse(CONSULTATION1.equals(CONSULTATION3));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":51}},{"path":"src/test/java/seedu/address/model/gradedtest/FinalsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class FinalsTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public void validFinalsConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"        Finals score \u003d new Finals(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"        assertEquals(\"10\", score.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    public void invalidFinalsConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"        // Test construction with an invalid name","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Finals(\"**iloveyou**\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Finals(\"-10000000000\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"        Finals score1 \u003d new Finals(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        Finals score2 \u003d new Finals(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        Finals diffScore \u003d new Finals(\"10.0\");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        assertEquals(score1.hashCode(), score2.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        assertNotEquals(score1.hashCode(), diffScore.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Finals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Finals(invalidName));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"    public void isValidFinals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        // null score","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Finals.isValidFinalsResult(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        // invalid score","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        assertFalse(Finals.isValidFinalsResult(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        assertFalse(Finals.isValidFinalsResult(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        assertFalse(Finals.isValidFinalsResult(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        assertFalse(Finals.isValidFinalsResult(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        assertFalse(Finals.isValidFinalsResult(\"egsdgsg\")); // contains alphabets","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        assertFalse(Finals.isValidFinalsResult(\"-1\")); // contains negative numbers","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        // valid score","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        assertTrue(Finals.isValidFinalsResult(\"-\")); // default score","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"        assertTrue(Finals.isValidFinalsResult(\"2103\")); // numbers only","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        assertTrue(Finals.isValidFinalsResult(\"100.0\")); // floats","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        assertTrue(Finals.isValidFinalsResult(\"0\")); // 0 value allowed","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        Finals testScore \u003d new Finals(\"1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(new Finals(\"1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(testScore));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(new Finals(\"2\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":87}},{"path":"src/test/java/seedu/address/model/gradedtest/GradedTestListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT1;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT2;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT3;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.exceptions.DuplicateGradedTestException;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.exceptions.GradedTestNotFoundException;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"public class GradedTestListTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    private final GradedTestList gradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    public void contains_nullGradedTest_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.contains(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    public void contains_gradedTestNotInList_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        assertFalse(gradedTestList.contains(GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    public void contains_gradedTestInList_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"        assertTrue(gradedTestList.contains(GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    public void add_nullGradedTest_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.add(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    public void add_duplicateGradedTest_throwsDuplicateGradedTestException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DuplicateGradedTestException.class, () -\u003e gradedTestList.add(GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    public void editGradedTest_nullTargetGradedTest_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.editGradedTest(null, GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    public void editGradedTest_nullEditedGradedTest_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.editGradedTest(GT1, null));","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    public void editGradedTest_targetGradedTestNotInList_throwsGradedTestNotFoundException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        assertThrows(GradedTestNotFoundException.class, () -\u003e gradedTestList.editGradedTest(GT1, GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_editedGradedTestIsSameGradedTest_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.editGradedTest(GT1, GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"        GradedTestList expectedGradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        expectedGradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        assertTrue(expectedGradedTestList.equals(gradedTestList));","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_editedGradedeTestHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.editGradedTest(GT1, GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"        GradedTestList expectedGradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        expectedGradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        assertTrue(expectedGradedTestList.equals(gradedTestList));","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_editedGradedTestHasNonUniqueIdentity_throwsDuplicateGradedTestException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DuplicateGradedTestException.class, () -\u003e gradedTestList.editGradedTest(GT1, GT2));","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"    public void editGradedTest_duplicateGradedTest_throwsDuplicateGradedTestException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT3);","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DuplicateGradedTestException.class, () -\u003e gradedTestList.editGradedTest(GT1, GT3));","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    public void editGradedTest_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.editGradedTest(GT1, GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"        GradedTestList expectedGradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"        expectedGradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"        assertEquals(expectedGradedTestList, gradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"    public void remove_nullGradedTest_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.remove(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"    public void remove_gradedTestDoesNotExist_throwsGradedTestNotFoundException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"        assertThrows(GradedTestNotFoundException.class, () -\u003e gradedTestList.remove(GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"    public void remove_existingGradedTest_removesGradedTest() {","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.remove(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"        GradedTestList expectedGradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"        assertEquals(expectedGradedTestList, gradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_nullUniqueGradedTestList_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.setGradedTests((GradedTestList) null));","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_uniqueGradedTestList_replacesOwnListWithProvidedUniqueGradedTestList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"        GradedTestList expectedGradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"        expectedGradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.setGradedTests(expectedGradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"raydenlim"},"content":"        assertEquals(expectedGradedTestList, gradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.setGradedTests((List\u003cGradedTest\u003e) null));","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"raydenlim"},"content":"        List\u003cGradedTest\u003e otherGradedTestList \u003d Collections.singletonList(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.setGradedTests(otherGradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"raydenlim"},"content":"        GradedTestList expectedGradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"raydenlim"},"content":"        expectedGradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"raydenlim"},"content":"        assertEquals(expectedGradedTestList, gradedTestList);","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest_listWithDuplicateGradedTest_throwsDuplicateGradedTestException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"        List\u003cGradedTest\u003e listWithDuplicateGradedTest \u003d Arrays.asList(GT1, GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DuplicateGradedTestException.class, () -\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"                gradedTestList.setGradedTests(listWithDuplicateGradedTest));","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"raydenlim"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"                -\u003e gradedTestList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"raydenlim"},"content":"    public void getGradedTest_indexWithinBounds_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"raydenlim"},"content":"        assertEquals(GT1, gradedTestList.getGradedTest(0));","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"raydenlim"},"content":"    public void getGradedTest_indexOutsideBounds_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e gradedTestList.getGradedTest(0));","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"raydenlim"},"content":"        assertEquals(gradedTestList.asUnmodifiableObservableList().toString(), gradedTestList.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"raydenlim"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList1 \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList2 \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"raydenlim"},"content":"        // Test when both lists are empty","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"raydenlim"},"content":"        assertTrue(gradedTestList1.equals(gradedTestList2));","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"raydenlim"},"content":"        // Add a graded test to one list and test for inequality","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"raydenlim"},"content":"        gradedTestList1.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"raydenlim"},"content":"        assertFalse(gradedTestList1.equals(gradedTestList2));","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"raydenlim"},"content":"        // Add the same graded test to the other list and test for equality","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"raydenlim"},"content":"        gradedTestList2.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"raydenlim"},"content":"        assertTrue(gradedTestList1.equals(gradedTestList2));","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":203,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"raydenlim"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList1 \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList2 \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"raydenlim"},"content":"        // Test when both lists are empty","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"raydenlim"},"content":"        assertEquals(gradedTestList1.hashCode(), gradedTestList2.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"raydenlim"},"content":"        // Add a graded test to one list and test for inequality","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"raydenlim"},"content":"        gradedTestList1.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"raydenlim"},"content":"        assertNotEquals(gradedTestList1.hashCode(), gradedTestList2.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"raydenlim"},"content":"        // Add the same graded test to the other list and test for equality","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"raydenlim"},"content":"        gradedTestList2.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"raydenlim"},"content":"        assertEquals(gradedTestList1.hashCode(), gradedTestList2.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"raydenlim"},"content":"    public void addAndRemoveGradedTests() {","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"raydenlim"},"content":"        // Add a graded test","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"raydenlim"},"content":"        assertTrue(gradedTestList.contains(GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"raydenlim"},"content":"        // Remove the added graded test","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.remove(GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"raydenlim"},"content":"        assertFalse(gradedTestList.contains(GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"raydenlim"},"content":"        // Try to remove a non-existent graded test (should throw exception)","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"raydenlim"},"content":"        assertThrows(GradedTestNotFoundException.class, () -\u003e gradedTestList.remove(GT1));","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestListWithDuplicateGradedTests() {","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"raydenlim"},"content":"        // Create a list with duplicate graded tests","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"raydenlim"},"content":"        List\u003cGradedTest\u003e duplicateGradedTestList \u003d Arrays.asList(GT2, GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":245,"author":{"gitId":"raydenlim"},"content":"        // Setting the list should throw DuplicateGradedTestException","lastModifiedDate":"2023-10-20"},{"lineNumber":246,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DuplicateGradedTestException.class, () -\u003e gradedTestList.setGradedTests(duplicateGradedTestList));","lastModifiedDate":"2023-10-20"},{"lineNumber":247,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":248,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":249,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":250,"author":{"gitId":"raydenlim"},"content":"    public void getGradedTestWithInvalidIndex() {","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":252,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":253,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":254,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e gradedTestList.getGradedTest(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":255,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestsWithNullList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"raydenlim"},"content":"        List\u003cGradedTest\u003e nullList \u003d null;","lastModifiedDate":"2023-10-20"},{"lineNumber":261,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":262,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e gradedTestList.setGradedTests(nullList));","lastModifiedDate":"2023-10-20"},{"lineNumber":263,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":264,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":265,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"raydenlim"},"content":"    public void unmodifiableListModification() {","lastModifiedDate":"2023-10-20"},{"lineNumber":267,"author":{"gitId":"raydenlim"},"content":"        GradedTestList gradedTestList \u003d new GradedTestList();","lastModifiedDate":"2023-10-20"},{"lineNumber":268,"author":{"gitId":"raydenlim"},"content":"        gradedTestList.add(GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":269,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":270,"author":{"gitId":"raydenlim"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":271,"author":{"gitId":"raydenlim"},"content":"                gradedTestList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-20"},{"lineNumber":272,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":273,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":273}},{"path":"src/test/java/seedu/address/model/gradedtest/GradedTestNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import seedu.address.testutil.GradedTestBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"public class GradedTestNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"1\");","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"0\", \"3\");","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"        GradedTestNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"                new GradedTestNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"        GradedTestNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"                new GradedTestNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"        GradedTestNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"                new GradedTestNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    public void test_gradedTestContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        // One keyword","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        GradedTestNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"                new GradedTestNameContainsKeywordsPredicate(Collections.singletonList(\"1\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        assertTrue(predicate.test(new GradedTestBuilder().withFinals(\"1\").withPe(\"1\").build()));","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        predicate \u003d new GradedTestNameContainsKeywordsPredicate(Arrays.asList(\"0\", \"3\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        assertTrue(predicate.test(new GradedTestBuilder().withMidTerms(\"30\").withPe(\"3\").withFinals(\"0\").build()));","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        predicate \u003d new GradedTestNameContainsKeywordsPredicate(Arrays.asList(\"0\", \"3\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        assertTrue(predicate.test(new GradedTestBuilder().withMidTerms(\"35\").withFinals(\"0\").withPe(\"3\").build()));","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    public void test_gradedTestDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        GradedTestNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"                new GradedTestNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"        assertFalse(predicate.test(new GradedTestBuilder().withFinals(\"1\").build()));","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"        predicate \u003d new GradedTestNameContainsKeywordsPredicate(Arrays.asList(\"0\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        assertFalse(predicate.test(new GradedTestBuilder().withFinals(\"2\").build()));","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"        GradedTestNameContainsKeywordsPredicate predicate \u003d new GradedTestNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        String expected \u003d GradedTestNameContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"                + \"{gradedTest keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":83}},{"path":"src/test/java/seedu/address/model/gradedtest/GradedTestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT1;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT3;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.testutil.GradedTestBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"public class GradedTestTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GradedTest(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    public void constructor_invalidGradedTestName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"        String invalidGradedTestName \u003d \"%$#%#%\";","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GradedTest(invalidGradedTestName));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    public void isValidGradedTestName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        // null gradedTest name","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e GradedTest.isValidGradeTestName(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    public void isSameGradedTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        assertTrue(GT1.isSameGradedTest(GT1));","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.isSameGradedTest(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"        // same test -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        GradedTest editedGradedTest1 \u003d new GradedTestBuilder(GT1).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        assertTrue(GT1.isSameGradedTest(editedGradedTest1));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"        // different finals -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        editedGradedTest1 \u003d new GradedTestBuilder(GT1).withFinals(\"100\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.isSameGradedTest(editedGradedTest1));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        // different Pe -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"        editedGradedTest1 \u003d new GradedTestBuilder(GT1).withPe(\"100\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.isSameGradedTest(editedGradedTest1));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        // different Pe,RA1, RA2 -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        editedGradedTest1 \u003d new GradedTestBuilder(GT1).withPe(\"100\")","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"                .withReadingAssessment1(\"1\").withReadingAssessment2(\"2\")","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.isSameGradedTest(editedGradedTest1));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"        GradedTest gradedTestCopy \u003d new GradedTestBuilder(GT1).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"        assertTrue(GT1.equals(gradedTestCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"        assertTrue(GT1.equals(GT1));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.equals(5));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"        // different gradedTest -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.equals(GT3));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"        // different pe value -\u003e return false","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        GradedTest editedGradedTest2 \u003d new GradedTestBuilder(GT1)","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"                .withPe(GT3.getPracticalExam().value).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.equals(editedGradedTest2));","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        // different finals value -\u003e return false","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"        editedGradedTest2 \u003d new GradedTestBuilder(GT1).withFinals(GT3","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"                .getFinals().value).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"        assertFalse(GT1.equals(editedGradedTest2));","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"        String expected \u003d String.format(\"%s{Reading Assessment 1\u003d%s,\"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"                        + \"Reading Assessment 2\u003d%s, MidTerms\u003d%s, Finals\u003d%s, Practical Exam\u003d%s}\",","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"                GradedTest.class.getCanonicalName(), GT1.getRA1(), GT1.getRA2(),","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"                GT1.getMidTerms(), GT1.getFinals(), GT1.getPracticalExam());","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"        assertEquals(expected, expected);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":100}},{"path":"src/test/java/seedu/address/model/gradedtest/MidTermTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class MidTermTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public void validMidTermsConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"        MidTerms score \u003d new MidTerms(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"        assertEquals(\"10\", score.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    public void invalidMidTermsConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"        // Test construction with an invalid name","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MidTerms(\"**iloveyou**\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MidTerms(\"-10000000000\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"        MidTerms score1 \u003d new MidTerms(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        MidTerms score2 \u003d new MidTerms(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        MidTerms diffScore \u003d new MidTerms(\"10.0\");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        assertEquals(score1.hashCode(), score2.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        assertNotEquals(score1.hashCode(), diffScore.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MidTerms(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MidTerms(invalidName));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"    public void isValidMidTerms() {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        // null score","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e MidTerms.isValidMidTermResult(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        // invalid score","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        assertFalse(MidTerms.isValidMidTermResult(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        assertFalse(MidTerms.isValidMidTermResult(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        assertFalse(MidTerms.isValidMidTermResult(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        assertFalse(MidTerms.isValidMidTermResult(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        assertFalse(MidTerms.isValidMidTermResult(\"egsdgsg\")); // contains alphabets","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        assertFalse(MidTerms.isValidMidTermResult(\"-1\")); // contains negative numbers","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        // valid score","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        assertTrue(MidTerms.isValidMidTermResult(\"-\")); // default score","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"        assertTrue(MidTerms.isValidMidTermResult(\"2103\")); // numbers only","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        assertTrue(MidTerms.isValidMidTermResult(\"100.0\")); // floats","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        assertTrue(MidTerms.isValidMidTermResult(\"0\")); // 0 value allowed","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        MidTerms testScore \u003d new MidTerms(\"1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(new MidTerms(\"1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(testScore));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(new MidTerms(\"2\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":87}},{"path":"src/test/java/seedu/address/model/gradedtest/PracticalExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class PracticalExamTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public void validPracticalExamConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"        PracticalExam score \u003d new PracticalExam(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"        assertEquals(\"10\", score.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    public void invalidPracticalExamConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"        // Test construction with an invalid name","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PracticalExam(\"**iloveyou**\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PracticalExam(\"-10000000000\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"        PracticalExam score1 \u003d new PracticalExam(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        PracticalExam score2 \u003d new PracticalExam(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        PracticalExam diffScore \u003d new PracticalExam(\"10.0\");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        assertEquals(score1.hashCode(), score2.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        assertNotEquals(score1.hashCode(), diffScore.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PracticalExam(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PracticalExam(invalidName));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"    public void isValidMidTerms() {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        // null score","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e PracticalExam.isValidPeResult(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        // invalid score","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        assertFalse(PracticalExam.isValidPeResult(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        assertFalse(PracticalExam.isValidPeResult(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        assertFalse(PracticalExam.isValidPeResult(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        assertFalse(PracticalExam.isValidPeResult(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        assertFalse(PracticalExam.isValidPeResult(\"egsdgsg\")); // contains alphabets","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        assertFalse(PracticalExam.isValidPeResult(\"-1\")); // contains negative numbers","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        // valid score","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        assertTrue(PracticalExam.isValidPeResult(\"-\")); // default score","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"        assertTrue(PracticalExam.isValidPeResult(\"2103\")); // numbers only","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        assertTrue(PracticalExam.isValidPeResult(\"100.0\")); // floats","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        assertTrue(PracticalExam.isValidPeResult(\"0\")); // 0 value allowed","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        PracticalExam testScore \u003d new PracticalExam(\"1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(new PracticalExam(\"1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(testScore));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(new PracticalExam(\"2\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":87}},{"path":"src/test/java/seedu/address/model/gradedtest/ReadingAssessmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.model.gradedtest;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"public class ReadingAssessmentTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"    public void validReadingAssessmentConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment score \u003d new ReadingAssessment(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"        assertEquals(\"10\", score.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    public void invalidReadingAssessmentConstruction() {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"        // Test construction with an invalid name","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ReadingAssessment(\"**iloveyou**\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ReadingAssessment(\"-10000000000\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment score1 \u003d new ReadingAssessment(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment score2 \u003d new ReadingAssessment(\"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment diffScore \u003d new ReadingAssessment(\"10.0\");","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        assertEquals(score1.hashCode(), score2.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        assertNotEquals(score1.hashCode(), diffScore.hashCode());","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReadingAssessment(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ReadingAssessment(invalidName));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"    public void isValidReadingAssessment() {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        // null score","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ReadingAssessment.isValidRaResult(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"        // invalid score","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        assertFalse(ReadingAssessment.isValidRaResult(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        assertFalse(ReadingAssessment.isValidRaResult(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        assertFalse(ReadingAssessment.isValidRaResult(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        assertFalse(ReadingAssessment.isValidRaResult(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        assertFalse(ReadingAssessment.isValidRaResult(\"egsdgsg\")); // contains alphabets","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        assertFalse(ReadingAssessment.isValidRaResult(\"-1\")); // contains negative numbers","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        // valid score","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"        assertTrue(ReadingAssessment.isValidRaResult(\"-\")); // default score","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"        assertTrue(ReadingAssessment.isValidRaResult(\"2103\")); // numbers only","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        assertTrue(ReadingAssessment.isValidRaResult(\"100.0\")); // floats","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        assertTrue(ReadingAssessment.isValidRaResult(\"0\")); // 0 value allowed","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment testScore \u003d new ReadingAssessment(\"1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(new ReadingAssessment(\"1\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        assertTrue(testScore.equals(testScore));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        assertFalse(testScore.equals(new ReadingAssessment(\"2\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":87}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.EMPTY_SESSION;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1A;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.SessionBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    public void studentAttendSession() {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        Session emptySession \u003d EMPTY_SESSION;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        alice.attendSession(emptySession);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        assertTrue(emptySession.getStudents().contains(alice));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"    public void studentMissSession() {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"        Session sessionWithCarl \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"                .withSessionNumber(\"1\").withStudents(SESSION1A.getStudents()).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        Person carl \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"        carl.missSession(sessionWithCarl);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionWithCarl.getStudents().contains(carl));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"    public void isSameName() {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        // person shares same name object","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        Name aliceName \u003d ALICE.getName();","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"        assertTrue(ALICE.isSameName(aliceName));","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        // different person share same name","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"        Person personA \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"        Person personB \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"        assertTrue(personA.isSameName(personB.getName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"    public void isSameName_sameName_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"        Name name \u003d new Name(\"Jeremy\");","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"        Person person \u003d new PersonBuilder().withName(name.toString()).withPhone(\"12345678\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"        // Create another person with the same name","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"        Person anotherPerson \u003d new PersonBuilder().withName(name.toString()).withPhone(\"98765432\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"        assertTrue(person.isSameName(anotherPerson.getName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"    public void isSameName_sameNameDifferentObject_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"        Name name1 \u003d new Name(\"James\");","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"        Name name2 \u003d new Name(\"James\");","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"        Person person1 \u003d new PersonBuilder().withName(name1.toString()).withPhone(\"99999999\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"        Person person2 \u003d new PersonBuilder().withName(name2.toString()).withPhone(\"12345678\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"        assertTrue(person1.isSameName(person2.getName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"    public void isSameName_differentName_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"        Name name1 \u003d new Name(\"Green Blue\");","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"        Name name2 \u003d new Name(\"Blue Green\");","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"        Person person \u003d new PersonBuilder().withName(name1.toString()).withPhone(\"12345678\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"        // Create another person with a different name","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"        Person anotherPerson \u003d new PersonBuilder().withName(name2.toString()).withPhone(\"12345678\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"        assertFalse(person.isSameName(anotherPerson.getName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"                + \", gradedTests\u003d\" + ALICE.getGradedTest() + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ldinghan":57,"raydenlim":14,"-":98}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"    public void matchName_nullName_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.matchName(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"    public void matchName_personWithSameName_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        assertEquals(uniquePersonList.matchName(ALICE.getName()), ALICE);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    public void matchName_noMatchingNameFound_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.matchName(ALICE.getName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"Originalidk"},"content":"        List\u003cPerson\u003e listWithDuplicatePeople \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"Originalidk"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePeople));","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":187,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"ldinghan"},"content":"    public void matchName_successfulMatch() {","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"ldinghan"},"content":"        Name nameToMatch \u003d new Name(\"Alice Pauline\");","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"ldinghan"},"content":"        Person personWithNameToMatch \u003d new PersonBuilder().withName(nameToMatch.toString()).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"ldinghan"},"content":"        uniquePersonList.add(personWithNameToMatch);","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"ldinghan"},"content":"        Person matchedPerson \u003d uniquePersonList.matchName(nameToMatch);","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"ldinghan"},"content":"        assertEquals(personWithNameToMatch, matchedPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"ldinghan"},"content":"    public void matchName_nameNotInList_unsuccessfulMatch() {","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"ldinghan"},"content":"        Name nameToMatch \u003d new Name(\"Invalid name\");","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"ldinghan"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.matchName(nameToMatch));","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ldinghan":15,"Originalidk":2,"-":173,"wesho1107":16}},{"path":"src/test/java/seedu/address/model/person/assignment/AssignmentMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"public class AssignmentMapTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"    private AssignmentMap assignments \u003d new AssignmentMap();","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"    public void test_contains_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentNameTrue \u003d new AssignmentName(\"Finding ELDRIC\");","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"        assertTrue(assignments.contains(assignmentNameTrue));","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentNameFalse \u003d new AssignmentName(\"Finding BOYD\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        assertFalse(assignments.contains(assignmentNameFalse));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"    public void asUnmodifiableObservableMap_modifyMap_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"        AssignmentName assignmentName \u003d new AssignmentName(\"Finding ELDRIC\");","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"                -\u003e assignments.asUnmodifiableObservableMap().remove(assignmentName));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Originalidk":28}},{"path":"src/test/java/seedu/address/model/person/assignment/AssignmentNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"package seedu.address.model.person.assignment;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"public class AssignmentNameTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"    private AssignmentName assignmentName \u003d new AssignmentName(\"Finding ELDRIC\");","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"    public void test_sameObject_equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"        assertEquals(assignmentName, assignmentName);","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"    public void test_differentObject_equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"        assertFalse(assignmentName.equals(\"assignmentName\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Originalidk":21}},{"path":"src/test/java/seedu/address/model/session/SessionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1A;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1B;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION2;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3A;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3B;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.exceptions.DuplicateSessionException;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.exceptions.SessionNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"public class SessionListTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    private final SessionList sessionList \u003d new SessionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    public void contains_nullSession_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        assertThrows(NullPointerException.class, () -\u003e sessionList.contains(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    public void contains_sessionNotInList_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionList.contains(SESSION2));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    public void contains_sessionInList_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION3A);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionList.contains(SESSION3A));","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION1B);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionList.contains(SESSION1B));","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"    public void add_duplicateSession_throwsDuplicateSessionException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION3B);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"        assertThrows(DuplicateSessionException.class, () -\u003e sessionList.addSession(SESSION3B));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"    public void set_setSession_throwsSessionNotFoundException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        assertThrows(SessionNotFoundException.class, () -\u003e sessionList.setSession(SESSION1A, SESSION2));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    public void set_setSession_throwsDuplicateSessionException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION1A);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION2);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"        assertThrows(DuplicateSessionException.class, () -\u003e sessionList.setSession(SESSION1A, SESSION2));","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"    public void set_setSession_successful() {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION3A);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        sessionList.setSession(SESSION3A, SESSION2);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionList.contains(SESSION2));","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionList.contains(SESSION3A));","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"    public void remove_addedSession_successful() {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION1A);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionList.contains(SESSION1A));","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        sessionList.remove(SESSION1A);","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionList.contains(SESSION1A));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"    public void remove_throwsSessionNotFoundException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION1A);","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"        assertThrows(SessionNotFoundException.class, () -\u003e sessionList.remove(SESSION2));","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"    public void find_findSessionByNumber_notInSessionList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION1B);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"        assertEquals(sessionList.findSessionBySessionNumber(new SessionNumber(\"5\")), null);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"    public void find_findSessionByNumber_successfulFind() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"        sessionList.addSession(SESSION3A);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"        assertEquals(SESSION3A, sessionList.findSessionBySessionNumber(new SessionNumber(\"3\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"    public void setSessionList_setNewSessionList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"        List\u003cSession\u003e newSessionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"        newSessionList.add(SESSION1A);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"        sessionList.setSessionList(newSessionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionList.contains(SESSION1A));","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"        assertEquals(sessionList.asUnmodifiableObservableList().toString(), sessionList.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":109}},{"path":"src/test/java/seedu/address/model/session/SessionNumberContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.SessionBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"public class SessionNumberContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"1\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"0\", \"3\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        SessionNumberContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"                new SessionNumberContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"        SessionNumberContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"                new SessionNumberContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        SessionNumberContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"                new SessionNumberContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"    public void test_sessionNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        // One keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"        SessionNumberContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"                new SessionNumberContainsKeywordsPredicate(Collections.singletonList(\"1\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        assertTrue(predicate.test(new SessionBuilder().withSessionNumber(\"12\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        predicate \u003d new SessionNumberContainsKeywordsPredicate(Arrays.asList(\"0\", \"3\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"        assertTrue(predicate.test(new SessionBuilder().withSessionNumber(\"30\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"        predicate \u003d new SessionNumberContainsKeywordsPredicate(Arrays.asList(\"0\", \"3\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"        assertTrue(predicate.test(new SessionBuilder().withSessionNumber(\"35\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"    public void test_sessionNumberDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"        SessionNumberContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"                new SessionNumberContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        assertFalse(predicate.test(new SessionBuilder().withSessionNumber(\"1\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"        predicate \u003d new SessionNumberContainsKeywordsPredicate(Arrays.asList(\"0\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"        assertFalse(predicate.test(new SessionBuilder().withSessionNumber(\"2\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        SessionNumberContainsKeywordsPredicate predicate \u003d new SessionNumberContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"        String expected \u003d SessionNumberContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"                + \"{session keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ldinghan":82}},{"path":"src/test/java/seedu/address/model/session/SessionNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"public class SessionNumberTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"    public void isValidSessionNumber_validSessionNumber_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"        // Valid session numbers containing only digits","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        assertTrue(SessionNumber.isValidSessionNumber(\"1\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"        assertTrue(SessionNumber.isValidSessionNumber(\"12345\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"        assertTrue(SessionNumber.isValidSessionNumber(\"9876543210\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"    public void isValidSessionNumber_invalidSessionNumber_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"        // Invalid session numbers containing non-digits","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"A1\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"1A\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"12 34\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"1_23\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"12@34\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\" 1234\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"1234 \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\" 1234 \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        // Invalid session numbers that are blank or empty","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"\\t\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SessionNumber.isValidSessionNumber(\"\\n\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        SessionNumber sessionNumber1 \u003d new SessionNumber(\"1\");","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        SessionNumber sessionNumber2 \u003d new SessionNumber(\"2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        SessionNumber sessionNumber1Copy \u003d new SessionNumber(\"1\");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with itself","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionNumber1.equals(sessionNumber1));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with an equivalent object","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionNumber1.equals(sessionNumber1Copy));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with a different object","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionNumber1.equals(sessionNumber2));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with null","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionNumber1.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ldinghan":54}},{"path":"src/test/java/seedu/address/model/session/SessionStudentsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"public class SessionStudentsTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    public void addStudent_validStudent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"        SessionStudents sessionStudents \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"        Person student \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"        sessionStudents.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionStudents.contains(student));","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        assertEquals(1, sessionStudents.size());","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    public void removeStudent_validStudent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        SessionStudents sessionStudents \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        Person student \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        sessionStudents.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionStudents.contains(student));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        sessionStudents.remove(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionStudents.contains(student));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        assertEquals(0, sessionStudents.size());","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    public void toStudentNames_validSessionStudents_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        SessionStudents sessionStudents \u003d new SessionStudents(","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"                new PersonBuilder().withName(\"Zoe\").build(),","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"                new PersonBuilder().withName(\"Bob\").build(),","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"                new PersonBuilder().withName(\"Alice\").build()","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"        );","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        String expected \u003d \"Alice, Bob, Zoe\";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expected, sessionStudents.toStudentNames());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        SessionStudents sessionStudents1 \u003d new SessionStudents(new PersonBuilder().withName(\"Alice\").build());","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        SessionStudents sessionStudents2 \u003d new SessionStudents(new PersonBuilder().withName(\"Bob\").build());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"        SessionStudents sessionStudents1Copy \u003d new SessionStudents(new PersonBuilder().withName(\"Alice\").build());","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with itself","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionStudents1.equals(sessionStudents1));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with an equivalent object","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"        assertTrue(sessionStudents1.equals(sessionStudents1Copy));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with a different object","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionStudents1.equals(sessionStudents2));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        // Testing equality with null","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        assertFalse(sessionStudents1.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ldinghan":67}},{"path":"src/test/java/seedu/address/model/session/SessionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.model.session;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1A;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1B;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION2;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3A;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3B;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.SessionBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"public class SessionTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    public void isSameSession() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"        assertTrue(SESSION1A.isSameSession(SESSION1B));","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SESSION1A.isSameSession(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SESSION2.isSameSession(SESSION3A));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"        Person bob \u003d new PersonBuilder(TypicalPersons.BOB).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        SESSION3B.addStudent(bob);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        assertTrue(SESSION3B.isSameSession(SESSION3A));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"        Session otherSession \u003d new Session(SESSION1A.getSessionNumber(), SESSION1A.getStudents());","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"        assertTrue(SESSION1A.equals(otherSession));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"        assertTrue(SESSION2.equals(SESSION2));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SESSION3A.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SESSION3B.equals(\"test\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SESSION2.equals(SESSION3A));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"        // different students -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"        Session tempSession \u003d new Session(SESSION1B.getSessionNumber(), SESSION1B.getStudents());","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"        Person carl \u003d new PersonBuilder(TypicalPersons.CARL).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"        tempSession.addStudent(carl);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        assertFalse(SESSION1B.equals(tempSession));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"    public void createSessionWithoutStudents() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"        Session sessionWithoutStudents \u003d new SessionBuilder().withSessionNumber(\"99\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"        assertTrue(\"99 - \".equals(sessionWithoutStudents.toString()));","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        String expected1 \u003d \"15 - Bob Choo\";","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"        Session session2 \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"                .withSessionNumber(\"15\").withStudents(TypicalPersons.BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expected1, session2.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"        Session tempSession3A \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"                .withSessionNumber(\"73\").withStudents(TypicalPersons.ALICE, TypicalPersons.BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"        String expected2 \u003d \"73 - Alice Pauline, Bob Choo\";","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        assertEquals(expected2, tempSession3A.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":77}},{"path":"src/test/java/seedu/address/model/task/TaskDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"public class TaskDescriptionTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDescription(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public void isValidDescription() {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        // null description","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskDescription.isValidDescription(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        // invalid descriptions","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskDescription.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        // valid descriptions","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"\")); // empty string","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"complete by friday\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"-\")); // one character","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"complete the work and do \"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"                + \"the 5 quizzes and all the projects user guide developer guide\")); // long description","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        TaskDescription description \u003d new TaskDescription(\"Valid Description\");","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        assertTrue(description.equals(new TaskDescription(\"Valid Description\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        assertTrue(description.equals(description));","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        assertFalse(description.equals(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        assertFalse(description.equals(5.0f));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        assertFalse(description.equals(new TaskDescription(\"Other Valid Description\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":51}},{"path":"src/test/java/seedu/address/model/task/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK2;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"public class TaskListTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.contains(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertFalse(taskList.contains(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertTrue(taskList.contains(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.add(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.add(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.editTask(null, TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.editTask(TASK1, null));","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.editTask(TASK1, TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        taskList.editTask(TASK1, TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        taskList.editTask(TASK1, TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.editTask(TASK1, TASK2));","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.remove(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.remove(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        taskList.remove(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTasks((TaskList) null));","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"        taskList.setTasks(expectedTaskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e otherTaskList \u003d Collections.singletonList(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"        taskList.setTasks(otherTaskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(TASK1, TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"                -\u003e taskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexWithinBounds_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"        assertEquals(TASK1, taskList.getTask(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexOutsideBounds_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e taskList.getTask(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"Respirayson"},"content":"        assertEquals(taskList.asUnmodifiableObservableList().toString(), taskList.toString());","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":164}},{"path":"src/test/java/seedu/address/model/task/TaskNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class TaskNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    public void test_taskNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        // One keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"cs2103t\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cs2103t\", \"cs2100\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cs2100\", \"cs2101\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2101\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cS2103T\", \"Cs2100\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public void test_taskNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d new TaskNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"do cs2103t\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cs2101\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d new TaskNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        String expected \u003d TaskNameContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"                + \"{task keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":86}},{"path":"src/test/java/seedu/address/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"public class TaskNameTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    public void isValidName() {","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        // null name","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        // valid name","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"do work\")); // alphabets only","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"2103\")); // numbers only","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"do the 2nd paper\")); // alphanumeric characters","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"Read Script\")); // with capital letters","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"Read the script and memorise everything fully\")); // long names","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        TaskName name \u003d new TaskName(\"Borrow Book\");","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        assertTrue(name.equals(new TaskName(\"Borrow Book\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        assertFalse(name.equals(new TaskName(\"Other Borrow Book\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":60}},{"path":"src/test/java/seedu/address/model/task/TaskPriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"public class TaskPriorityTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"    public void testEnumValues_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"        // Test that all enum values are correctly defined","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"        TaskPriority low \u003d TaskPriority.LOW;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"        TaskPriority medium \u003d TaskPriority.MEDIUM;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"        TaskPriority high \u003d TaskPriority.HIGH;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"LOW\", low.name());","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"MEDIUM\", medium.name());","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"HIGH\", high.name());","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public void testMessageConstraints_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"TaskPriority should only be low, medium, or high\", TaskPriority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":26}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK2;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"public class TaskTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.isSameTask(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.isSameTask(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        // same name, same description -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        Task editedTask1 \u003d new TaskBuilder(TASK1).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.isSameTask(editedTask1));","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        // different name, same description -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        editedTask1 \u003d new TaskBuilder(TASK1).withDescription(\"Hello world\").build();","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.isSameTask(editedTask1));","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        // same name, different description -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        editedTask1 \u003d new TaskBuilder(TASK1).withName(\"Say goodbye\").build();","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.isSameTask(editedTask1));","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        Task taskCopy \u003d new TaskBuilder(TASK1).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.equals(taskCopy));","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.equals(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(5));","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(TASK2));","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new TaskBuilder(TASK1).withName(TASK2.getName().taskName).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(editedTask));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        editedTask \u003d new TaskBuilder(TASK1).withDescription(TASK2.getDescription().description).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(editedTask));","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"    public void hashCode_sameFields_expectSameHashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"        Task task1 \u003d new Task(new TaskName(\"Task 1\"), new TaskDescription(\"Description 1\"), false, TaskPriority.LOW);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"        Task task2 \u003d new Task(new TaskName(\"Task 1\"), new TaskDescription(\"Description 1\"), false, TaskPriority.LOW);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"        assertEquals(task1.hashCode(), task2.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"    public void hashCode_differentFields_expectDifferentHashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        Task task1 \u003d new Task(new TaskName(\"Task 1\"), new TaskDescription(\"Description 1\"), false, TaskPriority.LOW);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"        Task task2 \u003d new Task(new TaskName(\"Task 2\"), new TaskDescription(\"Description 2\"), true, TaskPriority.HIGH);","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"        assertThrows(AssertionError.class, () -\u003e assertEquals(task1.hashCode(), task2.hashCode()));","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        String expected \u003d String.format(\"%s{name\u003d%s, description\u003d%s, isDone\u003d%s, priority\u003d%s}\",","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"                Task.class.getCanonicalName(), TASK1.getName(), TASK1.getDescription(),","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"                TASK1.getIsDone(), TASK1.getPriority());","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expected, TASK1.toString());","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"ldinghan":17,"Respirayson":72}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedConsultationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import seedu.address.testutil.TypicalConsultations;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class JsonAdaptedConsultationTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    public void toModelType_validConsultationDetails_returnsConsultation() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"        JsonAdaptedConsultation consultation \u003d new JsonAdaptedConsultation(TypicalConsultations.CONSULTATION1);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"        assertEquals(TypicalConsultations.CONSULTATION1, consultation.toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    public void toModelType_validConsultationDetailsWithMultipleStudents_returnConsultation() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        JsonAdaptedConsultation consultation \u003d new JsonAdaptedConsultation(TypicalConsultations.CONSULTATION2);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        assertEquals(TypicalConsultations.CONSULTATION2, consultation.toModelType());","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    public void toModelType_invalidConsultationDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        List\u003cJsonAdaptedPerson\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"        JsonAdaptedConsultation consultation \u003d new JsonAdaptedConsultation(\"2023-11-11\", \"01:00\", students);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        assertThrows(DateTimeParseException.class, consultation::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":33}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGradedTestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.Finals;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.MidTerms;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.PracticalExam;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.ReadingAssessment;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import seedu.address.testutil.TypicalGradedTest;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"public class JsonAdaptedGradedTestTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_validJsonAdaptedGradedTestWithDefaults_success() throws IllegalValueException {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest jsonAdaptedGradedTest \u003d new JsonAdaptedGradedTest(","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"                \"80\", \"90\", \"-\", \"85\", \"-\");","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"        GradedTest gradedTest \u003d jsonAdaptedGradedTest.toModelType();","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment ra1 \u003d new ReadingAssessment(\"80\");","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"        ReadingAssessment ra2 \u003d new ReadingAssessment(\"90\");","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"        MidTerms midTerms \u003d new MidTerms(\"-\");","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"        Finals finals \u003d new Finals(\"85\");","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"        PracticalExam pe \u003d new PracticalExam(\"-\");","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        // Verify the converted GradedTest fields, including the defaults","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"        assertTrue(ra1.equals(gradedTest.getRA1()));","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"        assertTrue(ra2.equals(gradedTest.getRA2()));","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"        assertTrue(midTerms.equals(gradedTest.getMidTerms()));","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        assertTrue(finals.equals(gradedTest.getFinals()));","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"        assertTrue(pe.equals(gradedTest.getPracticalExam()));","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_invalidJsonAdaptedGradedTest_throwsIllegalValueException1() {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest jsonAdaptedGradedTest \u003d new JsonAdaptedGradedTest(","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"                \"80\", \"90\", \"abc\", \"85\", \"95\");","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedGradedTest::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_invalidJsonAdaptedGradedTest_throwsIllegalValueException2() {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest jsonAdaptedGradedTest \u003d new JsonAdaptedGradedTest(","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"                \"-1\", \"90\", \"23\", \"85\", \"95\");","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedGradedTest::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_invalidJsonAdaptedGradedTest_throwsIllegalValueException3() {","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest jsonAdaptedGradedTest \u003d new JsonAdaptedGradedTest(","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"                \"23\", \"-90\", \"23\", \"85\", \"95\");","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedGradedTest::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_missingFields_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest jsonAdaptedGradedTest \u003d new JsonAdaptedGradedTest(null, \"90\", \"75\", \"85\", \"95\");","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedGradedTest::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_validGradedTestDetails_returnsConsultation1() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest gradedTest \u003d new JsonAdaptedGradedTest(TypicalGradedTest.GT1);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        assertEquals(TypicalGradedTest.GT1, gradedTest.toModelType());","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_validGradedTestDetails_returnsConsultation2() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest gradedTest \u003d new JsonAdaptedGradedTest(TypicalGradedTest.GT2);","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        assertEquals(TypicalGradedTest.GT2, gradedTest.toModelType());","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_validGradedTestDetails_returnsConsultation3() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest gradedTest \u003d new JsonAdaptedGradedTest(TypicalGradedTest.GT3);","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        assertEquals(TypicalGradedTest.GT3, gradedTest.toModelType());","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_validGradedTestDetails_returnsConsultation4() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedGradedTest gradedTest \u003d new JsonAdaptedGradedTest(TypicalGradedTest.GT4);","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"        assertEquals(TypicalGradedTest.GT4, gradedTest.toModelType());","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"raydenlim":90}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    private static final String INVALID_RA1 \u003d \"#%grade\";","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    private static final String INVALID_RA2 \u003d \"#%grade\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    private static final String INVALID_MIDTERMS \u003d \"#%grade\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    private static final String INVALID_FINALS \u003d \"#%grade\";","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    private static final String INVALID_PE \u003d \"#%grade\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    private static final List\u003cJsonAdaptedGradedTest\u003e VALID_GRADED_TEST \u003d BENSON.getGradedTest().stream()","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"            .map(JsonAdaptedGradedTest::new)","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"                VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"                        VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"                VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"                        VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"                VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"                        VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"                VALID_TAGS, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"                        invalidTags, VALID_GRADED_TEST);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"raydenlim":26,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedSessionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.SessionBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"public class JsonAdaptedSessionTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    public void toModelType_validSessionDetails_returnsSession() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        JsonAdaptedSession session \u003d new JsonAdaptedSession(new SessionBuilder().withSessionNumber(\"0\").build());","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"        assertEquals(new SessionBuilder().withSessionNumber(\"0\").build(), session.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    public void toModelType_validSessionDetailsWithMultipleStudents_returnsSession() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        JsonAdaptedSession session \u003d new JsonAdaptedSession(new Session(new SessionNumber(\"1\"), TypicalPersons.BOB));","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"        assertEquals(new Session(new SessionNumber(\"1\"), TypicalPersons.BOB), session.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"    public void toModelType_invalidSessionNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"        List\u003cJsonAdaptedPerson\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        JsonAdaptedSession session \u003d new JsonAdaptedSession(null, students);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        String expectedMessage \u003d SessionNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, session::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"ldinghan":38}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskPriority;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    private static final String INVALID_TASK_NAME \u003d \"!!! do cs2120@@@\"; // no symbols","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private static final String INVALID_TASK_DESCRIPTION \u003d \"    \"; // whitespace only not allowed","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private static final String INVALID_TASK_PRIORITY \u003d \"jason\"; // not low, medium or high","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private static final String VALID_NAME \u003d TASK1.getName().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private static final String VALID_DESCRIPTION \u003d TASK1.getDescription().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private static final String VALID_PRIORITY \u003d TASK1.getPriority().name();","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        assertEquals(TASK1, task.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"                new JsonAdaptedTask(INVALID_TASK_NAME, INVALID_TASK_DESCRIPTION, false, VALID_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_DESCRIPTION, false, VALID_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"                new JsonAdaptedTask(VALID_NAME, INVALID_TASK_DESCRIPTION, false, VALID_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d TaskDescription.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, null, false, VALID_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskDescription.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, false, INVALID_TASK_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d TaskPriority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_nullPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, false, null);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskPriority.class.getSimpleName());","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":75}},{"path":"src/test/java/seedu/address/storage/JsonConsultationListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION3;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.CONSULTATION4;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.TypicalConsultations.getTypicalConsultationListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"public class JsonConsultationListStorageTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"            \"JsonConsultationListStorageTest\");","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    @TempDir","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    public void readConsultation_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e readConsultationListBook(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    private java.util.Optional\u003cReadOnlyConsultationList\u003e readConsultationListBook(String filePath) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"        return new JsonConsultationListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"                .readConsultationList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"                : null;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        assertFalse(readConsultationListBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"        assertThrows(DataLoadingException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"                readConsultationListBook(\"notJsonFormatConsultationListBook.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    public void readConsultationListBook_invalidDate_throwDateTimeParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"                readConsultationListBook(\"invalidDateConsultationListBook.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"    public void readConsultationListBook_invalidTime_throwDateTimeParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"                readConsultationListBook(\"invalidTimeConsultationListBook.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"    public void readAndSaveConsultationListBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"        Path filePath \u003d testFolder.resolve(\"TempConsultationListBook.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook original \u003d getTypicalConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"        JsonConsultationListStorage jsonConsultationListStorage \u003d new JsonConsultationListStorage(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"        jsonConsultationListStorage.saveConsultationList(original, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"        ReadOnlyConsultationList readBack \u003d jsonConsultationListStorage.readConsultationList(filePath).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"        assertEquals(original, new ConsultationListBook(readBack));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"        // Modify data, overwrite existing file, and read back","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"        original.addConsultation(CONSULTATION4);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"        jsonConsultationListStorage.saveConsultationList(original, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"        readBack \u003d jsonConsultationListStorage.readConsultationList(filePath).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"        assertEquals(original, new ConsultationListBook(readBack));","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"        original.addConsultation(CONSULTATION3);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"        jsonConsultationListStorage.saveConsultationList(original);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"        readBack \u003d jsonConsultationListStorage.readConsultationList().get();","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"        assertEquals(original, new ConsultationListBook(readBack));","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"    public void saveConsultationListBook_nullConsultationListBook_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"                saveConsultationListBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"    public void saveConsultationListBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"                saveConsultationListBook(new ConsultationListBook(), null));","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"wesho1107"},"content":"     * Saves {@code consultationListBook} at the specified {@code filePath}.","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"wesho1107"},"content":"    private void saveConsultationListBook(ReadOnlyConsultationList consultationListBook, String filePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"wesho1107"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"wesho1107"},"content":"            new JsonConsultationListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"wesho1107"},"content":"                    .saveConsultationList(consultationListBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"wesho1107"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"wesho1107"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":116}},{"path":"src/test/java/seedu/address/storage/JsonGradedTestListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT1;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT3;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.GT4;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.getTypicalGradedTestList;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"public class JsonGradedTestListStorageTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"            \"data\", \"JsonGradedTestListStorageTest\");","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    @TempDir","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    public void readGradedTestList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e readGradedTestList(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"    private java.util.Optional\u003cReadOnlyGradedTestList\u003e readGradedTestList(String filePath)","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"            throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        return new JsonGradedTestListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"                .readGradedTestList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"                : null;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        assertFalse(readGradedTestList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DataLoadingException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"                readGradedTestList(\"notJsonFormatGradedTestList.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    public void readGradedTestList_invalidGradedTestList_throwDataLoadingException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DataLoadingException.class, ()-\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"                readGradedTestList(\"invalidGradedTestList.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"    public void readGradedTestList_invalidAndValidGradedTestList_throwDataLoadingException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"        assertThrows(DataLoadingException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"                readGradedTestList(\"invalidAndValidGradedTestList.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"    public void readAndSaveGradedTestList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"        Path filePath \u003d testFolder.resolve(\"TempGradedTestList.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook original \u003d getTypicalGradedTestList();","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        JsonGradedTestListStorage jsonGradedTestListStorage \u003d new JsonGradedTestListStorage(filePath);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"        jsonGradedTestListStorage.saveGradedTestList(original, filePath);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"        ReadOnlyGradedTestList readBack \u003d jsonGradedTestListStorage.readGradedTestList(filePath).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"        assertEquals(original, new GradedTestListBook(readBack));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        original.addGradedTest(GT3);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"        original.removeGradedTest(GT1);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"        jsonGradedTestListStorage.saveGradedTestList(original, filePath);","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        readBack \u003d jsonGradedTestListStorage.readGradedTestList(filePath).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        assertEquals(original, new GradedTestListBook(readBack));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"        original.addGradedTest(GT4);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"        jsonGradedTestListStorage.saveGradedTestList(original); // file path not specified","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"        readBack \u003d jsonGradedTestListStorage.readGradedTestList().get(); // file path not specified","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"        assertEquals(original, new GradedTestListBook(readBack));","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"    public void saveTaskList_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"                saveGradedTestList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"     * Saves {@code gradedTestList} at the specified {@code filePath}.","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"    private void saveGradedTestList(ReadOnlyGradedTestList gradedTestList, String filePath) {","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"            new JsonGradedTestListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"                    .saveGradedTestList(gradedTestList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"    public void saveGradedTestList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"                saveGradedTestList(new GradedTestListBook(), null));","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":118}},{"path":"src/test/java/seedu/address/storage/JsonSerializableConsultationListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import seedu.address.testutil.TypicalConsultations;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"public class JsonSerializableConsultationListTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"            \"test\", \"data\", \"JsonSerializableConsultationListTest\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    private static final Path TYPICAL_CONSULTATION_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"            .resolve(\"typicalConsultationList.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    private static final Path INVALID_CONSULTATION_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"            .resolve(\"invalidConsultationList.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    private static final Path DUPLICATE_CONSULTATION_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"            .resolve(\"duplicateConsultationList.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    public void toModelType_typicalConsultationsFile_success() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        JsonSerializableConsultationList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CONSULTATION_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"                JsonSerializableConsultationList.class).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook consultationList \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook typicalConsultationList \u003d TypicalConsultations.getTypicalConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"        assertEquals(consultationList, typicalConsultationList);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public void toModelType_invalidConsultationsFile_throwsDateTimeParseException() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        JsonSerializableConsultationList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CONSULTATION_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"                JsonSerializableConsultationList.class).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        assertThrows(DateTimeParseException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"        JsonSerializableConsultationList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CONSULTATION_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"                JsonSerializableConsultationList.class).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableConsultationList.MESSAGE_DUPLICATE_CONSULTATION,","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"wesho1107":50}},{"path":"src/test/java/seedu/address/storage/JsonSerializableGradedTestListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.testutil.TypicalGradedTest;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"public class JsonSerializableGradedTestListTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"            \"test\", \"data\", \"JsonSerializableGradedTestListTest\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    private static final Path TYPICAL_GRADED_TEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGradedTestList.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"    private static final Path INVALID_GRADED_TEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGradedTestList.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"    private static final Path DUPLICATE_GRADED_TEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGradedTestList.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_typicalGradedTestFile_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"        JsonSerializableGradedTestList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_GRADED_TEST_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"                JsonSerializableGradedTestList.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook gradedTestListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook typicalGradedTestList \u003d TypicalGradedTest.getTypicalGradedTestList();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        assertEquals(gradedTestListFromFile, typicalGradedTestList);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_invalidGradedTestFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"        JsonSerializableGradedTestList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GRADED_TEST_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"                JsonSerializableGradedTestList.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    public void toModelType_duplicateGradedTest_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        JsonSerializableGradedTestList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GRADED_TEST_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"                JsonSerializableGradedTestList.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableGradedTestList.MESSAGE_DUPLICATE_GRADED_TEST,","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"raydenlim":46}},{"path":"src/test/java/seedu/address/storage/JsonSerializableSessionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"import seedu.address.testutil.TypicalSessions;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"public class JsonSerializableSessionListTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"            \"test\", \"data\", \"JsonSerializableSessionListTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    private static final Path TYPICAL_SESSIONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalSessionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    private static final Path INVALID_SESSION_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidSessionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    private static final Path DUPLICATE_SESSION_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateSessionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    public void toModelType_typicalSessionsFile_success() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"        JsonSerializableSessionList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_SESSIONS_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"                JsonSerializableSessionList.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        SessionListBook sessionListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        SessionListBook typicalSessionList \u003d TypicalSessions.getTypicalSessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        assertEquals(sessionListFromFile, typicalSessionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    public void toModelType_invalidSessionFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"        JsonSerializableSessionList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_SESSION_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"                JsonSerializableSessionList.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"    public void toModelType_duplicateSessions_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"        JsonSerializableSessionList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_SESSION_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"                JsonSerializableSessionList.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSessionList.MESSAGE_DUPLICATE_SESSION,","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":49}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class JsonSerializableTaskListTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"            \"test\", \"data\", \"JsonSerializableTaskListTest\");","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        TaskListBook taskListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        TaskListBook typicalTaskList \u003d TypicalTasks.getTypicalTaskList();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertEquals(taskListFromFile, typicalTaskList);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskList.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":48}},{"path":"src/test/java/seedu/address/storage/JsonSessionListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION1A;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION3A;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.SESSION_TYPICAL1;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalSessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"public class JsonSessionListStorageTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSessionListStorageTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    @TempDir","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    public void readSessionList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSessionList(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    private java.util.Optional\u003cReadOnlySessionList\u003e readSessionList(String filePath) throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"        return new JsonSessionListStorage(Paths.get(filePath)).readSessionList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"                : null;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        assertFalse(readSessionList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readSessionList(\"notJsonFormatSessionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"    public void readSessionList_invalidSessionList_throwDataLoadingException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readSessionList(\"invalidSessionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"    public void readSessionList_invalidAndValidSessionList_throwDataLoadingException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readSessionList(\"invalidAndValidSessionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"    public void readAndSaveSessionList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        Path filePath \u003d testFolder.resolve(\"TempSessionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"        SessionListBook original \u003d getTypicalSessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        JsonSessionListStorage jsonSessionListStorage \u003d new JsonSessionListStorage(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"        jsonSessionListStorage.saveSessionList(original, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"        ReadOnlySessionList readBack \u003d jsonSessionListStorage.readSessionList(filePath).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"        assertEquals(original, new SessionListBook(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        original.addSession(SESSION1A);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"        original.removeSession(SESSION_TYPICAL1);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"        jsonSessionListStorage.saveSessionList(original, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"        readBack \u003d jsonSessionListStorage.readSessionList(filePath).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"        assertEquals(original, new SessionListBook(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"        original.addSession(SESSION3A);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"        jsonSessionListStorage.saveSessionList(original); // file path not specified","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"        readBack \u003d jsonSessionListStorage.readSessionList().get(); // file path not specified","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"        assertEquals(original, new SessionListBook(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"    public void saveSessionList_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSessionList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"     * Saves {@code taskList} at the specified {@code filePath}.","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"    private void saveSessionList(ReadOnlySessionList sessionList, String filePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"            new JsonSessionListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"                    .saveSessionList(sessionList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", e);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"    public void saveSessionList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSessionList(new SessionListBook(), null));","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ldinghan":111}},{"path":"src/test/java/seedu/address/storage/JsonTaskListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK3;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK4;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"public class JsonTaskListStorageTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskListStorageTest\");","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    @TempDir","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public void readTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskList(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    private java.util.Optional\u003cReadOnlyTaskList\u003e readTaskList(String filePath) throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        return new JsonTaskListStorage(Paths.get(filePath)).readTaskList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"                : null;","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        assertFalse(readTaskList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaskList(\"notJsonFormatTaskList.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void readTaskList_invalidTaskList_throwDataLoadingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaskList(\"invalidTaskList.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    public void readTaskList_invalidAndValidTaskList_throwDataLoadingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaskList(\"invalidAndValidTaskList.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public void readAndSaveTaskList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        TaskListBook original \u003d getTypicalTaskList();","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage jsonTaskListStorage \u003d new JsonTaskListStorage(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        ReadOnlyTaskList readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        original.addTask(TASK3);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        original.removeTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        original.addTask(TASK4);","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        jsonTaskListStorage.saveTaskList(original); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList().get(); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"     * Saves {@code taskList} at the specified {@code filePath}.","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"    private void saveTaskList(ReadOnlyTaskList taskList, String filePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"            new JsonTaskListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"                    .saveTaskList(taskList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(new TaskListBook(), null));","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":110}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalConsultations.getTypicalConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.testutil.TypicalGradedTest.getTypicalGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import static seedu.address.testutil.TypicalSessions.getTypicalSessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tasks\"));","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        JsonSessionListStorage sessionListStorage \u003d new JsonSessionListStorage(getTempFilePath(\"sessions\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        JsonConsultationListStorage consultationListStorage \u003d new JsonConsultationListStorage(","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"                getTempFilePath(\"consultations\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        JsonGradedTestListStorage gradedTestListStorage \u003d new JsonGradedTestListStorage(","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"                getTempFilePath(\"gradedTests\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"                taskListStorage, sessionListStorage, consultationListStorage, gradedTestListStorage);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"    public void sessionListReadSave() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"        SessionListBook original \u003d getTypicalSessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"        storageManager.saveSessionList(original);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"        ReadOnlySessionList retrieved \u003d storageManager.readSessionList().get();","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"        assertEquals(original, new SessionListBook(retrieved));","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"    public void getSessionListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"        assertNotNull(storageManager.getSessionListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"    public void getConsultationListFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"        assertNotNull(storageManager.getConsultationListFilePath());","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"    public void consultationListReadSave() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"        ConsultationListBook original \u003d getTypicalConsultationListBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"        storageManager.saveConsultationList(original);","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"        ReadOnlyConsultationList retrieved \u003d storageManager.readConsultationList().get();","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"        assertEquals(original, new ConsultationListBook(retrieved));","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public void taskListReadSave() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        /*","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        TaskListBook original \u003d getTypicalTaskList();","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"        storageManager.saveTaskList(original);","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"        ReadOnlyTaskList retrieved \u003d storageManager.readTaskList().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(retrieved));","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"    public void getTaskListFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"        assertNotNull(storageManager.getTaskListFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"    public void getGradedTaskListFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"        assertNotNull(storageManager.getGradedTestListFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"    public void gradedTestListReadSave() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"        /*","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"raydenlim"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"raydenlim"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"raydenlim"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook original \u003d getTypicalGradedTestList();","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"raydenlim"},"content":"        storageManager.saveGradedTestList(original);","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"raydenlim"},"content":"        ReadOnlyGradedTestList retrieved \u003d storageManager.readGradedTestList().get();","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"raydenlim"},"content":"        // assertTrue(original.equals(new GradedTestListBook(retrieved)));","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"raydenlim"},"content":"        System.out.println(\"Original: \" + original);","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"        System.out.println(\"Retrieved: \" + new GradedTestListBook(retrieved));","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"        assertEquals(original, new GradedTestListBook(retrieved));","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ldinghan":17,"Respirayson":22,"raydenlim":45,"-":67}},{"path":"src/test/java/seedu/address/testutil/ConsultationBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" * A utility class to help with building Consultation objects.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"public class ConsultationBuilder {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    public static final String DEFAULT_DATE \u003d \"11/11/2023\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    public static final String DEFAULT_TIME \u003d \"11:11\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    public static final Set\u003cPerson\u003e DEFAULT_STUDENTS \u003d TypicalPersons.DEFAULT_PERSONS;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    private final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    private final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    private LocalDate date;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    private LocalTime time;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    private Set\u003cPerson\u003e students;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * Creates a {@code ConsultationBuilder} with the default details.","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    public ConsultationBuilder() {","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        this.date \u003d LocalDate.parse(DEFAULT_DATE, dateFormatter);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"        this.time \u003d LocalTime.parse(DEFAULT_TIME, timeFormatter);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        this.students \u003d DEFAULT_STUDENTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * Initializes the ConsultationBuilder with the data of {@code consultation}.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public ConsultationBuilder(Consultation consultation) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        this.date \u003d consultation.getDate();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        this.time \u003d consultation.getTime();","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        this.students \u003d consultation.getStudents();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     * Sets the {@code Date} of the {@code Consultation} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"    public ConsultationBuilder withDate(String date) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        this.date \u003d LocalDate.parse(date.trim(), dateFormatter);;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"     * Sets the {@code Time} of the {@code Consultation} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    public ConsultationBuilder withTime(String time) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"        this.time \u003d LocalTime.parse(time.trim(), timeFormatter);;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"     * Get the set of students for the {@code Consultation} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    public ConsultationBuilder withStudents(Person ... students) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"        this.students \u003d SampleDataUtil.getStudentSet(students);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"    public Consultation build() {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        return new Consultation(date, time, students);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":70}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.Finals;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.MidTerms;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.PracticalExam;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.ReadingAssessment;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        descriptor.setGradedTest(person.getGradedTest());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"     * Parses the {@code gradedTest} into a {@code Set\u003cGradedTest\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"     * that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"    public EditPersonDescriptorBuilder withGradedTest(String... gradedTests) {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"        Set\u003cGradedTest\u003e gradedTestSet \u003d Stream.of(gradedTests).map(GradedTest::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"        descriptor.setGradedTest(gradedTestSet);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"     * Sets the Reading Assessment for the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    public EditPersonDescriptorBuilder withRA1(String ra1) {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"        descriptor.setReadingAssessment1(new ReadingAssessment(ra1));","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"     * Sets the Reading Assessment for the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"    public EditPersonDescriptorBuilder withRA2(String ra2) {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"        descriptor.setReadingAssessment2(new ReadingAssessment(ra2));","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"     * Sets the MidTerms for the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"    public EditPersonDescriptorBuilder withMidTerm(String midterms) {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"        descriptor.setMidTerms(new MidTerms(midterms));","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"     * Sets the Finals for the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"raydenlim"},"content":"    public EditPersonDescriptorBuilder withFinals(String finals) {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"raydenlim"},"content":"        descriptor.setFinals(new Finals(finals));","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"     * Sets the Practical Exam for the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"    public EditPersonDescriptorBuilder withPracticalExam(String pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"        descriptor.setPracticalExam(new PracticalExam(pe));","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"raydenlim":56,"-":87}},{"path":"src/test/java/seedu/address/testutil/GradedTestBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.Finals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.MidTerms;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.PracticalExam;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.ReadingAssessment;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":" * A utility class for building GradedTest objects for testing.","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":" * It provides methods for setting individual components of a GradedTest object.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":" * You can create GradedTest objects with custom attributes or use default values.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"public class GradedTestBuilder {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"    public static final String DEFAULT_RA1 \u003d \"-\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"    public static final String DEFAULT_RA2 \u003d \"-\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"    public static final String DEFAULT_MIDTERMS \u003d \"-\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"    public static final String DEFAULT_FINALS \u003d \"-\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"    public static final String DEFAULT_PE \u003d \"-\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"    private ReadingAssessment rA1;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    private ReadingAssessment rA2;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"    private MidTerms midterms;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"    private Finals finals;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"    private PracticalExam pE;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"     * Creates a {@code GradedTestBuilder} with the default details.","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    public GradedTestBuilder() {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"        rA1 \u003d new ReadingAssessment(DEFAULT_RA1);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"        rA2 \u003d new ReadingAssessment(DEFAULT_RA2);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"        midterms \u003d new MidTerms(DEFAULT_MIDTERMS);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"        finals \u003d new Finals(DEFAULT_FINALS);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"        pE \u003d new PracticalExam(DEFAULT_PE);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"     * Initializes the GradedTestBuilder with the data of {@code gradedTest}.","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"    public GradedTestBuilder(GradedTest gradedTestToCopy) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        rA1 \u003d gradedTestToCopy.getRA1();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        rA2 \u003d gradedTestToCopy.getRA2();","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"        midterms \u003d gradedTestToCopy.getMidTerms();","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"        finals \u003d gradedTestToCopy.getFinals();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"        pE \u003d gradedTestToCopy.getPracticalExam();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"     * Sets the {@code ReadingAssessment} of the {@code GradedTest} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"    public GradedTestBuilder withReadingAssessment1(String rA1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"        this.rA1 \u003d new ReadingAssessment(rA1);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"     * Sets the {@code ReadingAssessment} of the {@code GradedTest} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    public GradedTestBuilder withReadingAssessment2(String rA2) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"        this.rA2 \u003d new ReadingAssessment(rA2);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"     * Sets the {@code MidTerms} of the {@code GradedTest} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"    public GradedTestBuilder withMidTerms(String midTerms) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"        this.midterms \u003d new MidTerms(midTerms);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"     * Sets the {@code Finals} of the {@code GradedTest} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"    public GradedTestBuilder withFinals(String finals) {","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"        this.finals \u003d new Finals(finals);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"     * Sets the {@code PracticalExam} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"    public GradedTestBuilder withPe(String pE) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"        this.pE \u003d new PracticalExam(pE);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"    public GradedTest build() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"        return new GradedTest(rA1, rA2, midterms, finals, pE);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":95}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyConsultationList;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyGradedTestList;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlySessionList;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"raydenlim"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"raydenlim"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"raydenlim"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"raydenlim"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"raydenlim"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"raydenlim"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"raydenlim"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"raydenlim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"raydenlim"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"raydenlim"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"raydenlim"},"content":"    public boolean hasConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"raydenlim"},"content":"    public void addConsultation(Consultation consultation) {","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlyConsultationList getConsultationList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cConsultation\u003e getFilteredConsultationList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"raydenlim"},"content":"    public void updateFilteredConsultationList(Predicate\u003cConsultation\u003e predicate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"raydenlim"},"content":"    public Person getMatchingStudentName(Name name) {","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"raydenlim"},"content":"    public void addSession(Session session) {","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"    public ObservableList\u003cSession\u003e getFilteredSessionList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlySessionList getSessionList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"raydenlim"},"content":"    public void updateFilteredSessionList(Predicate\u003cSession\u003e predicate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"    public Session findSessionBySessionNumber(SessionNumber sessionNumber) {","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"raydenlim"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-10-20"},{"lineNumber":203,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"raydenlim"},"content":"    public Path getGradedTestListFilePath() {","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestListFilePath(Path gradedTestListFilePath) {","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTestList(ReadOnlyGradedTestList gradedTestList) {","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"raydenlim"},"content":"    public ReadOnlyGradedTestList getGradedTestList() {","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"raydenlim"},"content":"    public boolean hasGradedTest(GradedTest gradedTest) {","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"raydenlim"},"content":"    public void deleteGradedTest(GradedTest target) {","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"raydenlim"},"content":"    public GradedTest getGradedTest(int index) {","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"raydenlim"},"content":"    public void addGradedTest(GradedTest gradedTest) {","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":245,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":246,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":247,"author":{"gitId":"raydenlim"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":248,"author":{"gitId":"raydenlim"},"content":"    public void setGradedTest(GradedTest target, GradedTest editedGradedTest) {","lastModifiedDate":"2023-10-20"},{"lineNumber":249,"author":{"gitId":"raydenlim"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":250,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"raydenlim":251}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"import seedu.address.model.person.assignment.AssignmentMap;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    private Set\u003cGradedTest\u003e gradedTests;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    private Set\u003cSession\u003e sessions;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Originalidk"},"content":"    private AssignmentMap assignments;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"        gradedTests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"        sessions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Originalidk"},"content":"        assignments \u003d new AssignmentMap();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"Originalidk"},"content":"        assignments \u003d personToCopy.getAllAssignments();","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"        gradedTests \u003d new HashSet\u003c\u003e(personToCopy.getGradedTest());","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"raydenlim"},"content":"     * Parses the {@code gradedTest} into a {@code Set\u003cGradedTest\u003e} and set it to","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"raydenlim"},"content":"     * the {@code GradedTest} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"raydenlim"},"content":"    public PersonBuilder withGradedTest(String ... gradedTests) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"raydenlim"},"content":"        this.gradedTests \u003d SampleDataUtil.getGradedTestSet(gradedTests);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"raydenlim"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":114,"author":{"gitId":"raydenlim"},"content":"        return new Person(name, phone, email, address, tags, gradedTests);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ldinghan":4,"raydenlim":14,"Originalidk":4,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADED_TEST;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"        person.getGradedTest().stream().forEach(","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"                s -\u003e sb.append(PREFIX_GRADED_TEST + s.gradedTestsIndv + \" \")","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"        );","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"raydenlim":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/SessionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionStudents;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":" * A utility class for building Session objects for testing purposes.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"public class SessionBuilder {","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"    public static final String DEFAULT_SESSION_NUMBER \u003d \"1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"    private SessionNumber sessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    private SessionStudents students;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"     * Constructs a SessionBuilder with default session number and no students.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    public SessionBuilder() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        sessionNumber \u003d new SessionNumber(DEFAULT_SESSION_NUMBER);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"        students \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"     * Constructs a SessionBuilder with a given session number and no students.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to use for the session being built.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    public SessionBuilder(SessionNumber sessionNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d sessionNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"        students \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"     * Sets the session number for the session being built.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"     * @param sessionNumber The session number to use for the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"     * @return The SessionBuilder object with the updated session number.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    public SessionBuilder withSessionNumber(String sessionNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"        this.sessionNumber \u003d new SessionNumber(sessionNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"     * Sets the students for the session being built.","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     * @param students The students to add to the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     * @return The SessionBuilder object with the updated students.","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"    public SessionBuilder withStudents(SessionStudents students) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"     * Sets the students for the session being built from an array of Person objects.","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"     * @param students The students to add to the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"     * @return The SessionBuilder object with the updated students.","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"    public SessionBuilder withStudents(Person... students) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        for (Person student : students) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"            this.students.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"     * Sets a single student for the session being built.","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"     * @param student The student to add to the session.","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"     * @return The SessionBuilder object with the updated student.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"    public SessionBuilder withStudent(Person student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"        this.students \u003d new SessionStudents();","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"        students.add(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"     * Builds and returns the Session object with the specified session number and students.","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"     * @return The Session object with the specified attributes.","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"    public Session build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"        return new Session(sessionNumber, students);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ldinghan":91}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskPriority;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"public class TaskBuilder {","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public static final String DEFAULT_NAME \u003d \"Borrow book\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"At Central Library\";","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"HIGH\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private TaskName name;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private TaskDescription description;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    private boolean isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private TaskPriority priority;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder() {","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        name \u003d new TaskName(DEFAULT_NAME);","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        priority \u003d TaskPriority.valueOf(DEFAULT_PRIORITY);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     * Initializes the TaskBuilder with the data of {@code task}.","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder(Task task) {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        name \u003d task.getName();","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        description \u003d task.getDescription();","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        priority \u003d task.getPriority();","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        this.name \u003d new TaskName(name);","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"     * Sets the {@code isDone} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"     * Sets the {@code priority} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder withPriority(String name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        this.priority \u003d TaskPriority.valueOf(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"    public Task build() {","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        return new Task(name, description, isDone, priority);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":77}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * A utility class for Task.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class TaskUtil {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public static String getAddCommand(Task task) {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        return AddTaskCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        sb.append(PREFIX_TASK_NAME).append(task.getName().taskName).append(\" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        sb.append(PREFIX_TASK_DESCRIPTION).append(task.getDescription().description).append(\" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Respirayson":30}},{"path":"src/test/java/seedu/address/testutil/TypicalConsultations.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.ConsultationListBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import seedu.address.model.consultation.ConsultationList;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" * A utility class containing a list of {@code Consultation} objects to be used in tests.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class TypicalConsultations {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    public static final Consultation CONSULTATION1 \u003d new ConsultationBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"            .withDate(\"11/11/2002\")","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"            .withTime(\"10:00\")","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"            .withStudents(TypicalPersons.AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    public static final Consultation CONSULTATION2 \u003d new ConsultationBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"            .withDate(\"12/12/2022\")","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"            .withTime(\"19:00\")","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"            .withStudents(TypicalPersons.ALICE, TypicalPersons.GEORGE)","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    public static final Consultation CONSULTATION3 \u003d new ConsultationBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"            .withDate(\"03/07/2023\")","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"            .withTime(\"12:00\")","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"            .withStudents(TypicalPersons.CARL, TypicalPersons.BOB, TypicalPersons.BENSON)","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    public static final Consultation CONSULTATION4 \u003d new ConsultationBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"            .withDate(\"03/03/2023\")","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"            .withTime(\"13:30\")","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"            .withStudents(TypicalPersons.ELLE)","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"            .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    private TypicalConsultations() {} // prevents initialising","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    public static ConsultationListBook getTypicalConsultationListBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        ConsultationListBook clb \u003d new ConsultationListBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        for (Consultation consultation : getTypicalConsultations()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"            clb.addConsultation(consultation);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        return clb;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    public static ConsultationList getTypicalConsultations() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        ConsultationList typicalConsultations \u003d new ConsultationList();","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"        List\u003cConsultation\u003e consultationList \u003d new ArrayList\u003c\u003e(Arrays.asList(CONSULTATION1, CONSULTATION2));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"        typicalConsultations.setConsultationList(consultationList);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"        return typicalConsultations;","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wesho1107":58}},{"path":"src/test/java/seedu/address/testutil/TypicalGradedTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.GradedTestListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.gradedtest.GradedTest;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":" * A utility class containing a list of {@code GradedTest} objects to be used in tests.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"public class TypicalGradedTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"    public static final GradedTest GT1 \u003d new GradedTestBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment1(\"1.0\")","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment2(\"2\")","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"            .withMidTerms(\"3\")","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"            .withFinals(\"4\")","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"            .withPe(\"5\")","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"            .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    public static final GradedTest GT2 \u003d new GradedTestBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment1(\"-\")","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment2(\"-\")","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"            .withMidTerms(\"-\")","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"            .withFinals(\"-\")","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"            .withPe(\"-\")","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"            .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"    // Pass, floats allowed","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"    public static final GradedTest GT3 \u003d new GradedTestBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment1(\"1.0\")","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment2(\"2.0\")","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"            .withMidTerms(\"3.0\")","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"            .withFinals(\"4.0\")","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"            .withPe(\"5.0\")","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"            .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"    public static final GradedTest GT4 \u003d new GradedTestBuilder()","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment1(\"1\")","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"            .withReadingAssessment2(\"2.0\")","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"            .withMidTerms(\"3\")","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"            .withFinals(\"4.0\")","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"            .withPe(\"5\")","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"raydenlim"},"content":"            .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"raydenlim"},"content":"    private TypicalGradedTest() {} // prevents instantiation","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"raydenlim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"raydenlim"},"content":"     * Returns an {@code GradedTestBook} with all the typical gradedTest.","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"raydenlim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"    public static GradedTestListBook getTypicalGradedTestList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"raydenlim"},"content":"        GradedTestListBook ab \u003d new GradedTestListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"        for (GradedTest gt : getTypicalGradedTest()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"raydenlim"},"content":"            ab.addGradedTest(gt);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"raydenlim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"raydenlim"},"content":"        return ab;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"raydenlim"},"content":"    public static List\u003cGradedTest\u003e getTypicalGradedTest() {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"raydenlim"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GT1, GT2));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"raydenlim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"raydenlim":65}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Respirayson":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"            .withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"            .withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"            .withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"            .withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"raydenlim"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"raydenlim"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"raydenlim"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"raydenlim"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"raydenlim"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withGradedTest().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"raydenlim"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"raydenlim"},"content":"            .withGradedTest().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"raydenlim"},"content":"            .withGradedTest().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"    public static final Set\u003cPerson\u003e DEFAULT_PERSONS \u003d SampleDataUtil.getStudentSet(AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"raydenlim":19,"-":65,"wesho1107":1}},{"path":"src/test/java/seedu/address/testutil/TypicalSessions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.SessionListBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.Session;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"import seedu.address.model.session.SessionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":" * A utility class containing a set of typical sessions for testing purposes.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"public class TypicalSessions {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"     * A typical empty session with session number 9, with no students.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"    public static final Session EMPTY_SESSION \u003d new SessionBuilder().withSessionNumber(\"9\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"     * A typical session with session number 1, attended by Alice.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    public static final Session SESSION1A \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"            .withSessionNumber(\"1\").withStudent(TypicalPersons.ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     * A typical session with session number 1, attended by Alice.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"    public static final Session SESSION1B \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"            .withSessionNumber(\"1\").withStudent(TypicalPersons.ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"     * A typical session with session number 2, attended by Bob.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"    public static final Session SESSION2 \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"            .withSessionNumber(\"2\").withStudent(TypicalPersons.BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"     * A typical session with session number 3, attended by Alice and Bob.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    public static final Session SESSION3A \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"            .withSessionNumber(\"3\").withStudents(TypicalPersons.ALICE, TypicalPersons.BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"     * A typical session with session number 3, attended by Alice.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    public static final Session SESSION3B \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"            .withSessionNumber(\"3\").withStudent(TypicalPersons.ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"     * A typical session with session number 2, attended by Alice.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"    public static final Session SESSION_TYPICAL1 \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"            .withSessionNumber(\"5\").withStudent(TypicalPersons.ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"     * A typical session with session number 3, attended by Benson.","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"    public static final Session SESSION_TYPICAL2 \u003d new SessionBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"            .withSessionNumber(\"6\").withStudent(TypicalPersons.BENSON).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"    public static SessionListBook getTypicalSessionList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"        SessionListBook sb \u003d new SessionListBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"        for (Session session : getTypicalSessions()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"            sb.addSession(session);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"        return sb;","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"    public static SessionList getTypicalSessions() {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"        SessionList typicalSessions \u003d new SessionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"        List\u003cSession\u003e sessionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(SESSION_TYPICAL1, SESSION_TYPICAL2));","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"        typicalSessions.setSessionList(sessionsList);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"        return typicalSessions;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ldinghan":79}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK1 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Do cs2103t\")","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"Complete PRS\")","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK2 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Read quant guide\")","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"The green book\")","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK3 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Study cs3233\")","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"Read Steven Halim Book for competitive programming\")","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK4 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Plan for mods\")","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"SEPSPEPESEP\")","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * Returns an {@code TaskListBook} with all the typical tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public static TaskListBook getTypicalTaskList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        TaskListBook ab \u003d new TaskListBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        return ab;","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK1, TASK2));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":51}}]

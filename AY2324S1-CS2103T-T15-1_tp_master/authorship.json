[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T15-1/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"* This is **a one-stop platform for CS1101S Avengers**.\u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"  * Track tasks and assignments to do","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"  * Record attendance of students","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"* It is named `F.A.K.E.J.A.R.V.I.S.` because it was inspired by our favourite `Marvel` movie, (`Avengers`).","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"* For the detailed documentation of this project, see the **[F.A.K.E.J.A.R.V.I.S. Product Website](https://ay2324s1-cs2103t-t15-1.github.io/tp/)**.","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"Respirayson":6,"raydenlim":1,"-":4}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"      \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2023-10-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Respirayson":4,"-":430}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"## Project FAKEJARVIS\u0027 Team","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"\u003cimg src\u003d\"images/fakejarvis.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"### Yeap Rayson","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"\u003cimg src\u003d\"images/respirayson.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"[[homepage](http://linkedin.com/in/rayson-yeap)]","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"[[github](https://github.com/respirayson)]","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"[[portfolio](team/respirayson.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"* Role: Git expert, Documentation","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"### Jian Song","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"\u003cimg src\u003d\"images/raydenlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"[[github](http://github.com/raydenlim)]","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"[[portfolio](team/raydenlim.md)]","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"* Role: Morale Booster, Debugger","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"* Responsibilities: *","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"### Ding Han","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"\u003cimg src\u003d\"images/ldinghan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"[[github](http://github.com/ldinghan)] [[portfolio](team/ldinghan.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Originalidk"},"content":"### Ryan Pang","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Originalidk"},"content":"\u003cimg src\u003d\"images/originalidk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Originalidk"},"content":"[[github](https://github.com/Originalidk)]","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"Originalidk"},"content":"[[portfolio](team/originalidk.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Originalidk"},"content":"* Responsibilities: Fullstack","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"### Ho Jia Cheng","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"\u003cimg src\u003d\"images/wesho1107.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"[[github](http://github.com/wesho1107)]","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"[[portfolio](team/wesho1107.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ldinghan":3,"Respirayson":5,"raydenlim":9,"Originalidk":5,"-":36,"wesho1107":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"# F.A.K.E.J.A.R.V.I.S. Developer Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T15-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"Respirayson"},"content":"* CS1101S Avengers","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"Respirayson"},"content":"* has a need to manage a significant number of classes, tutorials and assignments","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"Respirayson"},"content":"**Value proposition**:  track assignment gradings, student participation and plan their tutorials, consultations and mastery checks","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                        | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"Respirayson"},"content":"|----------|--------------------------------------------|-------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions              | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                    |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                     | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name               | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"Respirayson"},"content":"| `* * *`  | busy avenger                               | keep track of what needs to be done | better guide my students.                                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details        | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"Respirayson"},"content":"(For all use cases below, the **System** is the `FAKEJARVIS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"Respirayson"},"content":"2.  FAKEJARVIS shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"Respirayson"},"content":"4.  FAKEJARVIS deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"Respirayson"},"content":"    * 3a1. FAKEJARVIS shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"Respirayson"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"Respirayson"},"content":"**Use case: Delete a task**","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"Respirayson"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"Respirayson"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"Respirayson"},"content":"2.  FAKEJARVIS shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"Respirayson"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"Respirayson"},"content":"4.  FAKEJARVIS deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"Respirayson"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"Respirayson"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"Originalidk"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":341,"author":{"gitId":"Originalidk"},"content":"  Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"Originalidk"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"Originalidk"},"content":"    * 3a1. FAKEJARVIS shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"Originalidk"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"Originalidk"},"content":"**Use case: Grade an assignment**","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"Originalidk"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"Originalidk"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"Originalidk"},"content":"2.  FAKEJARVIS shows a list of persons","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"Originalidk"},"content":"3.  User requests to grade an assignment for a specific person in the list","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"Originalidk"},"content":"4.  FAKEJARVIS assigns given grade to the student","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"Originalidk"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"Originalidk"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"Respirayson"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":365,"author":{"gitId":"Respirayson"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":366,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":367,"author":{"gitId":"Respirayson"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":368,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":369,"author":{"gitId":"Respirayson"},"content":"    * 3a1. FAKEJARVIS shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"raydenlim"},"content":"**Use case: Find Student Profile**","lastModifiedDate":"2023-10-06"},{"lineNumber":374,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":375,"author":{"gitId":"raydenlim"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":376,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":377,"author":{"gitId":"raydenlim"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-10-06"},{"lineNumber":378,"author":{"gitId":"raydenlim"},"content":"2.  FAKEJARVIS shows a list of persons ","lastModifiedDate":"2023-10-06"},{"lineNumber":379,"author":{"gitId":"raydenlim"},"content":"3.  User request a search query to find a student\u0027s profile ","lastModifiedDate":"2023-10-06"},{"lineNumber":380,"author":{"gitId":"raydenlim"},"content":"4.  FAKEJARVIS returns matching results from the database","lastModifiedDate":"2023-10-06"},{"lineNumber":381,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":382,"author":{"gitId":"raydenlim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":383,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":384,"author":{"gitId":"raydenlim"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":385,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":386,"author":{"gitId":"raydenlim"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":387,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":388,"author":{"gitId":"raydenlim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":389,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":390,"author":{"gitId":"raydenlim"},"content":"* 3a. No matching profiles.","lastModifiedDate":"2023-10-06"},{"lineNumber":391,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":392,"author":{"gitId":"raydenlim"},"content":"    * 3a1. FAKEJARVIS shows an error message. ","lastModifiedDate":"2023-10-06"},{"lineNumber":393,"author":{"gitId":"raydenlim"},"content":"  ","lastModifiedDate":"2023-10-06"},{"lineNumber":394,"author":{"gitId":"raydenlim"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":395,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":396,"author":{"gitId":"raydenlim"},"content":"**Use case: Filter Results**","lastModifiedDate":"2023-10-06"},{"lineNumber":397,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":398,"author":{"gitId":"raydenlim"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":399,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":400,"author":{"gitId":"raydenlim"},"content":"1.  User requests to list persons. ","lastModifiedDate":"2023-10-06"},{"lineNumber":401,"author":{"gitId":"raydenlim"},"content":"2.  FAKEJARVIS shows a list of persons. ","lastModifiedDate":"2023-10-06"},{"lineNumber":402,"author":{"gitId":"raydenlim"},"content":"3.  User requests to apply filters to the results via attribute `FILTER_ATTRIBUTE`, or description `FILTER_DESCRIPTION`. ","lastModifiedDate":"2023-10-06"},{"lineNumber":403,"author":{"gitId":"raydenlim"},"content":"4.  FAKEJARVIS shows the filter results. ","lastModifiedDate":"2023-10-06"},{"lineNumber":404,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":405,"author":{"gitId":"raydenlim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":406,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":407,"author":{"gitId":"raydenlim"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":408,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":409,"author":{"gitId":"raydenlim"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":410,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":411,"author":{"gitId":"raydenlim"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":412,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":413,"author":{"gitId":"raydenlim"},"content":"* 3a. No filtered results.","lastModifiedDate":"2023-10-06"},{"lineNumber":414,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":415,"author":{"gitId":"raydenlim"},"content":"    * 3a1. FAKEJARVIS shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-06"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":419,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"Respirayson"},"content":"4. System should respond within 2 seconds to ensure smooth and efficient user interactions.","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"Respirayson"},"content":"5. The system should be able to handle an increasing number of users and data without a significant decrease in performance.","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"Respirayson"},"content":"6. The system should be user-friendly, with a clean and intuitive interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"Respirayson"},"content":"7. Regular automated backups of data should be performed, and there should be a clear disaster recovery plan in place.","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":446,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":447,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Respirayson":44,"raydenlim":43,"Originalidk":24,"-":380}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"# F.A.K.E.J.A.R.V.I.S. User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"  \u003cimg src\u003d\"images/fakejarvis.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"_Say goodbye to chaos and hello to an organized and efficient classroom experience._","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"F.A.K.E.J.A.R.V.I.S. is the **ultimate solution for CS1101S Avengers who manage a multitude of tutoring tasks.** This platform empowers you to efficiently track assignment gradings, monitor student participation, and seamlessly plan tutorials, consultations, and mastery checks. This is your one-stop solution to managing your time and students as a CS1101S Avenger!","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"1. Download the latest `fakejarvis.jar` from [here](https://github.com/AY2324S1-CS2103T-T15-1/tp/releases). _[Coming Soon]_","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FAKEJARVIS.","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fakejarvis.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"raydenlim"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"FAKEJARVIS data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"Respirayson"},"content":"FAKEJARVIS data are saved automatically as a JSON file `[JAR file location]/data/fakejarvis.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"Respirayson"},"content":"If your changes to the data file makes its format invalid, FAKEJARVIS will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"raydenlim"},"content":"### 📝Adding a Task: `addtask`","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"Respirayson"},"content":"Adds a task to your tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"Respirayson"},"content":"Format: `addtask n/TASK_NAME d/DUE_DATE p/PRIORITY`","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"Respirayson"},"content":"* TASK_NAME The name or description of the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"Respirayson"},"content":"* DUE_DATE The due date or deadline for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"Respirayson"},"content":"* PRIORITY The priority level of the task (e.g., high, medium, low).","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"Respirayson"},"content":"* `addtask n/Prepare Lecture slides d/2023-09-30 p/high` creates a task to prepare lecture slides with a high priority due on September 30, 2023.","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"Respirayson"},"content":"* `addtask n/Read Chapter 5` creates a task to read Chapter 5 without specifying a due date or priority.","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing Tasks: `viewtasks`","lastModifiedDate":"2023-10-06"},{"lineNumber":199,"author":{"gitId":"Respirayson"},"content":"Views the list of tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"Respirayson"},"content":"Format: `viewtasks d/DUE_DATE p/PRIORITY`","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"Respirayson"},"content":"* DUE_DATE The due date or deadline for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"Respirayson"},"content":"* PRIORITY The priority level of the task (e.g., high, medium, low).","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"Respirayson"},"content":"* `viewtasks` displays all tasks in the user\u0027s task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"Respirayson"},"content":"* `viewtasks p/high` displays only high-priority tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"Respirayson"},"content":"* `viewtasks d/2023-09-30` displays tasks due on September 30, 2023.","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"raydenlim"},"content":"### ✅Completing a Task: `completetask`","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"Respirayson"},"content":"Marks a task as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"Respirayson"},"content":"Format: `completetask TASK_INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"Respirayson"},"content":"* TASK_INDEX The index of the task to mark as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"Respirayson"},"content":"* `completetask 1` marks the task with index 1 as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"Respirayson"},"content":"* `completetask 3` marks the task with index 1 as completed.","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"raydenlim"},"content":"### 🛠️Editing a Task: `edittask`","lastModifiedDate":"2023-10-06"},{"lineNumber":226,"author":{"gitId":"Respirayson"},"content":"Edits the details of a task","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"Respirayson"},"content":"Format: `edittask TASK_INDEX n/NEW_TASK_NAME d/NEW_DUE_DATE p/NEW_PRIORITY`","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"Respirayson"},"content":"* TASK_INDEX The index of the task to edit.","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"Respirayson"},"content":"* NEW_TASK_NAME The new name or description for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"Respirayson"},"content":"* NEW_DUE_DATE The new due date or deadline for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"Respirayson"},"content":"* NEW_PRIORITY The new priority level for the task.","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"Respirayson"},"content":"* `edittask 1 n/Updated TaskName` edits the name of the task with index 1.","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"Respirayson"},"content":"* `edittask 2 d/2023-10-15` updates the due date of the task with index 2 to October 15, 2023.","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting a Task: `deletetask`","lastModifiedDate":"2023-10-06"},{"lineNumber":242,"author":{"gitId":"Respirayson"},"content":"Deletes a task from the tasklist","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"Respirayson"},"content":"Format: `deletetask TASK_INDEX`","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"Respirayson"},"content":"Parameters:","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"Respirayson"},"content":"* TASK_INDEX The index of the task to delete.","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"Respirayson"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"Respirayson"},"content":"* `deletetask 3` deletes the task with index 3 from the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"Respirayson"},"content":"* `deletetask 2` deletes the task with index 2 from the task list.","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"raydenlim"},"content":"### 📆Taking attendance: `takeattendance`","lastModifiedDate":"2023-10-06"},{"lineNumber":254,"author":{"gitId":"raydenlim"},"content":"Takes the attendance of a student","lastModifiedDate":"2023-10-06"},{"lineNumber":255,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":256,"author":{"gitId":"raydenlim"},"content":"Format: `takeattendance n/STUDENT_NAME s/SESSION p/PRESENCE`","lastModifiedDate":"2023-10-06"},{"lineNumber":257,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":258,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":259,"author":{"gitId":"raydenlim"},"content":"* STUDENT_NAME - The name of the student. ","lastModifiedDate":"2023-10-06"},{"lineNumber":260,"author":{"gitId":"raydenlim"},"content":"* SESSION - The session number. ","lastModifiedDate":"2023-10-06"},{"lineNumber":261,"author":{"gitId":"raydenlim"},"content":"* PRESENCE - The attendance status of the student (e.g., present, absent).","lastModifiedDate":"2023-10-06"},{"lineNumber":262,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":263,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":264,"author":{"gitId":"raydenlim"},"content":"* `takeattendance n/John Doe s/5 present` Marks John Doe as present on the 5th session.","lastModifiedDate":"2023-10-06"},{"lineNumber":265,"author":{"gitId":"raydenlim"},"content":"* `takeattendance n/Foo Bar s/2 absent` Marks Foo Bar as absent on the 2nd session.","lastModifiedDate":"2023-10-06"},{"lineNumber":266,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":267,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing attendance: viewattendance","lastModifiedDate":"2023-10-06"},{"lineNumber":268,"author":{"gitId":"raydenlim"},"content":"Views the attendance list","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":270,"author":{"gitId":"raydenlim"},"content":"Format: `viewattendance n/STUDENT_NAME s/SESSION`","lastModifiedDate":"2023-10-06"},{"lineNumber":271,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":272,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":273,"author":{"gitId":"raydenlim"},"content":"* STUDENT_NAME - The name of the student. ","lastModifiedDate":"2023-10-06"},{"lineNumber":274,"author":{"gitId":"raydenlim"},"content":"* SESSION - The session number.","lastModifiedDate":"2023-10-06"},{"lineNumber":275,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":276,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":277,"author":{"gitId":"raydenlim"},"content":"* `viewattendance` Displays the overall attendance across all students and sessions. ","lastModifiedDate":"2023-10-06"},{"lineNumber":278,"author":{"gitId":"raydenlim"},"content":"* `viewattendance n/Rayan` Displays Rayan’s overall attendance. ","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"raydenlim"},"content":"* `viewattendance s/3` Displays all students’ attendance for the 3rd session.","lastModifiedDate":"2023-10-06"},{"lineNumber":280,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":281,"author":{"gitId":"raydenlim"},"content":"### 🔎Finding a Student: find","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"raydenlim"},"content":"Finds a student’s profile","lastModifiedDate":"2023-10-06"},{"lineNumber":283,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":284,"author":{"gitId":"raydenlim"},"content":"Format: `find n/STUDENT_NAME`","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":286,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":287,"author":{"gitId":"raydenlim"},"content":"* STUDENT_NAME - The name of the student you want to find.","lastModifiedDate":"2023-10-06"},{"lineNumber":288,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":289,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"raydenlim"},"content":"* `find n/John Doe` Finds and displays the profile of students with the name “John Doe”. ","lastModifiedDate":"2023-10-06"},{"lineNumber":291,"author":{"gitId":"raydenlim"},"content":"* `find n/Jane Doe` Finds and displays the profile of students with the name “Jane Doe”.","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"raydenlim"},"content":"### 🥅Filtering results: filter","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"raydenlim"},"content":"Filters the results displayed on the dashboard","lastModifiedDate":"2023-10-06"},{"lineNumber":295,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":296,"author":{"gitId":"raydenlim"},"content":"Format:","lastModifiedDate":"2023-10-06"},{"lineNumber":297,"author":{"gitId":"raydenlim"},"content":"* `filter_add n/FILTER_ATTRIBUTE n/FILTER_DESCRIPTION` ","lastModifiedDate":"2023-10-06"},{"lineNumber":298,"author":{"gitId":"raydenlim"},"content":"* `filter_delete n/FILTER_ATTRIBUTE n/FILTER_DESCRIPTION`","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":300,"author":{"gitId":"raydenlim"},"content":"Parameters:","lastModifiedDate":"2023-10-06"},{"lineNumber":301,"author":{"gitId":"raydenlim"},"content":"* `FILTER_ATTRIBUTE` - The filter type filter_studentScores ","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"raydenlim"},"content":"  * `filter_studentScores`","lastModifiedDate":"2023-10-06"},{"lineNumber":303,"author":{"gitId":"raydenlim"},"content":"  * `filter_studentGrades`","lastModifiedDate":"2023-10-06"},{"lineNumber":304,"author":{"gitId":"raydenlim"},"content":"* `FILTER_DESCRIPTION` - The conditions for the filter","lastModifiedDate":"2023-10-06"},{"lineNumber":305,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":306,"author":{"gitId":"raydenlim"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":307,"author":{"gitId":"raydenlim"},"content":"* `filter_add n/filter_studentGrades n/A` Sets the dashboard to display students who have an “A” grade. ","lastModifiedDate":"2023-10-06"},{"lineNumber":308,"author":{"gitId":"raydenlim"},"content":"* `Filter_add n/filter_studentScores n/\u003e80` Sets the dashboard to show students with test scores above 80.","lastModifiedDate":"2023-10-06"},{"lineNumber":309,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"Originalidk"},"content":"### 📝Adding a grade to an assignment: `addgrade`","lastModifiedDate":"2023-10-13"},{"lineNumber":311,"author":{"gitId":"Originalidk"},"content":"Adds a grade to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":312,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"Originalidk"},"content":"Format: `addgrade n/STUDENT_NAME a/ASSIGNMENT g/GRADE`","lastModifiedDate":"2023-10-13"},{"lineNumber":314,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":317,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"Originalidk"},"content":"* GRADE The grade of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":319,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":320,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"Originalidk"},"content":"* `addgrade n/Rayson a/Functional Expressionism g/1300` adds a grade of 1300 to Rayson’s Functional Expressionism assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":322,"author":{"gitId":"Originalidk"},"content":"* `addgrade n/Wesley a/Rune Reading g/600` adds a grade of 600 to Wesley’s Rune Reading assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":323,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":324,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing an assignment grade: `viewgrade`","lastModifiedDate":"2023-10-06"},{"lineNumber":326,"author":{"gitId":"Originalidk"},"content":"Shows a student’s assignment grade.","lastModifiedDate":"2023-10-13"},{"lineNumber":327,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"Originalidk"},"content":"Format: `viewgrade n/STUDENT_NAME a/ASSIGNMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":332,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"Originalidk"},"content":"* `viewgrade n/Rayson a/Functional Expressionism` shows Rayson’s Functional Expressionism grade.","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"Originalidk"},"content":"* `viewgrade n/Wesley a/Rune Reading` shows Wesley’s Rune Reading grade.","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"raydenlim"},"content":"### 🛠️Editing an assignment grade: `editgrade`","lastModifiedDate":"2023-10-06"},{"lineNumber":340,"author":{"gitId":"Originalidk"},"content":"Edits a student’s assignment grade.","lastModifiedDate":"2023-10-13"},{"lineNumber":341,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"Originalidk"},"content":"Format: `editgrade n/STUDENT_NAME a/ASSIGNMENT g/GRADE`","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":346,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"Originalidk"},"content":"* GRADE The score of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":348,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"Originalidk"},"content":"* `editgrade n/Rayson a/Functional Expressionism g/1200` edits the grade of Rayson’s Functional Expressionism assignment to 1200.","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"Originalidk"},"content":"* `editgrade n/Wesley a/Rune Reading g/1000` edits the grade of Wesley’s Rune Reading assignment to 1000.","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting an assignment grade: `deletegrade`","lastModifiedDate":"2023-10-06"},{"lineNumber":355,"author":{"gitId":"Originalidk"},"content":"Deletes a student’s assignment grade.","lastModifiedDate":"2023-10-13"},{"lineNumber":356,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"Originalidk"},"content":"Format: `deletegrade n/STUDENT_NAME a/ASSIGNMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":361,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"Originalidk"},"content":"* `deletegrade n/Rayson a/Functional Expressionism` deletes Rayson’s Functional Expressionism grade.","lastModifiedDate":"2023-10-05"},{"lineNumber":365,"author":{"gitId":"Originalidk"},"content":"* `deletegrade n/Wesley a/Rune Reading` deletes Wesley’s Rune Reading grade.","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"Originalidk"},"content":"### 📝Adding a comment to an assignment: `addcomment`","lastModifiedDate":"2023-10-13"},{"lineNumber":369,"author":{"gitId":"Originalidk"},"content":"Adds a comment to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":370,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"Originalidk"},"content":"Format: `addcomment n/STUDENT_NAME a/ASSIGNMENT c/COMMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":375,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"Originalidk"},"content":"* COMMENT The comment.","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"Originalidk"},"content":"* `addcomment n/Rayson a/Functional Expressionism c/Excellent` adds the comment “Excellent” on Rayson’s Functional Expressionism assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"Originalidk"},"content":"* `addcomment n/Wesley a/Rune Reading c/Not bad` adds the comment “Not bad” on Wesley’s Rune Reading assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing a comment: `viewcomment`","lastModifiedDate":"2023-10-06"},{"lineNumber":384,"author":{"gitId":"Originalidk"},"content":"Shows the comment tagged to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":385,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"Originalidk"},"content":"Format: `viewcomment n/STUDENT_NAME a/ASSIGNMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":390,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"Originalidk"},"content":"* `viewcomment n/Rayson a/Functional Expressionism` shows the comment on Rayson’s Functional Expressionism assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"Originalidk"},"content":"* `viewcomment n/Wesley a/Rune Reading` shows the comment on Wesley’s Rune Reading assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"raydenlim"},"content":"### 🛠️Editing a comment: `editcomment`","lastModifiedDate":"2023-10-06"},{"lineNumber":398,"author":{"gitId":"Originalidk"},"content":"Edits the comment on a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":399,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"Originalidk"},"content":"Format: `editcomment n/STUDENT_NAME a/ASSIGNMENT c/COMMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":401,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":404,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"Originalidk"},"content":"* COMMENT The new comment.","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"Originalidk"},"content":"* `editcomment n/Rayson a/Functional Expressionism c/Decent` changes the comment on Rayson’s Functional Expressionism assignment to “Decent”.","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"Originalidk"},"content":"* `editcomment n/Wesley a/Rune Reading c/Great` changes the comment on Wesley’s Rune Reading assignment to “Great”.","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":411,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting a comment: `deletecomment`","lastModifiedDate":"2023-10-06"},{"lineNumber":413,"author":{"gitId":"Originalidk"},"content":"Deletes the comment tagged to a student’s assignment.","lastModifiedDate":"2023-10-13"},{"lineNumber":414,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"Originalidk"},"content":"Format: `deletecomment n/STUDENT_NAME a/ASSIGNMENT`","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"Originalidk"},"content":"Parameters:","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"Originalidk"},"content":"* STUDENT_NAME The name of the student.","lastModifiedDate":"2023-10-13"},{"lineNumber":419,"author":{"gitId":"Originalidk"},"content":"* ASSIGNMENT The name of the assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"Originalidk"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"Originalidk"},"content":"* `deletecomment n/Rayson a/Functional Expressionism` deletes the comment on Rayson’s Functional Expressionism assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"Originalidk"},"content":"* `deletecomment n/Wesley a/Rune Reading` deletes the comment on Wesley’s Rune Reading assignment.","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"raydenlim"},"content":"### 📆Creating a Consult: `createconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":427,"author":{"gitId":"wesho1107"},"content":"Creates a consultation into upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":428,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":429,"author":{"gitId":"wesho1107"},"content":"Format: `addconsult d/DATE t/TIME n/STUDENT_NAME n/STUDENT_NAME …`","lastModifiedDate":"2023-10-04"},{"lineNumber":430,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":431,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":432,"author":{"gitId":"wesho1107"},"content":"* DATE The date of consultation","lastModifiedDate":"2023-10-04"},{"lineNumber":433,"author":{"gitId":"wesho1107"},"content":"* TIME The time of consultation","lastModifiedDate":"2023-10-04"},{"lineNumber":434,"author":{"gitId":"wesho1107"},"content":"* STUDENT_NAME The name of the student(s)","lastModifiedDate":"2023-10-04"},{"lineNumber":435,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":437,"author":{"gitId":"wesho1107"},"content":"* `addconsult d/2023-10-30 t/12:30 n/John Doe` creates a consultation for John Doe on 2023-10-30 12:30.","lastModifiedDate":"2023-10-04"},{"lineNumber":438,"author":{"gitId":"wesho1107"},"content":"* `addconsult d/2023-09-30 t/15:30 n/John Doe n/Foo Bar n/Rayson n/Wesley` creates a consultation for John Doe, Foo Bar","lastModifiedDate":"2023-10-04"},{"lineNumber":439,"author":{"gitId":"wesho1107"},"content":"  , Rayson and Wesley on 2023-09-30 15:30.","lastModifiedDate":"2023-10-04"},{"lineNumber":440,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":441,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":442,"author":{"gitId":"raydenlim"},"content":"### 👀Showing list of consultations: `showconsults`","lastModifiedDate":"2023-10-06"},{"lineNumber":443,"author":{"gitId":"wesho1107"},"content":"Shows the list of upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":444,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":445,"author":{"gitId":"wesho1107"},"content":"Format: `showconsults`","lastModifiedDate":"2023-10-04"},{"lineNumber":446,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":447,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":448,"author":{"gitId":"wesho1107"},"content":"* `showconsults` displays a list of upcoming consultations","lastModifiedDate":"2023-10-04"},{"lineNumber":449,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"raydenlim"},"content":"### 👀Viewing details of a consultation: `viewconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":452,"author":{"gitId":"wesho1107"},"content":"Shows the details of a consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":453,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":454,"author":{"gitId":"wesho1107"},"content":"Format: `viewconsult INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":455,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":456,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":457,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":458,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":459,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"wesho1107"},"content":"* `viewconsult 1` shows the details of the consultation (if there is a consult scheduled).","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003e2023-09-30 15:30","lastModifiedDate":"2023-10-04"},{"lineNumber":462,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eJohn Doe","lastModifiedDate":"2023-10-04"},{"lineNumber":463,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eFoo Bar","lastModifiedDate":"2023-10-04"},{"lineNumber":464,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eRayson","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"wesho1107"},"content":"  \u003cbr\u003eWesley","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"wesho1107"},"content":"* `viewconsult -1`shows an error message “Consultation not found” (if there is no consult scheduled).","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":468,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":469,"author":{"gitId":"raydenlim"},"content":"### 🛠️Adding students to a consultation: `addtoconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":470,"author":{"gitId":"wesho1107"},"content":"Adds student(s) into a consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":471,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":472,"author":{"gitId":"wesho1107"},"content":"Format: `addtoconsult INDEX n/STUDENT_NAME …`","lastModifiedDate":"2023-10-04"},{"lineNumber":473,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":474,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":475,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"wesho1107"},"content":"* STUDENT_NAME The name of student to be added into the consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"wesho1107"},"content":"* `addtoconsult 2 n/Foo Bar`.","lastModifiedDate":"2023-10-04"},{"lineNumber":480,"author":{"gitId":"wesho1107"},"content":"* `addtoconsult 1 n/Rayson n/Ryan Pang`.","lastModifiedDate":"2023-10-04"},{"lineNumber":481,"author":{"gitId":"wesho1107"},"content":"* `addtoconsult -1 n/Foo Bar`shows an error message “Consultation not found”.","lastModifiedDate":"2023-10-04"},{"lineNumber":482,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":484,"author":{"gitId":"raydenlim"},"content":"### ❌Remove students from a consultation: `removefromconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":485,"author":{"gitId":"wesho1107"},"content":"Removes student(s) from a consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":486,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"wesho1107"},"content":"Format: `removefromconsult INDEX n/STUDENT_NAME …`","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"wesho1107"},"content":"* STUDENT_NAME The name of student to be added into the consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":493,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"wesho1107"},"content":"* `removefromconsult 2 n/Foo Bar`.","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"wesho1107"},"content":"* `removefromconsult 1 n/NOTINCONSULT` shows an error message “Student not found”.","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"raydenlim"},"content":"### ❌Deleting a consultation: `deleteconsult`","lastModifiedDate":"2023-10-06"},{"lineNumber":499,"author":{"gitId":"wesho1107"},"content":"Deletes the consultation specified by the index.","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":501,"author":{"gitId":"wesho1107"},"content":"Format: `deleteconsult INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":503,"author":{"gitId":"wesho1107"},"content":"Parameters:","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"wesho1107"},"content":"* INDEX The index of the consultation in the upcoming consultations.","lastModifiedDate":"2023-10-04"},{"lineNumber":505,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":506,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":507,"author":{"gitId":"wesho1107"},"content":"* `deleteconsult 1` deletes the first consultation.","lastModifiedDate":"2023-10-04"},{"lineNumber":508,"author":{"gitId":"wesho1107"},"content":"* `deleteconsult -1` shows an error message “Consultation not found”.","lastModifiedDate":"2023-10-04"},{"lineNumber":509,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":510,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":511,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"Respirayson"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FAKEJARVIS home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":524,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":526,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":530,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Respirayson":82,"raydenlim":77,"Originalidk":110,"-":191,"wesho1107":76}},{"path":"docs/team/ldinghan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"title: \"Ding Han\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"### Project: F.A.K.E.J.A.R.V.I.S.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"F.A.K.E.J.A.R.V.I.S. is a project to help CS1101S Avengers manage their time and responsibilities more effectively.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"* **New Features**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"* **Code contributed**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"  * User Guide: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"  * Developer Guide: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ldinghan":32}},{"path":"docs/team/originalidk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Originalidk"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Originalidk"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Originalidk"},"content":"title: \"Ryan Pang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Originalidk"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Originalidk"},"content":"### Project: F.A.K.E.J.A.R.V.I.S.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Originalidk"},"content":"F.A.K.E.J.A.R.V.I.S. is a project to help CS1101S Avengers manage their time and responsibilities more effectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Originalidk"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Originalidk"},"content":"* **New Features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Originalidk"},"content":"* **Code contributed**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Originalidk"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Originalidk"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Originalidk"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Originalidk"},"content":"  * User Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Originalidk"},"content":"  * Developer Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Originalidk"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"Originalidk"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"Originalidk"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"Originalidk"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Originalidk":32}},{"path":"docs/team/raydenlim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"raydenlim"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"raydenlim"},"content":"layout: default.md","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"raydenlim"},"content":"title: \"Jian Song (rayden)\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"raydenlim"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"raydenlim"},"content":"### Name: Rayden","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"raydenlim"},"content":"**Bio:** \u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"raydenlim"},"content":"* I am interested in cybersecurity","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"raydenlim"},"content":"* I believe that laughter is the best medicine","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"raydenlim"},"content":"### **Joke of the day**\u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"raydenlim"},"content":"**QNS :** Why did the programmer constantly run into bugs? \u003cbr\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"raydenlim"},"content":"**ANS :** Because he used light mode, and bugs are attracted to the light.","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"raydenlim"},"content":"### Project: FAKEJARVIS","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"raydenlim"},"content":"![Logo](images/fakejarvis.png)","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"raydenlim"},"content":"FAKEJARVIS is a brownfield project built on Address Book 3 (AB3), with the intention to help CS1101S Avengers manage their Teaching Assistant (TA) duties.","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"raydenlim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"raydenlim"},"content":"* **New Feature 1**:","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"raydenlim"},"content":"    * Highlights:","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"raydenlim"},"content":"    * Credits:","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"raydenlim"},"content":"* **New Feature 2**:","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"raydenlim"},"content":"* **Code contributed**: [RepoSense link](https://tinyurl.com/CS2103T15raydenlim)","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"raydenlim"},"content":"* **Project management**:","lastModifiedDate":"2023-09-29"},{"lineNumber":32,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"raydenlim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":35,"author":{"gitId":"raydenlim"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"raydenlim"},"content":"    * User Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"raydenlim"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"raydenlim"},"content":"* **Community**:","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"raydenlim"},"content":"* **Tools**:","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"raydenlim"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"raydenlim"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"raydenlim":44}},{"path":"docs/team/respirayson.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"title: \"Rayson Yeap\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"### Project: FAKEJARVIS","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"FAKEJARVIS is a project to help CS1101S Avengers manage their time and job more effectively.","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"* **Code contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003drespirayson\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    * User Guide: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    * Developer Guide: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":32}},{"path":"docs/team/wesho1107.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"title: \"Ho Jia Cheng\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"### Project: F.A.K.E.J.A.R.V.I.S.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"F.A.K.E.J.A.R.V.I.S. is a project to help CS1101S Avengers manage their time and responsibilities more effectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"* **New Features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"* **Code contributed**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"* **Project management**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"  * User Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"  * Developer Guide: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"* **Review/mentoring contributions**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"* **Tools**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"wesho1107":32}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"import seedu.address.storage.TaskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        logger.info(\"Using task list file : \" + storage.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        ReadOnlyTaskList initialTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"            if (!taskListOptional.isPresent()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"                logger.info(\"Creating a new data file \" + storage.getTaskListFilePath()","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"                        + \" populated with a sample TaskList.\");","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"            initialTaskList \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"            initialTaskList \u003d new TaskListBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        return new ModelManager(initialData, userPrefs, initialTaskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Respirayson":19,"-":189}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Respirayson":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2023-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Respirayson":7,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    public static String format(Task task) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        String builder \u003d task.getName()","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"                + \"; Description: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"                + task.getDescription();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        return builder;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Respirayson":11,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" * Adds a task to the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            + \": Adds a new task with the specified description.\\n\"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_NAME + \"NAME \"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            + \"[\" + PREFIX_TASK_DESCRIPTION + \"DESCRIPTION]\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_NAME + \"Do laundry \"","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_DESCRIPTION + \"Wash the clothes and pants in basket\";","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task has been added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    private final Task task;","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        if (model.hasTask(task)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        model.addTask(task);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(task)));","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        return task.equals(e.task);","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":72}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_NAME, PREFIX_TASK_DESCRIPTION);","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_NAME)","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TASK_NAME, PREFIX_TASK_DESCRIPTION);","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_TASK_NAME).get());","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        TaskDescription taskDescription \u003d ParserUtil","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"                .parseTaskDescription(argMultimap","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"                        .getValue(PREFIX_TASK_DESCRIPTION).orElse(\"\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        Task task \u003d new Task(name, taskDescription);","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Respirayson":4,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    public static final Prefix PREFIX_TASK_NAME \u003d new Prefix(\"tn/\");","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    public static final Prefix PREFIX_TASK_DESCRIPTION \u003d new Prefix(\"td/\");","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Respirayson":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"     * Parses a {@code String taskName} into a {@code taskName}.","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"    public static TaskName parseTaskName(String name) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-09-27"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"     * Parses a {@code String taskDescription} into a {@code taskDescription}.","lastModifiedDate":"2023-09-27"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-27"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-09-27"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"    public static TaskDescription parseTaskDescription(String name) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-09-27"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-09-27"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"        if (!TaskDescription.isValidDescription(trimmedName)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"            throw new ParseException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"        return new TaskDescription(trimmedName);","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Respirayson":32,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"     * Sets the user prefs\u0027 task list file path.","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"     * Replaces task list data with the data in {@code taskList}.","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"    /** Returns the TaskList */","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"     * Adds the given task.","lastModifiedDate":"2023-09-28"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-09-28"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"     * Returns task at the given index.","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"     * {@code index} must be within the size of the task list.","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"    Task getTask(int index);","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2023-09-28"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Respirayson":61,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private final TaskListBook taskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        this.taskList \u003d new TaskListBook(taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        this(new AddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskListBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"        return taskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"        return taskList.getTask(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-09-28"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"        taskList.removeTask(target);","lastModifiedDate":"2023-09-28"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-28"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":162,"author":{"gitId":"Respirayson"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-09-28"},{"lineNumber":163,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":164,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":165,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":166,"author":{"gitId":"Respirayson"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-09-28"},{"lineNumber":167,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":169,"author":{"gitId":"Respirayson"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":170,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":171,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":190,"author":{"gitId":"Respirayson"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":191,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":192,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":193,"author":{"gitId":"Respirayson"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2023-09-28"},{"lineNumber":194,"author":{"gitId":"Respirayson"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-09-28"},{"lineNumber":195,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":196,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":197,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":198,"author":{"gitId":"Respirayson"},"content":"        return filteredTasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":199,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":200,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":201,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":202,"author":{"gitId":"Respirayson"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-09-28"},{"lineNumber":203,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-09-28"},{"lineNumber":204,"author":{"gitId":"Respirayson"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-09-28"},{"lineNumber":205,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":206,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":207,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-09-28"},{"lineNumber":223,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 taskList.equals(otherModelManager.taskList)","lastModifiedDate":"2023-09-28"},{"lineNumber":224,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 filteredTasks.equals(otherModelManager.filteredTasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Respirayson":82,"-":145}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Unmodifiable view of a task list","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":17}},{"path":"src/main/java/seedu/address/model/TaskListBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" * Wraps all data at the task-list level","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class TaskListBook implements ReadOnlyTaskList {","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    /*","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *   among constructors.","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    {","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public TaskListBook() {}","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * Creates an TaskList using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public TaskListBook(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        this();","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    //// task-level operations","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        return tasks.getTask(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"     * The task must not already exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-09-28"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        tasks.add(t);","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"        tasks.editTask(target, editedTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"     * Removes {@code key} from this {@code TaskListBook}.","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"     * {@code key} must exist in the task list book.","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"    //// util methods","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"                .add(\"tasks\", tasks)","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"                .toString();","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-09-28"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-28"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-28"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskListBook)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        TaskListBook otherTaskList \u003d (TaskListBook) other;","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        return tasks.equals(otherTaskList.tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":137}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"tasklist.json\");","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        return taskListFilePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"        sb.append(\"\\nTask list file location : \" + taskListFilePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Respirayson":11,"-":88}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"public class Task {","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    // Identity fields","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private final TaskName taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    // Data fields","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private final TaskDescription taskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public Task(TaskName taskName, TaskDescription taskDescription) {","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(taskName, taskDescription);","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public TaskName getName() {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        return taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    public TaskDescription getDescription() {","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        return taskDescription;","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * Returns true if both tasks have the same name and description.","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public boolean isSameTask(seedu.address.model.task.Task otherTask) {","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 otherTask.getName().equals(getName())","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof seedu.address.model.task.Task)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        seedu.address.model.task.Task otherTask \u003d (seedu.address.model.task.Task) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        return taskName.equals(otherTask.taskName)","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"                \u0026\u0026 taskDescription.equals(otherTask.taskDescription);","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        return Objects.hash(taskName, taskDescription);","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"                .add(\"name\", taskName)","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"                .add(\"description\", taskDescription)","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"                .toString();","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":86}},{"path":"src/main/java/seedu/address/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Represents a Description in the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class TaskDescription {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description should not only consist of whitespace\";","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s+$).*$\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    public final String description;","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskDescription)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        TaskDescription otherTaskDescription \u003d (TaskDescription) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return description.equals(otherTaskDescription.description);","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        return description.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        return description.equals(\"\") ? \"No Description Provided\" : description;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":63}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" * unique in terms of identity in the TaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":" *","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":" *","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        if (index \u003e\u003d internalList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalArgumentException(\"Index is out of bounds\");","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    public void editTask(Task target, Task editedTask) {","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-09-27"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    public void setTasks(TaskList replacement) {","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-09-27"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-09-27"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-09-27"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-09-27"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-09-27"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-09-27"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-09-27"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskList)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"        TaskList otherUniquePersonList \u003d (TaskList) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-09-27"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"        return internalList.toString();","lastModifiedDate":"2023-09-27"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-09-27"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-27"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-09-27"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"                    return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"                }","lastModifiedDate":"2023-09-27"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"        return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":161}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Represents a Task\u0027s name in the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class TaskName {","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"            \"Task Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    /*","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * The task names should ony consist of letters (both uppercase and lowercase),","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * digits, spaces, underscores, and hyphens","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[A-Za-z0-9_-])[-A-Za-z0-9\\\\s_-]*$\";","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    public final String taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    public TaskName(String name) {","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        taskName \u003d name;","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-09-27"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        return taskName;","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskName)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        TaskName otherTaskName \u003d (TaskName) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        return taskName.equals(otherTaskName.taskName);","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        return taskName.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":67}},{"path":"src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().taskName, keyword));","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"            return true;","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        if (!(other instanceof TaskNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"            return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"                (TaskNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        return new ToStringBuilder(this).add(\"task keywords\", keywords).toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":45}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" * identity).","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"Respirayson":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        return new Task[] {","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"            new Task(new TaskName(\"Do 2103T\"), new TaskDescription(\"Homework assignment\")),","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            new Task(new TaskName(\"Do cs2101\"), new TaskDescription(\"Practice script\")),","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"            new Task(new TaskName(\"Do cs2100\"), new TaskDescription(\"Remember mips\"))","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        };","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        TaskListBook sampleTl \u003d new TaskListBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"            sampleTl.addTask(sampleTask);","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        return sampleTl;","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Respirayson":21,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private final String name;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    private final String description;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @JsonCreator","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"description\") String description) {","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        name \u003d source.getName().taskName;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"                    TaskName.class.getSimpleName()));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        if (!TaskName.isValidName(name)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        final TaskName modelName \u003d new TaskName(name);","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"                    TaskDescription.class.getSimpleName()));","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        if (!TaskDescription.isValidDescription(description)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            throw new IllegalValueException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        final TaskDescription modelDescription \u003d new TaskDescription(description);","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        return new Task(modelName, modelDescription);","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":65}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"class JsonSerializableTaskList {","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given tasks.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    @JsonCreator","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * Converts a given {@code ReadOnlyTaskList} into this class for Jackson use.","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskList}.","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     * Converts this task list into the model\u0027s {@code TaskListBook} object.","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    public TaskListBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        TaskListBook taskList \u003d new TaskListBook();","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"            if (taskList.hasTask(task)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        return taskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":60}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" * A class to access TaskList data stored as a json file on the hard disk.","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private Path filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        return filePath;","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * Similar to {@link #readTaskList()}.","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        if (!jsonTaskList.isPresent()) {","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-09-28"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2023-09-28"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":80}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, TaskListStorage {","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Respirayson":8,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * and {@code UserPrefStorage} and {@code TaskListStorage}.","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"                          UserPrefsStorage userPrefsStorage, TaskListStorage taskListStorage) {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Respirayson":37,"-":76}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * Represents a storage for {@link seedu.address.model.TaskListBook}.","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public interface TaskListStorage {","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * Returns TaskList data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @see #getTaskListFilePath()","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     * @see #saveTaskList(ReadOnlyTaskList)","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Respirayson":45}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Respirayson":7,"-":196}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * A UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    public final Task task;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private Label name;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private Label id;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    private Label description;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        name.setText(task.getName().taskName);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":37}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":49}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":".section-label {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":6,"-":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        \u003cHBox styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"          \u003cVBox fx:id\u003d\"personList\"  minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"            \u003cLabel text\u003d\"Person List\" maxWidth\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"section-label\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"          \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"            \u003cLabel text\u003d\"Task List\" maxWidth\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"section-label\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"taskListPanelPlaceholder\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Respirayson":10,"-":56}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":34}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Respirayson":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":167,"author":{"gitId":"Respirayson"},"content":"                new JsonTaskListStorage(temporaryFolder.resolve(\"ExceptionTaskList.json\"));","lastModifiedDate":"2023-09-28"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-09-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Respirayson":8,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Respirayson":3,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"Respirayson"},"content":"        public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-10-05"},{"lineNumber":166,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"Respirayson"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"Respirayson"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"Respirayson"},"content":"        public Task getTask(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":184,"author":{"gitId":"Respirayson"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":186,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":187,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"Respirayson"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-10-05"},{"lineNumber":190,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":191,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":194,"author":{"gitId":"Respirayson"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-10-05"},{"lineNumber":195,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":197,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"Respirayson"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":210,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"Respirayson"},"content":"        @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"Respirayson"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Respirayson":57,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Respirayson":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    public static final String VALID_TASK_NAME \u003d \"Do cs2103t\";","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public static final String VALID_TASK_DESCRIPTION \u003d \"Complete PRS\";","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_NAME_TASK1 \u003d \" \" + PREFIX_TASK_NAME + VALID_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_DESCRIPTION_TASK1 \u003d \" \" + PREFIX_TASK_DESCRIPTION + VALID_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_NAME_TASK2 \u003d \" \" + PREFIX_TASK_NAME + \"Read quant guide\";","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    public static final String TASK_DESCRIPTION_TASK2 \u003d \" \" + PREFIX_TASK_DESCRIPTION + \"The green book\";","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public static final String INVALID_TASK_NAME \u003d \" \" + PREFIX_TASK_NAME + \"@@@@HER\"; // \u0027@\u0027 not allowed in name","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    public static final String INVALID_TASK_DESCRIPTION \u003d \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"            + PREFIX_TASK_DESCRIPTION + \"\\\\    \"; // whitespaces only not allowed in description","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Respirayson":14,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Respirayson":4,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"                new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"                new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"                new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"                new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Respirayson":10,"-":179}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Respirayson":3,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new TaskListBook());","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Respirayson":3,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_TASK2;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_TASK2;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        Task expectedTask \u003d new TaskBuilder(TASK1).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"                + TASK_NAME_TASK1 + TASK_DESCRIPTION_TASK1, new AddTaskCommand(expectedTask));","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        String validExpectedTaskString \u003d TASK_NAME_TASK1 + TASK_DESCRIPTION_TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        // multiple names","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, TASK_NAME_TASK2 + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        // multiple desscription","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, TASK_DESCRIPTION_TASK2 + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        // invalid description","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_DESCRIPTION + validExpectedTaskString,","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, validExpectedTaskString + INVALID_TASK_NAME,","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        // invalid description","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, validExpectedTaskString + INVALID_TASK_DESCRIPTION,","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TASK_DESCRIPTION));","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, VALID_TASK_NAME + TASK_DESCRIPTION_TASK1,","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, VALID_TASK_NAME + VALID_TASK_DESCRIPTION,","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"        // no description","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        Task expectedTask \u003d new TaskBuilder(TASK1).withDescription(\"\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"        assertParseSuccess(parser, TASK_NAME_TASK1, new AddTaskCommand(expectedTask));","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME + TASK_DESCRIPTION_TASK2,","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME + INVALID_TASK_DESCRIPTION,","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"                        + TASK_NAME_TASK1 + TASK_NAME_TASK1 + TASK_DESCRIPTION_TASK2,","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":110}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK2;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        assertEquals(new TaskListBook(), new TaskListBook(modelManager.getTaskList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskListFilePath(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"    public void setTaskListFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        Path path \u003d Paths.get(\"task/list/file/path\");","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"        modelManager.setTaskListFilePath(path);","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"        assertEquals(path, modelManager.getTaskListFilePath());","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"    public void hasTask_taskNotInTaskList_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        assertFalse(modelManager.hasTask(TASK1));","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"    public void hasTask_taskInTaskList_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"        modelManager.addTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"        assertTrue(modelManager.hasTask(TASK1));","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexWithinBounds_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"        modelManager.addTask(TASK2);","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        assertEquals(modelManager.getTask(0), TASK2);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexOutsideBounds_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e modelManager.getTask(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"        TaskListBook taskList \u003d new TaskListBook();","lastModifiedDate":"2023-10-05"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"        taskList.addTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, taskList)));","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":173,"author":{"gitId":"Respirayson"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, taskList)));","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"Respirayson"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"Respirayson"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"Respirayson"},"content":"        // different taskList -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"Respirayson"},"content":"        String[] taskKeywords \u003d TASK1.getName().taskName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-05"},{"lineNumber":182,"author":{"gitId":"Respirayson"},"content":"        modelManager.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(taskKeywords)));","lastModifiedDate":"2023-10-05"},{"lineNumber":183,"author":{"gitId":"Respirayson"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, new TaskListBook())));","lastModifiedDate":"2023-10-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":187,"author":{"gitId":"Respirayson"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":192,"author":{"gitId":"Respirayson"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, taskList)));","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Respirayson":67,"-":127}},{"path":"src/test/java/seedu/address/model/task/TaskDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"public class TaskDescriptionTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDescription(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public void isValidDescription() {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        // null description","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskDescription.isValidDescription(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        // invalid descriptions","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskDescription.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        // valid descriptions","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"\")); // empty string","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"complete by friday\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"-\")); // one character","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskDescription.isValidDescription(\"complete the work and do \"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"                + \"the 5 quizzes and all the projects user guide developer guide\")); // long description","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        TaskDescription description \u003d new TaskDescription(\"Valid Description\");","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        assertTrue(description.equals(new TaskDescription(\"Valid Description\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        assertTrue(description.equals(description));","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        assertFalse(description.equals(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        assertFalse(description.equals(5.0f));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        assertFalse(description.equals(new TaskDescription(\"Other Valid Description\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":51}},{"path":"src/test/java/seedu/address/model/task/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK2;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"public class TaskListTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.contains(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertFalse(taskList.contains(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertTrue(taskList.contains(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.add(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.add(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.editTask(null, TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.editTask(TASK1, null));","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.editTask(TASK1, TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        taskList.editTask(TASK1, TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        taskList.editTask(TASK1, TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.editTask(TASK1, TASK2));","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.remove(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.remove(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        taskList.remove(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTasks((TaskList) null));","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK2);","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"        taskList.setTasks(expectedTaskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e otherTaskList \u003d Collections.singletonList(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"        taskList.setTasks(otherTaskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"        expectedTaskList.add(TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2023-10-05"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(TASK1, TASK1);","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"                -\u003e taskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexWithinBounds_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"        taskList.add(TASK1);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"        assertEquals(TASK1, taskList.getTask(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"    public void getTask_indexOutsideBounds_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e taskList.getTask(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"Respirayson"},"content":"        assertEquals(taskList.asUnmodifiableObservableList().toString(), taskList.toString());","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":164}},{"path":"src/test/java/seedu/address/model/task/TaskNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class TaskNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    public void test_taskNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        // One keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"cs2103t\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cs2103t\", \"cs2100\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cs2100\", \"cs2101\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2101\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cS2103T\", \"Cs2100\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public void test_taskNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d new TaskNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"do cs2103t\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        predicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cs2101\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"do cs2103t do cs2100\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d new TaskNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        String expected \u003d TaskNameContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"                + \"{task keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":86}},{"path":"src/test/java/seedu/address/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"public class TaskNameTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    public void isValidName() {","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        // null name","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        // invalid name","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TaskName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        // valid name","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"do work\")); // alphabets only","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"2103\")); // numbers only","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"do the 2nd paper\")); // alphanumeric characters","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"Read Script\")); // with capital letters","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TaskName.isValidName(\"Read the script and memorise everything fully\")); // long names","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        TaskName name \u003d new TaskName(\"Borrow Book\");","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        assertTrue(name.equals(new TaskName(\"Borrow Book\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        assertFalse(name.equals(new TaskName(\"Other Borrow Book\")));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":60}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK2;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public class TaskTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.isSameTask(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.isSameTask(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        // same name, same description -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        Task editedTask1 \u003d new TaskBuilder(TASK1).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.isSameTask(editedTask1));","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        // different name, same description -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        editedTask1 \u003d new TaskBuilder(TASK1).withDescription(\"Hello world\").build();","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.isSameTask(editedTask1));","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        // same name, different description -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        editedTask1 \u003d new TaskBuilder(TASK1).withName(\"Say goodbye\").build();","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.isSameTask(editedTask1));","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    public void equals() {","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        Task taskCopy \u003d new TaskBuilder(TASK1).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.equals(taskCopy));","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        assertTrue(TASK1.equals(TASK1));","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(5));","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(TASK2));","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        Task editedTask \u003d new TaskBuilder(TASK1).withName(TASK2.getName().taskName).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(editedTask));","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        editedTask \u003d new TaskBuilder(TASK1).withDescription(TASK2.getDescription().description).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        assertFalse(TASK1.equals(editedTask));","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        String expected \u003d String.format(\"%s{name\u003d%s, description\u003d%s}\",","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"                Task.class.getCanonicalName(), TASK1.getName(), TASK1.getDescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        assertEquals(expected, TASK1.toString());","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":71}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    private static final String INVALID_TASK_NAME \u003d \"!!! do cs2120@@@\";","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    private static final String INVALID_TASK_DESCRIPTION \u003d \"    \";","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private static final String VALID_NAME \u003d TASK1.getName().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    private static final String VALID_DESCRIPTION \u003d TASK1.getDescription().toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        assertEquals(TASK1, task.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"                new JsonAdaptedTask(INVALID_TASK_NAME, INVALID_TASK_DESCRIPTION);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_DESCRIPTION);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"                new JsonAdaptedTask(VALID_NAME, INVALID_TASK_DESCRIPTION);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d TaskDescription.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, null);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskDescription.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":57}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class JsonSerializableTaskListTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"            \"test\", \"data\", \"JsonSerializableTaskListTest\");","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        TaskListBook taskListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        TaskListBook typicalTaskList \u003d TypicalTasks.getTypicalTaskList();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertEquals(taskListFromFile, typicalTaskList);","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskList.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":48}},{"path":"src/test/java/seedu/address/storage/JsonTaskListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK1;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK3;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.TASK4;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"public class JsonTaskListStorageTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskListStorageTest\");","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    @TempDir","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public void readTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskList(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    private java.util.Optional\u003cReadOnlyTaskList\u003e readTaskList(String filePath) throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        return new JsonTaskListStorage(Paths.get(filePath)).readTaskList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"                : null;","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        assertFalse(readTaskList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaskList(\"notJsonFormatTaskList.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void readTaskList_invalidTaskList_throwDataLoadingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaskList(\"invalidTaskList.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    public void readTaskList_invalidAndValidTaskList_throwDataLoadingException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaskList(\"invalidAndValidTaskList.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public void readAndSaveTaskList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskList.json\");","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        TaskListBook original \u003d getTypicalTaskList();","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage jsonTaskListStorage \u003d new JsonTaskListStorage(filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        ReadOnlyTaskList readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        original.addTask(TASK3);","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        original.removeTask(TASK1);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        original.addTask(TASK4);","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        jsonTaskListStorage.saveTaskList(original); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList().get(); // file path not specified","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(readBack));","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"     * Saves {@code taskList} at the specified {@code filePath}.","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"    private void saveTaskList(ReadOnlyTaskList taskList, String filePath) {","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"            new JsonTaskListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"                    .saveTaskList(taskList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"    public void saveTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(new TaskListBook(), null));","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"Respirayson":110}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tasks\"));","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"    public void taskListReadSave() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        /*","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        TaskListBook original \u003d getTypicalTaskList();","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        storageManager.saveTaskList(original);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"        ReadOnlyTaskList retrieved \u003d storageManager.readTaskList().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        assertEquals(original, new TaskListBook(retrieved));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    public void getTaskListFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        assertNotNull(storageManager.getTaskListFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Respirayson":23,"-":67}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class TaskBuilder {","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public static final String DEFAULT_NAME \u003d \"Borrow book\";","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"At Central Library\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    private TaskName name;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    private TaskDescription description;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder() {","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"        name \u003d new TaskName(DEFAULT_NAME);","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * Initializes the TaskBuilder with the data of {@code task}.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder(Task task) {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        name \u003d task.getName();","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        description \u003d task.getDescription();","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        this.name \u003d new TaskName(name);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return this;","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    public Task build() {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        return new Task(name, description);","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":55}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.TaskListBook;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK1 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Do cs2103t\")","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"Complete PRS\")","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK2 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Read quant guide\")","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"The green book\")","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK3 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Study cs3233\")","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"Read Steven Halim Book for competitive programming\")","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public static final Task TASK4 \u003d new TaskBuilder()","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"            .withName(\"Plan for mods\")","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"            .withDescription(\"SEPSPEPESEP\")","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"            .build();","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * Returns an {@code TaskListBook} with all the typical tasks.","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public static TaskListBook getTypicalTaskList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        TaskListBook ab \u003d new TaskListBook();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        return ab;","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK1, TASK2));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"Respirayson":51}}]

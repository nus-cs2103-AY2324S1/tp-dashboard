[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hyc17003"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-T14-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T14-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"hyc17003"},"content":"# HealthSync","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"hyc17003"},"content":"HealthSync is a desktop app for managing patient details, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HealthSync can help you organize and manage patient details faster than traditional GUI apps.","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"hyc17003"},"content":"## Features","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"hyc17003"},"content":"1. **Auto-Save Feature** - Saves data in the hard disk automatically after any changes have been made. There is no need to save manually.","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"hyc17003"},"content":"2. **Data Creation (Add Function)** - Enables front desk workers to create a new patient object and new fields to store patient information. Adding patient information can be done using the `add` command after providing one of the patient’s identification (either name or id).","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"hyc17003"},"content":"- Patient information includes:","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"hyc17003"},"content":"    - Patient\u0027s Contacts","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"hyc17003"},"content":"    - Patient\u0027s Medical History","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"hyc17003"},"content":"    - Patient\u0027s Ward Information","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"hyc17003"},"content":"    - Patient\u0027s Upcoming Appointment Time(s)","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"hyc17003"},"content":"3. **Data Retrieval (Find Function)** - Enables front desk workers to quickly retrieve patient information based on command executed. If no fields are provided, the function returns all the patient’s related information. Else, only the details relating to the field are provided.","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"hyc17003"},"content":"4. **Data Deletion (Delete Function)** - Enables front desk workers to remove certain patient information / all patient information when they are no longer needed. If no fields are provided, the function deletes the patient. Else, only the patient information within the specified field is deleted.","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"hyc17003"},"content":"5. **Edit Data (Edit Function)** - Enables front desk workers to update patient information fields as necessary. Editing patient information can be done using the `edit` command after providing one of the patient\u0027s identification (either name or id).","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"hyc17003"},"content":"6. **User-Friendly CLI Interface** - CLI interface that is easy to navigate for users.","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"hyc17003"},"content":"For in-depth usage and a full list of commands, refer to the [User Guide](https://ay2324s1-cs2103t-t14-3.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"hyc17003"},"content":"## Acknowledgments","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"hyc17003"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"hyc17003":37,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"WZWren"},"content":"    archiveFileName \u003d \u0027healthsync.jar\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"WZWren":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"### Wee Hung","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"\u003cimg src\u003d\"images/weeehung.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"[[homepage](https://github.com/WeeeHung)]","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"[[github](https://github.com/WeeeHung)]","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"[[portfolio](team/weeehung.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"nubnubyas"},"content":"### Zhang Yiheng","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"nubnubyas"},"content":"\u003cimg src\u003d\"images/nubnubyas.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"nubnubyas"},"content":"[[github](http://github.com/nubnubyas)]","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"nubnubyas"},"content":"[[portfolio](team/nubnubyas.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"### Janssen Lau","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"\u003cimg src\u003d\"images/kanna-1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"[[github](http://github.com/kanna-1)] [[portfolio](team/kanna-1.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"* Responsibilities: Documentation + Code Quality","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"hyc17003"},"content":"### Huang Yi Chee","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"hyc17003"},"content":"\u003cimg src\u003d\"images/hyc17003.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"hyc17003"},"content":"[[github](http://github.com/hyc17003)]","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"hyc17003"},"content":"[[portfolio](team/hyc17003.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"### Wang Zhi, Wren","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"\u003cimg src\u003d\"images/wzwren.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"[[github](http://github.com/wzwren)]","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"[[portfolio](team/wzwren.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"* Responsibilities: Scheduling and Tracking","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"nubnubyas":4,"hyc17003":4,"WZWren":5,"-":38,"kanna-1":4,"WeeeHung":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"# HealthSync Developer Guide","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"WZWren"},"content":"### Implementation of Single, optional Appointment Field","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"WZWren"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"WZWren"},"content":"_{Explain how `Appointment` as an optional field is implemented}_","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"WZWren"},"content":"_{Explain how `Appointment` is stored inside each `Person`}_","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"WZWren"},"content":"#### Design Considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"WZWren"},"content":"**Aspect: Parsing of `Appointment` Field**","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"WZWren"},"content":"* **Alternative 1 (current choice):** Use of the single `ap/` flag.","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"WZWren"},"content":"  * Pros: Easy to input on the user-end.","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"WZWren"},"content":"  * Cons: Hard to separate time fields, could be troublesome to implement a parse format string.","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"WZWren"},"content":"* **Alternative 2:** Use of 2 flags to denote start and end time for appointment.","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"WZWren"},"content":"  * Pros: Immediate clarity on what fields to implement, and how to parse input string.","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"WZWren"},"content":"  * Cons: Strong dependence between 2 flags requires more fail-state management.","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"WZWren"},"content":"**Aspect: Value to store `Appointment` as**","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"WZWren"},"content":"* **Alternative 1 (current choice):** Use of raw `String` format for Appointment","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"WZWren"},"content":"  * Pros: Far easier to parse and store as an object.","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"WZWren"},"content":"  * Cons: Hard to extend upon in future use-cases, such as reminders, etc.","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"WZWren"},"content":"* **Alternative 2:** Use of `DateTime`-related objects for Appointment","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"WZWren"},"content":"  * Pros: More direct paths of feature extension in the long run.","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"WZWren"},"content":"  * Cons: Translation to and from `DateTime` objects can be non-trivial.","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"WZWren"},"content":"We are currently in the process of switching to Alternative 2, as Alternative 1 was chosen primarily for its","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"WZWren"},"content":"fast implementation for the MVP.","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"WZWren"},"content":"### Addition of Interface for Find-type commands","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"WZWren"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"WZWren"},"content":"_{Explain how there is overlap in function for `find`, `delete`, `edit`}_","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"WeeeHung"},"content":"* has a need to manage a large database of patient details, which includes health records, contact details, and appointment schedules","lastModifiedDate":"2023-09-28"},{"lineNumber":312,"author":{"gitId":"WeeeHung"},"content":"* cannot spend more than 2-3 minutes registering/accessing a database system","lastModifiedDate":"2023-09-28"},{"lineNumber":313,"author":{"gitId":"WeeeHung"},"content":"* work is fast-paced and requires quick access to patient details","lastModifiedDate":"2023-09-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"WeeeHung"},"content":"**Value proposition**:","lastModifiedDate":"2023-09-28"},{"lineNumber":320,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":321,"author":{"gitId":"WeeeHung"},"content":"HealthSync caters to counter staff, enabling them to register and access patient information within 2-3 minutes. It offers a user-friendly platform, optimizing contact management, patient tracking, department coordination, and health record access, ensuring efficient patient management, appointment scheduling, and comprehensive health record retrieval, enhancing care delivery and saving time.","lastModifiedDate":"2023-09-28"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"| Priority | As a …​                                         | I want to …​                                        | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"WeeeHung"},"content":"|----------|------------------------------------------------|----------------------------------------------------|--------------------------------------------------------------------------|","lastModifiedDate":"2023-09-28"},{"lineNumber":330,"author":{"gitId":"WeeeHung"},"content":"| `* * *`  | beginner of the app for an important operation | auto-save all my data                              | not lose my data when something goes wrong                               |","lastModifiedDate":"2023-09-28"},{"lineNumber":331,"author":{"gitId":"WeeeHung"},"content":"| `* * *`  | busy frontdesk worker                          | retrieve patient information                       | answer their queries                                                     |","lastModifiedDate":"2023-09-28"},{"lineNumber":332,"author":{"gitId":"WeeeHung"},"content":"| `* * *`  | frontdesk worker                               | create patient entries                             | add entries when new patients visit                                      |","lastModifiedDate":"2023-09-28"},{"lineNumber":333,"author":{"gitId":"WeeeHung"},"content":"| `* * *`  | frontdesk worker                               | find a patient by name                             | locate details of persons without having to go through the entire list   |","lastModifiedDate":"2023-09-28"},{"lineNumber":334,"author":{"gitId":"WeeeHung"},"content":"| `* * *`  | frontdesk worker                               | delete a patient entry                             | clean and update the database when patient no longer exist               |","lastModifiedDate":"2023-09-28"},{"lineNumber":335,"author":{"gitId":"WeeeHung"},"content":"| `* * *`  | frontdesk worker                               | edit patient entries                               | update their details, especially for upcoming appointment dates          |","lastModifiedDate":"2023-09-28"},{"lineNumber":336,"author":{"gitId":"WeeeHung"},"content":"| `* * `   | a new user of the app                          | view hints on commonly used commands               | be familiar with the app as soon as possible                             |","lastModifiedDate":"2023-09-28"},{"lineNumber":337,"author":{"gitId":"WeeeHung"},"content":"| `* * `   | a new user of the app                          | view preloaded sample data                         | know how the basic UI look like when it is populated                     |","lastModifiedDate":"2023-09-28"},{"lineNumber":338,"author":{"gitId":"WeeeHung"},"content":"| `* * `   | frontdesk worker                               | use app with shortcuts                             | get my task done very quickly                                            |","lastModifiedDate":"2023-09-28"},{"lineNumber":339,"author":{"gitId":"WeeeHung"},"content":"| `* * `   | frontdesk worker                               | have calendar-like UI to create appointments       | show calendar to patients and allow smoother appointment booking process |","lastModifiedDate":"2023-09-28"},{"lineNumber":340,"author":{"gitId":"WeeeHung"},"content":"| `* * `   | frontdesk worker                               | see conflicts in appointment schedules             | seamlessly schedule appointments for patients                            |","lastModifiedDate":"2023-09-28"},{"lineNumber":341,"author":{"gitId":"WeeeHung"},"content":"| `* * `   | frontdesk worker                               | reminder when patient\u0027s appointment is coming soon | call and remind patients accordingly                                     |","lastModifiedDate":"2023-09-28"},{"lineNumber":342,"author":{"gitId":"WeeeHung"},"content":"| `* * `   | healthcare provider                            | document patient encounters(ie. exam notes)        | maintain up-to-date records of patient information                       |","lastModifiedDate":"2023-09-28"},{"lineNumber":343,"author":{"gitId":"WeeeHung"},"content":"| `* `     | a new user of the app                          | have physical UI Buttons                           | use to execute tasks before I\u0027m familiar with shortcuts                  |","lastModifiedDate":"2023-09-28"},{"lineNumber":344,"author":{"gitId":"WeeeHung"},"content":"| `* `     | frontdesk worker                               | have a very optimised app                          | do my task and have data reading almost instantly (O(1))                 |","lastModifiedDate":"2023-09-28"},{"lineNumber":345,"author":{"gitId":"WeeeHung"},"content":"| `* `     | frontdesk worker                               | add tags to patients                               | view and filter patients accordingly                                     |","lastModifiedDate":"2023-09-28"},{"lineNumber":346,"author":{"gitId":"WeeeHung"},"content":"| `* `     | frontdesk worker                               | leverage on database statistics                    | analyse data (ie. how many appointments booked/ month for doctors)       |","lastModifiedDate":"2023-09-28"},{"lineNumber":347,"author":{"gitId":"WeeeHung"},"content":"| `* `     | frontdesk worker                               | save back-up or archive patient details somewhere  | maintain a fast application while still having data securely stored      |","lastModifiedDate":"2023-09-28"},{"lineNumber":348,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"WZWren"},"content":"(For all use cases below, the **System** is the `HealthSync` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"WZWren"},"content":"**Use case: UC1 - Add a patient**","lastModifiedDate":"2023-10-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"WZWren"},"content":"1.  User requests to add a patient into the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":361,"author":{"gitId":"WZWren"},"content":"2.  HealthSync adds the target patient into the list","lastModifiedDate":"2023-10-02"},{"lineNumber":362,"author":{"gitId":"WZWren"},"content":"    and displays the patient inside the updated list.","lastModifiedDate":"2023-10-02"},{"lineNumber":363,"author":{"gitId":"WZWren"},"content":"3.  HealthSync \u003cu\u003eperforms an auto-save (UC0A)\u003c/u\u003e.","lastModifiedDate":"2023-10-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"WZWren"},"content":"* 1a. The user does not specify one or more of the compulsory fields.","lastModifiedDate":"2023-10-02"},{"lineNumber":370,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":371,"author":{"gitId":"WZWren"},"content":"  * 1a1. HealthSync shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":372,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":373,"author":{"gitId":"WZWren"},"content":"    Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":374,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":375,"author":{"gitId":"WZWren"},"content":"  * 1b. The user specifies an IC that is already exists in the current list.","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":377,"author":{"gitId":"WZWren"},"content":"    * 1b1. HealthSync shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":378,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":379,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":380,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":381,"author":{"gitId":"WZWren"},"content":"**Use case: UC2 - Delete a patient**","lastModifiedDate":"2023-10-02"},{"lineNumber":382,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":383,"author":{"gitId":"WZWren"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":384,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":385,"author":{"gitId":"WZWren"},"content":"1.  User requests to delete a specific patient based on an identifier from the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":386,"author":{"gitId":"WZWren"},"content":"2.  HealthSync searches for the patient in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":387,"author":{"gitId":"WZWren"},"content":"3.  HealthSync deletes the specified patient from the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":388,"author":{"gitId":"WZWren"},"content":"4.  HealthSync \u003cu\u003eperforms an auto-save (UC0A)\u003c/u\u003e.","lastModifiedDate":"2023-10-03"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"WZWren"},"content":"* 2a. The user does not exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":395,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":396,"author":{"gitId":"WZWren"},"content":"    * 2a1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"WZWren"},"content":"* 2b. HealthSync finds more than 1 patient for the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":401,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":402,"author":{"gitId":"WZWren"},"content":"    * 2b1. HealthSync shows a list of patients matching the identifier in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":403,"author":{"gitId":"WZWren"},"content":"    * 2b2. User indicates the patient to delete in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":404,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":405,"author":{"gitId":"WZWren"},"content":"      Use case continues from step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":406,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":407,"author":{"gitId":"WZWren"},"content":"**Use case: UC3 - Delete fields from a patient**","lastModifiedDate":"2023-10-03"},{"lineNumber":408,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":409,"author":{"gitId":"WZWren"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":410,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":411,"author":{"gitId":"WZWren"},"content":"1.  User requests to delete fields from a specific patient based","lastModifiedDate":"2023-10-03"},{"lineNumber":412,"author":{"gitId":"WZWren"},"content":"    on an identifier from the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":413,"author":{"gitId":"WZWren"},"content":"2.  HealthSync searches for the patient in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":414,"author":{"gitId":"WZWren"},"content":"3.  HealthSync deletes the fields of a specified patient from the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":415,"author":{"gitId":"WZWren"},"content":"4.  HealthSync \u003cu\u003eperforms an auto-save (UC0A)\u003c/u\u003e.","lastModifiedDate":"2023-10-03"},{"lineNumber":416,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":417,"author":{"gitId":"WZWren"},"content":"    Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":418,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":419,"author":{"gitId":"WZWren"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":420,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":421,"author":{"gitId":"WZWren"},"content":"* 1a. The user does not specify any fields they want to delete.","lastModifiedDate":"2023-10-03"},{"lineNumber":422,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":423,"author":{"gitId":"WZWren"},"content":"    * 1a1. HealthSync \u003cu\u003edeletes the patient from the list instead (UC2).\u003c/u\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":424,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":425,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":426,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":427,"author":{"gitId":"WZWren"},"content":"* 1b. The user attempts to delete a name/IC field.","lastModifiedDate":"2023-10-03"},{"lineNumber":428,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":429,"author":{"gitId":"WZWren"},"content":"    * 1b1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":430,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":431,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":432,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":433,"author":{"gitId":"WZWren"},"content":"* 2a. The user does not exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":434,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"WZWren"},"content":"    * 2a1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":437,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":439,"author":{"gitId":"WZWren"},"content":"* 2b. HealthSync finds more than 1 patient for the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":441,"author":{"gitId":"WZWren"},"content":"    * 2b1. HealthSync shows a list of patients matching the identifier in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":442,"author":{"gitId":"WZWren"},"content":"    * 2b2. User indicates the patient to delete from in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":444,"author":{"gitId":"WZWren"},"content":"      Use case continues from step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":445,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":446,"author":{"gitId":"WZWren"},"content":"**Use case: UC4 - Edit a patient**","lastModifiedDate":"2023-10-03"},{"lineNumber":447,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":448,"author":{"gitId":"WZWren"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":449,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":450,"author":{"gitId":"nubnubyas"},"content":"1.  User requests to change a specific user\u0027s fields","lastModifiedDate":"2023-10-05"},{"lineNumber":451,"author":{"gitId":"nubnubyas"},"content":"based on an identifier","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"WZWren"},"content":"    with a new value in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":453,"author":{"gitId":"WZWren"},"content":"2.  HealthSync searches for the patient in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":454,"author":{"gitId":"WZWren"},"content":"3.  HealthSync edits the specified patient\u0027s fields in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":455,"author":{"gitId":"WZWren"},"content":"4.  HealthSync \u003cu\u003eperforms an auto-save (UC0A)\u003c/u\u003e.","lastModifiedDate":"2023-10-03"},{"lineNumber":456,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":457,"author":{"gitId":"WZWren"},"content":"    Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":458,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":459,"author":{"gitId":"WZWren"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":460,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":461,"author":{"gitId":"WZWren"},"content":"* 1a. The user does not specify any fields they want to edit.","lastModifiedDate":"2023-10-03"},{"lineNumber":462,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":463,"author":{"gitId":"WZWren"},"content":"    * 1a1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":464,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":465,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":466,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":467,"author":{"gitId":"WZWren"},"content":"* 1b. The user specifies duplicate fields they want to edit.","lastModifiedDate":"2023-10-03"},{"lineNumber":468,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":469,"author":{"gitId":"WZWren"},"content":"    * 1b1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":470,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":471,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":472,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":473,"author":{"gitId":"WZWren"},"content":"* 1c. The user specifies no value in a name/IC field that they wish to edit.","lastModifiedDate":"2023-10-03"},{"lineNumber":474,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":475,"author":{"gitId":"WZWren"},"content":"    * 1c1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":476,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":477,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"WZWren"},"content":"* 1d. The user attempts to change the IC of the patient to one that already","lastModifiedDate":"2023-10-03"},{"lineNumber":480,"author":{"gitId":"WZWren"},"content":"      exists in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"WZWren"},"content":"    * 1d1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":483,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":484,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":485,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":486,"author":{"gitId":"WZWren"},"content":"* 2a. The user does not exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":487,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":488,"author":{"gitId":"WZWren"},"content":"    * 2a1. HealthSync shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":489,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":490,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":491,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":492,"author":{"gitId":"WZWren"},"content":"* 2b. HealthSync finds more than 1 patient for the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":493,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":494,"author":{"gitId":"WZWren"},"content":"    * 2b1. HealthSync shows a list of patients matching the identifier in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":495,"author":{"gitId":"WZWren"},"content":"    * 2b2. User indicates the patient to edit in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":496,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":497,"author":{"gitId":"WZWren"},"content":"      Use case continues from step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":498,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":499,"author":{"gitId":"WZWren"},"content":"**Use case: UC5 - Find a patient**","lastModifiedDate":"2023-10-03"},{"lineNumber":500,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":501,"author":{"gitId":"WZWren"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":502,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":503,"author":{"gitId":"WZWren"},"content":"1.  User requests for matches to the given query.","lastModifiedDate":"2023-10-02"},{"lineNumber":504,"author":{"gitId":"WZWren"},"content":"2.  HealthSync displays the list of patients matching the query.","lastModifiedDate":"2023-10-02"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"WZWren"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":509,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":510,"author":{"gitId":"WZWren"},"content":"* 1a. No matches exist in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"WZWren"},"content":"    * 1a1. HealthSync displays a \"no matches found\" message.","lastModifiedDate":"2023-10-02"},{"lineNumber":513,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":514,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":515,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":516,"author":{"gitId":"WZWren"},"content":"* 1b. User additionally specifies fields of the patient that they are interested in.","lastModifiedDate":"2023-10-02"},{"lineNumber":517,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":518,"author":{"gitId":"WZWren"},"content":"    * 1b1. HealthSync displays only the specific fields of the patients that match the query.","lastModifiedDate":"2023-10-02"},{"lineNumber":519,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":520,"author":{"gitId":"WZWren"},"content":"      Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"WZWren"},"content":"**Use case: UC0A - Auto-save**","lastModifiedDate":"2023-10-02"},{"lineNumber":523,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":524,"author":{"gitId":"WZWren"},"content":"**Actors:** Operating System (OS)","lastModifiedDate":"2023-10-02"},{"lineNumber":525,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":526,"author":{"gitId":"WZWren"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":527,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":528,"author":{"gitId":"WZWren"},"content":"1.  HealthSync requests for permissions from the OS to access its save location.","lastModifiedDate":"2023-10-02"},{"lineNumber":529,"author":{"gitId":"WZWren"},"content":"2.  OS grants HealthSync permission to access its save location.","lastModifiedDate":"2023-10-02"},{"lineNumber":530,"author":{"gitId":"WZWren"},"content":"3.  HealthSync saves the session data into the save location.","lastModifiedDate":"2023-10-02"},{"lineNumber":531,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":532,"author":{"gitId":"WZWren"},"content":"    Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":533,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":534,"author":{"gitId":"WZWren"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":535,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":536,"author":{"gitId":"WZWren"},"content":"* 1a. OS does not grant HealthSync save location permissions.","lastModifiedDate":"2023-10-02"},{"lineNumber":537,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":538,"author":{"gitId":"WZWren"},"content":"    * 1a1. HealthSync shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":539,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":540,"author":{"gitId":"WZWren"},"content":"    Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"kanna-1"},"content":"1. The application should be compatible with the designated operating systems and hardware configurations, as specified in the system requirements.","lastModifiedDate":"2023-10-01"},{"lineNumber":547,"author":{"gitId":"kanna-1"},"content":"2. The application should respond promptly to user inputs, with minimal latency and loading times for data retrieval and processing.","lastModifiedDate":"2023-10-01"},{"lineNumber":548,"author":{"gitId":"kanna-1"},"content":"3. The user interface should be user-friendly and intuitive, designed to optimize the workflow of frontdesk staff who need to complete tasks within 2-3 minutes.","lastModifiedDate":"2023-10-01"},{"lineNumber":549,"author":{"gitId":"kanna-1"},"content":"4. The application should be designed to handle an increasing volume of patient records efficiently without noticeable performance degradation.","lastModifiedDate":"2023-10-01"},{"lineNumber":550,"author":{"gitId":"kanna-1"},"content":"5. Ensure that the application complies with PDPA and healthcare regulations.","lastModifiedDate":"2023-10-01"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"nubnubyas"},"content":"* **Architecture Diagram**: A visual representation that illustrates the high-level design of the application","lastModifiedDate":"2023-10-06"},{"lineNumber":559,"author":{"gitId":"nubnubyas"},"content":"* **Main**: The function responsible for launching the application","lastModifiedDate":"2023-10-06"},{"lineNumber":560,"author":{"gitId":"nubnubyas"},"content":"* **UI**: Stands for User Interface","lastModifiedDate":"2023-10-06"},{"lineNumber":561,"author":{"gitId":"nubnubyas"},"content":"* **API**: Stands for Application Programming Interface, it defines the methods and protocols of the application","lastModifiedDate":"2023-10-06"},{"lineNumber":562,"author":{"gitId":"nubnubyas"},"content":"* **ObservableList**: A list implementation that allows other objects to observe and be notified when there is changes","lastModifiedDate":"2023-10-06"},{"lineNumber":563,"author":{"gitId":"nubnubyas"},"content":"* **JSON**: Stands for JavaScript Object Notation, it is a lightweight data interchange format","lastModifiedDate":"2023-10-06"},{"lineNumber":564,"author":{"gitId":"nubnubyas"},"content":"* **Classes**: Defines an object in the application","lastModifiedDate":"2023-10-06"},{"lineNumber":565,"author":{"gitId":"nubnubyas"},"content":"* **CLI**: Stands for Command-Line Interface, it is a text-based interface for interaction with computer system or software applications through use of commands","lastModifiedDate":"2023-10-06"},{"lineNumber":566,"author":{"gitId":"nubnubyas"},"content":"* **IC**: Stands for Identity Card","lastModifiedDate":"2023-10-06"},{"lineNumber":567,"author":{"gitId":"nubnubyas"},"content":"* **Database**: A structured collection of data organized and stored in computer system","lastModifiedDate":"2023-10-06"},{"lineNumber":568,"author":{"gitId":"nubnubyas"},"content":"* **Latency**: The time delay between user\u0027s action or request and the system\u0027s response","lastModifiedDate":"2023-10-06"},{"lineNumber":569,"author":{"gitId":"nubnubyas"},"content":"* **PDPA**: Stands for Personal Data Protection Act, it is the legislation related to the protection of personal data and privacy","lastModifiedDate":"2023-10-06"},{"lineNumber":570,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":580,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":581,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nubnubyas":15,"WZWren":196,"-":382,"kanna-1":5,"WeeeHung":27}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"nubnubyas"},"content":"# HealthSync User Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"HealthSync is a **desktop app for managing patient details, optimised for use via a Command Line Interface** (CLI)","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HealthSync can help you","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"organise and manage patient details faster than traditional GUI apps.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"2. Download the latest `healthsync.jar` from [here](https://github.com/AY2324S1-CS2103T-T14-4/tp/releases).","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your HealthSync.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar healthsync.jar`","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"   command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"   e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"WZWren"},"content":"   * `list` : Lists all patients.","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"hyc17003"},"content":"   * `add n/John Doe id/S8943782H p/98114839` : Adds a patient named `John Doe` with the relevant field details to HealthSync.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"hyc17003"},"content":"   * `delete n/Alex Yeoh` : Deletes Alex Yeoh\u0027s details from the current list.","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"   * `clear` : Deletes all patients.","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"* The word `or` indicates that at least one of the fields has to be supplied by the user.","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"  The output `or` will return the above field that was supplied by the user.","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"* `[field]` are optional tags that can be added after a command.","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"* `[field] …` indicate that multiple fields can be supplied by the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"* `[field] …` can be in any order.","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`)","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"WZWren"},"content":"  will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"WZWren"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"WZWren"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"WZWren"},"content":"### Common Shared Fields","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"The 2 identifying parameters of a patient are given below:","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"WZWren"},"content":"| Tag   | Representative Value  | Example Usage  | General Form in Commands |","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"WZWren"},"content":"|-------|-----------------------|----------------|--------------------------|","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"WZWren"},"content":"| `n/`  | Name                  | `n/Alex`       | `n/NAME`                 |","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"| `id/` | Identification Number | `id/S2345678A` | `id/IC_NUMBER`           |","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"1 or more identifying parameters must be specified in each command, unless stated otherwise.","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"WZWren"},"content":"`[field]` are common optional fields that can be specified behind commands. The common optional fields are:","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"| Tag      | Representative Value   | Example Usage         | General Form in Commands | Remarks                         |","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"WZWren"},"content":"|----------|------------------------|-----------------------|--------------------------|---------------------------------|","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"| `p/`     | Phone Number           | `p/91234567`          | `p/PHONE_NUMBER`         |                                 |","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"WZWren"},"content":"| `e/`     | Email Address          | `e/example@a.com`     | `e/EMAIL`                |                                 |","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"WZWren"},"content":"| `a/`     | Address                | `a/Location, Here Rd` | `a/ADDRESS`              |                                 |","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"WZWren"},"content":"| `m/`     | Medical History        | `m/Asthmatic`         | `m/MEDICAL_HISTORY`      |                                 |","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"| `start/` | Appointment Start Time | `start/Nov 11, 9AM`   | `start/APPT_START`       | Must be paired with `/end`      |","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"WZWren"},"content":"| `end/`   | Appointment End Time   | `end/Nov 11, 12PM`    | `end/APPT_END`           | Must be paired with `/start`    |","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"WZWren"},"content":"| `t/`     | Tag                    | `t/Emergency`         | `t/TAG`                  | Can have multiple of this field |","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"WZWren"},"content":"### Auto Save","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":106,"author":{"gitId":"WZWren"},"content":"HealthSync data are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"WZWren"},"content":"There is no need to save manually.","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"WZWren"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"WZWren"},"content":"### Adding a patient: `add`","lastModifiedDate":"2023-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"WZWren"},"content":"Adds a patient into the program, with the given patient information.","lastModifiedDate":"2023-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"* A patient\u0027s name and IC are required when creating a new entry into the program.","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"Format: `add n/NAME id/IC_NUMBER [field] ...`","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":127,"author":{"gitId":"WZWren"},"content":"Example commands:","lastModifiedDate":"2023-10-01"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":" * `add n/Aaron Tan Jun Jie id/S8943782H p/98114839`","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":130,"author":{"gitId":"WZWren"},"content":"Expected outputs when the command succeeds:","lastModifiedDate":"2023-10-01"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":" * `Patient Aaron Tan Jun Jie has been added with the fields: id/S8943782H p/98114839`","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":133,"author":{"gitId":"WZWren"},"content":"Expected outputs when the command fails:","lastModifiedDate":"2023-10-01"},{"lineNumber":134,"author":{"gitId":"WZWren"},"content":" * `Unable to add the patient to the database: Patient already exists.`","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"WZWren"},"content":" * `Unable to add the patient to the database: IC required.`","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Listing all persons: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"### Editing a patient\u0027s details: `edit`","lastModifiedDate":"2023-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"Edits an existing patient\u0027s details in the address book.","lastModifiedDate":"2023-10-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":" * Edits the person with the specified name or id.","lastModifiedDate":"2023-10-01"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":" * If an invalid name or id is passed, an error message will be logged.","lastModifiedDate":"2023-10-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":" * At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"kanna-1"},"content":" * Existing fields will be updated to the input values.","lastModifiedDate":"2023-10-01"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":" * If the fields do not exist, the corresponding field with details will be added.","lastModifiedDate":"2023-10-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"WZWren"},"content":"Format: `edit n/NAME or id/IC_NUMBER [field] ...`","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"Example commands:","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"WZWren"},"content":" * `edit n/John Doe p/91234567 e/johndoe@example.com`","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"kanna-1"},"content":"Expected outputs when the command succeeds:","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"kanna-1"},"content":"* `Patient John Doe has been updated with the fields:  p/91234567 e/johndoe@example.com`","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"kanna-1"},"content":"Expected outputs when command fails:","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"* `Unable to edit the patient: Patient identification does not exist.`","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"hyc17003"},"content":"### Locating persons by name or NRIC: `find`","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"hyc17003"},"content":"Searches the patient list for all patients matching the name or NRIC and returns their related information.","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"kanna-1"},"content":" * The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":" * The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"hyc17003"},"content":" * Only the name or IC number is searched.","lastModifiedDate":"2023-10-01"},{"lineNumber":174,"author":{"gitId":"kanna-1"},"content":" * Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"hyc17003"},"content":" * For the name, only persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-10-01"},{"lineNumber":176,"author":{"gitId":"kanna-1"},"content":"   e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"hyc17003"},"content":"Format: `find n/NAME` *or* `id/IC_NUMBER`","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"kanna-1"},"content":"Example commands:","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"kanna-1"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"kanna-1"},"content":"* `find id/S872D` returns `Alex Yeoh`, with IC number `S872D` \u003cbr\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"kanna-1"},"content":"  ![result for \u0027find id/S872D\u0027](images/findidS872DResult.png)","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"hyc17003"},"content":"Expected outputs when the command succeeds:","lastModifiedDate":"2023-10-01"},{"lineNumber":188,"author":{"gitId":"hyc17003"},"content":" * `Patient n/NAME or id/IC_NUMBER: [field] …`","lastModifiedDate":"2023-10-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":190,"author":{"gitId":"hyc17003"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-01"},{"lineNumber":191,"author":{"gitId":"hyc17003"},"content":" * `Unable to find the patient. Check if the patient’s information is correct.`","lastModifiedDate":"2023-10-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"hyc17003"},"content":"### Preserving a `find` command result: `save`","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"hyc17003"},"content":"Logs the result of the find command to the logger tab, which can be viewed at all times.","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"hyc17003"},"content":"* Saving to the logger tab only works for results of the `find` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"hyc17003"},"content":"* The entire result will be saved.","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"hyc17003"},"content":"* The result will be saved in the same order and format.","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"hyc17003"},"content":"* Saving a new result clears the current saved result from the logger tab and replaces it.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"hyc17003"},"content":"Format: `save`","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"hyc17003"},"content":"Expected outputs when the command succeeds:","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"hyc17003"},"content":"* `Results have been saved to the logger tab.`","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"hyc17003"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"hyc17003"},"content":"* `Unable to save to the logger tab. Check if a find command was entered prior.`","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"nubnubyas"},"content":"### Deleting a person or field: `delete`","lastModifiedDate":"2023-10-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"kanna-1"},"content":"Deletes the specified person or the fields for the person from HealthSync.","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"nubnubyas"},"content":"* Deletes the person with the specified `n/NAME or id/IC_NUMBER`.","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"kanna-1"},"content":"* The name or ic number must be a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"kanna-1"},"content":"* To delete a specified field only instead of the entire person, we indicate the field behind of the identification.","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"nubnubyas"},"content":"* If multiple people has the same name, HealthSync will display a list of people with that name together with their IC number.","lastModifiedDate":"2023-10-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"kanna-1"},"content":"Format: `delete n/NAME or id/IC_NUMBER [field]`","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":223,"author":{"gitId":"kanna-1"},"content":"Example commands:","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"kanna-1"},"content":"* `delete id/S9987362H` deletes all the details of the person with the specified IC number from HealthSync.","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"kanna-1"},"content":"* `delete n/John Doe` deletes all the details of John Doe from HealthSync.","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"kanna-1"},"content":"* `delete n/John Doe p/` deletes John Doe phone number from his profile.","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"nubnubyas"},"content":"Expected outputs when the command succeeds:","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"nubnubyas"},"content":" * `Patient n/NAME or id/IC_NUMBER has been removed from the database`","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"nubnubyas"},"content":" * `The [field] of Patient n/NAME or id/IC_NUMBER has been removed from the database`","lastModifiedDate":"2023-10-05"},{"lineNumber":231,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":232,"author":{"gitId":"nubnubyas"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-05"},{"lineNumber":233,"author":{"gitId":"nubnubyas"},"content":" * `Error code’s message (i.e. Invalid NRIC/ Invalid Field(s) / Database Error) `","lastModifiedDate":"2023-10-05"},{"lineNumber":234,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"nubnubyas"},"content":"\u003c!--","lastModifiedDate":"2023-10-01"},{"lineNumber":236,"author":{"gitId":"nubnubyas"},"content":"Original format, can consider using","lastModifiedDate":"2023-10-01"},{"lineNumber":237,"author":{"gitId":"nubnubyas"},"content":"list followed by delete 2 deletes the 2nd person in the address book.","lastModifiedDate":"2023-10-01"},{"lineNumber":238,"author":{"gitId":"nubnubyas"},"content":"find Betsy followed by delete 1 deletes the 1st person in the results of the find command.","lastModifiedDate":"2023-10-01"},{"lineNumber":239,"author":{"gitId":"nubnubyas"},"content":"--\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"WZWren"},"content":"### Delete all patients: `clear`","lastModifiedDate":"2023-10-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"WZWren"},"content":"Deletes all patients from the program.","lastModifiedDate":"2023-10-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":258,"author":{"gitId":"WZWren"},"content":"HealthSync data are saved automatically as a JSON file `[JAR file location]/data/healthsync.json`.","lastModifiedDate":"2023-10-07"},{"lineNumber":259,"author":{"gitId":"WZWren"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":264,"author":{"gitId":"WZWren"},"content":"If your changes to the data file makes its format invalid, HealthSync will discard all data and start with an empty","lastModifiedDate":"2023-10-07"},{"lineNumber":265,"author":{"gitId":"WZWren"},"content":"data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"WZWren"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2023-10-07"},{"lineNumber":278,"author":{"gitId":"WZWren"},"content":"       the data of your previous HealthSync home folder.","lastModifiedDate":"2023-10-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":284,"author":{"gitId":"WZWren"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only","lastModifiedDate":"2023-10-07"},{"lineNumber":285,"author":{"gitId":"WZWren"},"content":"   the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by","lastModifiedDate":"2023-10-07"},{"lineNumber":286,"author":{"gitId":"WZWren"},"content":"   the application before running the application again.","lastModifiedDate":"2023-10-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"WZWren"},"content":"| Action     | Format, Examples                                                                                                           |","lastModifiedDate":"2023-10-07"},{"lineNumber":293,"author":{"gitId":"WZWren"},"content":"|------------|----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-07"},{"lineNumber":294,"author":{"gitId":"WZWren"},"content":"| **Add**    | `add n/NAME id/IC_NUMBER [field] ...` \u003cbr\u003e e.g., `add n/James Ho id/SXXXX123D p/91234567 a/A Estate, Clementi Rd, 1234665` |","lastModifiedDate":"2023-10-07"},{"lineNumber":295,"author":{"gitId":"WZWren"},"content":"| **Clear**  | `clear`                                                                                                                    |","lastModifiedDate":"2023-10-07"},{"lineNumber":296,"author":{"gitId":"WZWren"},"content":"| **Delete** | `delete n/NAME [field]` *or* `delete id/IC_NUMBER [field]`\u003cbr\u003e e.g., `delete n/John Doe e/`                                |","lastModifiedDate":"2023-10-07"},{"lineNumber":297,"author":{"gitId":"WZWren"},"content":"| **Edit**   | `edit n/NAME [field]` *or* `edit id/IC_NUMBER [field] ... `\u003cbr\u003e e.g.,`edit n/James Lee e/jameslee@example.com`             |","lastModifiedDate":"2023-10-07"},{"lineNumber":298,"author":{"gitId":"WZWren"},"content":"| **Find**   | `find n/NAME [field]` *or* `find id/IC_NUMBER [field]`\u003cbr\u003e e.g., `find n/James Jake` *or* `find id/S872D`                  |","lastModifiedDate":"2023-10-07"},{"lineNumber":299,"author":{"gitId":"WZWren"},"content":"| **List**   | `list`                                                                                                                     |","lastModifiedDate":"2023-10-07"},{"lineNumber":300,"author":{"gitId":"WZWren"},"content":"| **Help**   | `help`                                                                                                                     |","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"nubnubyas":16,"hyc17003":33,"WZWren":69,"-":137,"kanna-1":42,"WeeeHung":3}},{"path":"docs/team/hyc17003.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hyc17003"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"hyc17003"},"content":"  layout: default.md","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"hyc17003"},"content":"  title: \"Yi Chee\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"hyc17003"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"hyc17003"},"content":"### Project: HealthSync","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"hyc17003"},"content":"HealthSync is a desktop app for managing patient details, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HealthSync can help you organise and manage patient details faster than traditional GUI apps.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"hyc17003"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"hyc17003"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"hyc17003"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"hyc17003"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"hyc17003"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"hyc17003"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"hyc17003"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"hyc17003"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dhyc17003\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"hyc17003"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"hyc17003"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"hyc17003"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"hyc17003"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"hyc17003"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"hyc17003"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"hyc17003"},"content":"  * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"hyc17003"},"content":"    * Added documentation for the feature find` [\\#72]()","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"hyc17003"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"hyc17003"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"hyc17003"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"hyc17003"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"hyc17003"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"hyc17003"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"hyc17003"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"hyc17003"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"hyc17003"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"hyc17003"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"hyc17003"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"hyc17003"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"hyc17003":46}},{"path":"docs/team/kanna-1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kanna-1"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"kanna-1"},"content":"Janssen Lau\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"### Project: HealthSync","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"HealthSync is an application designed to streamline the workflow of healthcare center frontdesk staff by allowing them to efficiently register and access patient information within 2-3 minutes. It offers a user-friendly platform that enhances patient management, appointment scheduling, and health record retrieval, ultimately improving care delivery and saving valuable time for healthcare professionals.","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"* **New Feature**: Added the ability to edit patient fields.","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"    * What it does: allows the user to edit existing patient fields. If the fields do not exist, the field will be created automatically.","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    * Justification: This feature improves the product significantly because this feature allows the user to elegantly update patient details.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"kanna-1"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkanna-1\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"    * `to be added soon `","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"kanna-1"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"        * Added documentation for the features `edit`","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"        * Added implementation details of the `edit` feature.","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        * Added non-functional requirements for the application.","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"  * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"    * `to be added soon `","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"kanna-1":43}},{"path":"docs/team/nubnubyas.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nubnubyas"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"nubnubyas"},"content":"  layout: default.md","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"nubnubyas"},"content":"  title: \"Zhang Yiheng\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"nubnubyas"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"nubnubyas"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"nubnubyas"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"nubnubyas"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"nubnubyas"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"nubnubyas"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"nubnubyas"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"nubnubyas"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"nubnubyas"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"nubnubyas"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"nubnubyas"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"nubnubyas"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"nubnubyas"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"nubnubyas"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"nubnubyas"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"nubnubyas"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"nubnubyas"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"nubnubyas"},"content":"  * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"nubnubyas"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"nubnubyas"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"nubnubyas"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"nubnubyas"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"nubnubyas"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"nubnubyas"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"nubnubyas"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"nubnubyas"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"nubnubyas"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"nubnubyas"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"nubnubyas"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"nubnubyas"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"nubnubyas"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"nubnubyas":46}},{"path":"docs/team/weeehung.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"  layout: default.md","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"  title: \"Wee Hung\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"### Project: HealthSync","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"HealthSync is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"* **New Feature**: Added fields like NRIC, Appointment and Medical Histories.","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"  * What it does: Allows for necessary fields to be included in the profile","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"  * Justification: This feature improves the product significantly because a user can now see the NRIC, appointment timings and medical history at one glance, since all information are bundled in a patient card.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing models, commands and test cases.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"* **New Feature**: Added logger tab UI to show logged profiles","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"  * What it does: Allows for logs to be pinned at the corner of the application","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"  * Justification: This feature improves the product significantly because a user can now utilise the logger like a memo.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"  * Highlights: This enhancement affects log commands.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dweeehung\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"  * Managed releases `v1.2.1` (1 release) on GitHub","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"  * Added new fields necessary for patient tracking","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"  * Updated the frontend design of application, including medical history tags and logger tabs.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"  * Wrote additional tests for existing features to increase coverage from 75% to XX% (Pull requests [\\#63](), [\\#38]())","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"    * Added documentation for the features `autosave` [\\#30](https://github.com/AY2324S1-CS2103T-T14-3/tp/pull/30)","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"    * Added Product Scope which includes target user profile and value proposition.","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    * Added user stories and sort them in terms of priority","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#74](https://github.com/AY2324S1-CS2103T-T14-3/tp/pull/74), [\\#82](https://github.com/AY2324S1-CS2103T-T14-3/tp/pull/82)","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"  * Contributed to forum discussions (examples: [#253]())","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [XX]())","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"  * New fields implemented by me are adopted by the team ([#63](https://github.com/AY2324S1-CS2103T-T14-3/tp/pull/63))","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"* **Tools**:","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"  * Utitlised JavaFx Scene Builder for building the frontend of the project ([\\#XX]())","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"WeeeHung":48}},{"path":"docs/team/wzwren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WZWren"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"WZWren"},"content":"    layout: default.md","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"WZWren"},"content":"    title: \"Wang Zhi Wren\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"WZWren"},"content":"### Project: HealthSync","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"HealthSync is an application designed to streamline the workflow of healthcare center frontdesk staff by allowing them to efficiently register and access patient information within 2-3 minutes. It offers a user-friendly platform that enhances patient management, appointment scheduling, and health record retrieval, ultimately improving care delivery and saving valuable time for healthcare professionals.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"WZWren"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"WZWren"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dT14-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dWZWren\u0026tabRepo\u003dAY2324S1-CS2103T-T14-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"WZWren"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"WZWren"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"* **Documentation for UG**:","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"WZWren"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"WZWren"},"content":"* **Documentation for DG**:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"WZWren"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"WZWren":34}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"WZWren":1,"-":185}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"nubnubyas"},"content":"    public static final String MESSAGE_INVALID_NRIC \u003d \"Please provide a valid NRIC\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"nubnubyas"},"content":"    public static final String MESSAGE_INVALID_NAME \u003d \"Please provide a valid Name\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"nubnubyas"},"content":"    public static final String MESSAGE_INVALID_NRIC_AND_NAME \u003d \"Please provide either a valid NRIC or Name\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"    public static final String MESSAGE_MISSING_IDENTIFICATION \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"            \"Missing identification! Use the n/ or id/ tag to specify the patient\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"nubnubyas"},"content":"        builder.append(\"\\nName: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"nubnubyas"},"content":"                .append(person.getName())","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"nubnubyas"},"content":"                .append(\"; NRIC: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"nubnubyas"},"content":"                .append(person.getNric())","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"nubnubyas"},"content":"                .append(\";\\n\")","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"nubnubyas"},"content":"                .append(\"Appointment: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"                .append(person.getAppointment().orElse(person.getAppointment().orElse(null)))","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"nubnubyas"},"content":"                .append(\"; Medical Histories: \");","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"nubnubyas"},"content":"        person.getMedicalHistories().forEach(builder::append);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"nubnubyas"},"content":"        builder.append(\"; Tags: \");","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nubnubyas":13,"-":48,"kanna-1":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"WZWren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the patient list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"            + \"[\" + PREFIX_APPOINTMENT + \"APPOINTMENT] \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"            + \"[\" + PREFIX_MEDICAL + \"MEDICAL_HISTORY]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"            + PREFIX_NRIC + \"S8765432A \"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"            + PREFIX_APPOINTMENT + \"2023-10-17 11:00 13:00 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"            + PREFIX_MEDICAL + \"hypochondriac \"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"            + PREFIX_MEDICAL + \"on Medicine XYZ \"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"WZWren":12,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"nubnubyas"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"nubnubyas"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"nubnubyas"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"nubnubyas"},"content":"            + \": Delete the patient identified by the full name or nric of the patient.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"nubnubyas"},"content":"            + \"Parameters: n/Name or id/Nric (must be valid)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"nubnubyas"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/John Doe or \" + COMMAND_WORD + \" id/S1234567A\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"nubnubyas"},"content":"    public static final String MESSAGE_DELETE_PERSON_FIELD_SUCCESS \u003d \"Deleted Person\u0027s field: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"nubnubyas"},"content":"    private final DeletePersonDescriptor deletePersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"nubnubyas"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"nubnubyas"},"content":"    private final Name name;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"nubnubyas"},"content":"     * @param nric of the person in the filtered person list to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"nubnubyas"},"content":"     * @param name of the person in the filtered person list to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"nubnubyas"},"content":"     * @param deletePersonDescriptor details to delete the person with","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"nubnubyas"},"content":"    public DeleteCommand(Nric nric, Name name, DeletePersonDescriptor deletePersonDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"nubnubyas"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"nubnubyas"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"nubnubyas"},"content":"        this.deletePersonDescriptor \u003d deletePersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"nubnubyas"},"content":"        Optional\u003cPerson\u003e findPersonToDelete \u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"nubnubyas"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"nubnubyas"},"content":"            findPersonToDelete \u003d findPersonToDeleteName(lastShownList);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"nubnubyas"},"content":"        } else if (nric !\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"nubnubyas"},"content":"            findPersonToDelete \u003d findPersonToDeleteIc(lastShownList);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"nubnubyas"},"content":"        Person personToDelete \u003d findPersonToDelete.get();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"nubnubyas"},"content":"        if (deletePersonDescriptor.isAllFalse()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"nubnubyas"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"nubnubyas"},"content":"            Person editedPerson \u003d createDeletePerson(personToDelete, deletePersonDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"nubnubyas"},"content":"            model.setPerson(personToDelete, editedPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"nubnubyas"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"nubnubyas"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_FIELD_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"nubnubyas"},"content":"     * Finds the person to delete by NRIC.","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"nubnubyas"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"nubnubyas"},"content":"     * @param persons list of persons in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"nubnubyas"},"content":"     * @return the person to delete.","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"nubnubyas"},"content":"     * @throws CommandException if the person is not found.","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"nubnubyas"},"content":"    public Optional\u003cPerson\u003e findPersonToDeleteIc(List\u003cPerson\u003e persons)","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"nubnubyas"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"nubnubyas"},"content":"        Optional\u003cPerson\u003e personbyNric \u003d persons.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"nubnubyas"},"content":"                .filter(person -\u003e person.getNric().equals(nric))","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"nubnubyas"},"content":"                .findFirst();","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"nubnubyas"},"content":"        if (personbyNric.isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"nubnubyas"},"content":"            return personbyNric;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"nubnubyas"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"nubnubyas"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"nubnubyas"},"content":"     * Finds the person to delete by name.","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"nubnubyas"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"nubnubyas"},"content":"     * @param persons list of persons in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"nubnubyas"},"content":"     * @return the person to delete.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"nubnubyas"},"content":"     * @throws CommandException if the person is not found.","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"nubnubyas"},"content":"    public Optional\u003cPerson\u003e findPersonToDeleteName(List\u003cPerson\u003e persons)","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"nubnubyas"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"nubnubyas"},"content":"        Optional\u003cPerson\u003e personbyName \u003d persons.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"nubnubyas"},"content":"                .filter(person -\u003e person.getName().equals(name))","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"nubnubyas"},"content":"                .findFirst();","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"nubnubyas"},"content":"        if (personbyName.isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"nubnubyas"},"content":"            return personbyName;","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"nubnubyas"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"nubnubyas"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"nubnubyas"},"content":"        return Objects.equals(nric, otherDeleteCommand.nric)","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"nubnubyas"},"content":"                \u0026\u0026 Objects.equals(name, otherDeleteCommand.name)","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"nubnubyas"},"content":"                \u0026\u0026 Objects.equals(deletePersonDescriptor, otherDeleteCommand.deletePersonDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"nubnubyas"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"nubnubyas"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"nubnubyas"},"content":"                .add(\"deletePersonDescriptor\", deletePersonDescriptor)","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"nubnubyas"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"nubnubyas"},"content":"     * edited with {@code deletePersonDescriptor}.","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"nubnubyas"},"content":"    public static Person createDeletePerson(Person personToEdit, DeletePersonDescriptor deletePersonDescriptor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"nubnubyas"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"nubnubyas"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"nubnubyas"},"content":"        Nric updatedNric \u003d personToEdit.getNric();","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"nubnubyas"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"nubnubyas"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"nubnubyas"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"nubnubyas"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"nubnubyas"},"content":"        Set\u003cMedicalHistory\u003e updatedMedicalHistories \u003d personToEdit.getMedicalHistories();","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"nubnubyas"},"content":"        Appointment updatedAppointment \u003d personToEdit.getAppointment().isPresent() ? personToEdit.getAppointment().get()","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"nubnubyas"},"content":"                : null;","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"nubnubyas"},"content":"        if (deletePersonDescriptor.getAppointment()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"nubnubyas"},"content":"            updatedAppointment \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"nubnubyas"},"content":"        return new Person(updatedName, updatedNric, updatedPhone, updatedEmail, updatedAddress, updatedAppointment,","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"nubnubyas"},"content":"                updatedMedicalHistories, updatedTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"nubnubyas"},"content":"     * Stores the boolean value of the fields that is to be deleted from a person in","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"nubnubyas"},"content":"     * the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"nubnubyas"},"content":"    public static class DeletePersonDescriptor {","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"nubnubyas"},"content":"        private boolean phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"nubnubyas"},"content":"        private boolean medicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"nubnubyas"},"content":"        private boolean appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"nubnubyas"},"content":"        private boolean email;","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"nubnubyas"},"content":"        private boolean address;","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"nubnubyas"},"content":"        private boolean tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"nubnubyas"},"content":"        public DeletePersonDescriptor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"nubnubyas"},"content":"        public void setPhone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"nubnubyas"},"content":"            this.phone \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"nubnubyas"},"content":"        public boolean getPhone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"nubnubyas"},"content":"            return this.phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"nubnubyas"},"content":"        public void setEmail() {","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"nubnubyas"},"content":"            this.email \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"nubnubyas"},"content":"        public boolean getEmail() {","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"nubnubyas"},"content":"            return this.email;","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"nubnubyas"},"content":"        public void setAddress() {","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"nubnubyas"},"content":"            this.address \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"nubnubyas"},"content":"        public boolean getAddress() {","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"nubnubyas"},"content":"            return this.address;","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"nubnubyas"},"content":"        public void setMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"nubnubyas"},"content":"            this.medicalHistory \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"nubnubyas"},"content":"        public boolean getMedicalHistory() {","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"nubnubyas"},"content":"            return this.medicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"nubnubyas"},"content":"        public void setAppointment() {","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"nubnubyas"},"content":"            this.appointment \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"nubnubyas"},"content":"        public boolean getAppointment() {","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"nubnubyas"},"content":"            return this.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"nubnubyas"},"content":"        public void setTags() {","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"nubnubyas"},"content":"            this.tags \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"nubnubyas"},"content":"        public boolean getTags() {","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"nubnubyas"},"content":"            return this.tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"nubnubyas"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"nubnubyas"},"content":"         * Returns true if all fields are false.","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"nubnubyas"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"nubnubyas"},"content":"        public boolean isAllFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"nubnubyas"},"content":"            return !(phone || email || address || tags || medicalHistory || appointment);","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"nubnubyas"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"nubnubyas"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"nubnubyas"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":247,"author":{"gitId":"nubnubyas"},"content":"                return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"nubnubyas"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"nubnubyas"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"nubnubyas"},"content":"            if (!(other instanceof DeletePersonDescriptor)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"nubnubyas"},"content":"                return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"nubnubyas"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"nubnubyas"},"content":"            DeletePersonDescriptor otherDeletePersonDescriptor \u003d (DeletePersonDescriptor) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"nubnubyas"},"content":"            return Objects.equals(phone, otherDeletePersonDescriptor.phone)","lastModifiedDate":"2023-10-16"},{"lineNumber":257,"author":{"gitId":"nubnubyas"},"content":"                    \u0026\u0026 Objects.equals(email, otherDeletePersonDescriptor.email)","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"nubnubyas"},"content":"                    \u0026\u0026 Objects.equals(address, otherDeletePersonDescriptor.address)","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"nubnubyas"},"content":"                    \u0026\u0026 Objects.equals(tags, otherDeletePersonDescriptor.tags)","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"nubnubyas"},"content":"                    \u0026\u0026 Objects.equals(medicalHistory, otherDeletePersonDescriptor.medicalHistory)","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"nubnubyas"},"content":"                    \u0026\u0026 Objects.equals(appointment, otherDeletePersonDescriptor.appointment);","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":264,"author":{"gitId":"nubnubyas"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":265,"author":{"gitId":"nubnubyas"},"content":"        public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"nubnubyas"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"nubnubyas"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"nubnubyas"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"nubnubyas"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"nubnubyas"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"nubnubyas"},"content":"                    .add(\"medicalHistory\", medicalHistory)","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"nubnubyas"},"content":"                    .add(\"appointment\", appointment)","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"nubnubyas"},"content":"                    .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"nubnubyas"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nubnubyas":217,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"            + \"by the name or IC of the patient.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"kanna-1"},"content":"            + \"Format: edit n/NAME or id/IC_NUMBER [Fields] ...\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"            + PREFIX_PHONE + \"91234567\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided. Example: p/98742122.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"This person does not exist in the address book.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"    public static final String MESSAGE_INCONSISTENT_NAME_AND_ID \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"            \"Both a name and an NRIC were provided, but they do not match the same person.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"    private final Name name;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"     * @param name of the person in the filtered person list to edit","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"     * @param nric of the person in the filtered person list to edit","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    public EditCommand(Name name, Nric nric, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"        Optional\u003cPerson\u003e personOptional \u003d findPersonToEdit(lastShownList);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        if (personOptional.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"        Person personToEdit \u003d personOptional.get();","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"     * Finds the person to edit based on the provided name and/or NRIC.","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"     * @param persons A list of persons to search within.","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"     * @return An Optional containing the person to edit, if found, or an empty Optional if not found.","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"     * @throws CommandException if there is inconsistency between the provided name and NRIC.","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"    public Optional\u003cPerson\u003e findPersonToEdit(List\u003cPerson\u003e persons) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"        if (name !\u003d null \u0026\u0026 nric !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"            // Search for a person by name and NRIC","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"            Optional\u003cPerson\u003e personByName \u003d persons.stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"                    .filter(person -\u003e person.getName().equals(name))","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"                    .findFirst();","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"            Optional\u003cPerson\u003e personByNric \u003d persons.stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"                    .filter(person -\u003e person.getNric().equals(nric))","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"                    .findFirst();","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"            // Check if both Optional instances are not empty, and return the one that represents the same person","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"            if (personByName.isPresent() \u0026\u0026 personByNric.isPresent() \u0026\u0026 personByName.get() \u003d\u003d personByNric.get()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"                return personByName;","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"            } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"                throw new CommandException(MESSAGE_INCONSISTENT_NAME_AND_ID);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"            return persons.stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"                    .filter(person -\u003e person.getName().equals(name))","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"                    .findFirst();","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"        } else if (nric !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"            return persons.stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"                    .filter(person -\u003e person.getNric().equals(nric))","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"                    .findFirst();","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"        Appointment updatedAppointment \u003d editPersonDescriptor.getAppointment()","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"                .orElse(personToEdit.getAppointment().orElse(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"        Set\u003cMedicalHistory\u003e updatedMedicalHistories \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"                editPersonDescriptor.getMedicalHistories().orElse((personToEdit.getMedicalHistories()));","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"kanna-1"},"content":"        return new Person(updatedName, updatedNric, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"                updatedAppointment, updatedMedicalHistories, updatedTags);","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"        // Check if both the name and nric are equal for equality check","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"kanna-1"},"content":"        boolean isNameEqual \u003d Objects.equals(name, otherEditCommand.name);","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"kanna-1"},"content":"        boolean isNricEqual \u003d Objects.equals(nric, otherEditCommand.nric);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"kanna-1"},"content":"        return isNameEqual \u0026\u0026 isNricEqual;","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"kanna-1"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"kanna-1"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"kanna-1"},"content":"        private Nric nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"kanna-1"},"content":"        private Appointment appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"kanna-1"},"content":"        private Set\u003cMedicalHistory\u003e medicalHistories;","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"kanna-1"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":210,"author":{"gitId":"kanna-1"},"content":"            setAppointment(toCopy.appointment);","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"kanna-1"},"content":"            setMedicalHistories(toCopy.medicalHistories);","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"kanna-1"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"kanna-1"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"kanna-1"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"kanna-1"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"kanna-1"},"content":"        public void setAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"kanna-1"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":257,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"kanna-1"},"content":"        public Optional\u003cAppointment\u003e getAppointment() {","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"kanna-1"},"content":"            return Optional.ofNullable(appointment);","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"kanna-1"},"content":"        /**","lastModifiedDate":"2023-10-16"},{"lineNumber":264,"author":{"gitId":"kanna-1"},"content":"         * Sets {@code medicalHistories} to this object\u0027s {@code medicalHistories}.","lastModifiedDate":"2023-10-16"},{"lineNumber":265,"author":{"gitId":"kanna-1"},"content":"         * A defensive copy of {@code medicalHistories} is used internally.","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"kanna-1"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"kanna-1"},"content":"        public void setMedicalHistories(Set\u003cMedicalHistory\u003e medicalHistories) {","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"kanna-1"},"content":"            this.medicalHistories \u003d (medicalHistories !\u003d null) ? new HashSet\u003c\u003e(medicalHistories) : null;","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"kanna-1"},"content":"        /**","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"kanna-1"},"content":"         * Returns an unmodifiable medicalHistories set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"kanna-1"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"kanna-1"},"content":"         * Returns {@code Optional#empty()} if {@code medicalHistories} is null.","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"kanna-1"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"kanna-1"},"content":"        public Optional\u003cSet\u003cMedicalHistory\u003e\u003e getMedicalHistories() {","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"kanna-1"},"content":"            return (medicalHistories !\u003d null)","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"kanna-1"},"content":"                    ? Optional.of(Collections.unmodifiableSet(medicalHistories)) : Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":311,"author":{"gitId":"kanna-1"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditPersonDescriptor.nric)","lastModifiedDate":"2023-10-16"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":315,"author":{"gitId":"kanna-1"},"content":"                    \u0026\u0026 Objects.equals(appointment, otherEditPersonDescriptor.appointment)","lastModifiedDate":"2023-10-16"},{"lineNumber":316,"author":{"gitId":"kanna-1"},"content":"                    \u0026\u0026 Objects.equals(medicalHistories, otherEditPersonDescriptor.medicalHistories)","lastModifiedDate":"2023-10-16"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":320,"author":{"gitId":"kanna-1"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"kanna-1"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"kanna-1"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"kanna-1"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"kanna-1"},"content":"            return CollectionUtil.isAnyNonNull(phone, email, address, medicalHistories, tags, appointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":331,"author":{"gitId":"kanna-1"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2023-10-16"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":335,"author":{"gitId":"kanna-1"},"content":"                    .add(\"appointment\", appointment)","lastModifiedDate":"2023-10-16"},{"lineNumber":336,"author":{"gitId":"kanna-1"},"content":"                    .add(\"medicalHistories\", medicalHistories)","lastModifiedDate":"2023-10-16"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":210,"kanna-1":131}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"hyc17003"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"hyc17003"},"content":"import seedu.address.model.person.IdContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"hyc17003"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"hyc17003"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"hyc17003"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" n/alice bob charlie \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"hyc17003"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" id/S872D\";","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"hyc17003"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"hyc17003"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"hyc17003"},"content":"        this.predicate \u003d namePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"hyc17003"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"hyc17003"},"content":"    public FindCommand(IdContainsKeywordsPredicate idPredicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"hyc17003"},"content":"        this.predicate \u003d idPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hyc17003":14,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"WZWren"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"WZWren"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC,","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_APPOINTMENT, PREFIX_MEDICAL, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_NRIC, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"                PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_APPOINTMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"        Set\u003cMedicalHistory\u003e medHistory \u003d ParserUtil.parseMedicals(argMultimap.getAllValues(PREFIX_MEDICAL));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"        Appointment appointment \u003d ParserUtil.parseAppointmentIfExists(argMultimap.getValue(PREFIX_APPOINTMENT));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"        Person person \u003d new Person(name, nric, phone, email, address, appointment, medHistory, tagList);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"WZWren":15,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"nubnubyas"},"content":"     * Returns true if the {@code prefix} exists in this ArgumentMultimap.","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"nubnubyas"},"content":"    public boolean prefixExist(Prefix prefix) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"nubnubyas"},"content":"        return argMultimap.containsKey(prefix);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"nubnubyas":7,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"id/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    public static final Prefix PREFIX_MEDICAL \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"ap/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":14,"kanna-1":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"nubnubyas"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.logic.commands.DeleteCommand.DeletePersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"nubnubyas"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"nubnubyas"},"content":"     * DeleteCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"nubnubyas"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"nubnubyas"},"content":"            requireNonNull(args);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"nubnubyas"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE,","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"nubnubyas"},"content":"                    PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_APPOINTMENT, PREFIX_MEDICAL, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"nubnubyas"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"nubnubyas"},"content":"                    PREFIX_ADDRESS, PREFIX_APPOINTMENT, PREFIX_MEDICAL, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"nubnubyas"},"content":"            boolean hasNamePrefix \u003d argMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"nubnubyas"},"content":"            boolean hasNricPrefix \u003d argMultimap.getValue(PREFIX_NRIC).isPresent();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"nubnubyas"},"content":"            Name name \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"nubnubyas"},"content":"            Nric nric \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"nubnubyas"},"content":"            if (hasNamePrefix) {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"nubnubyas"},"content":"                name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"nubnubyas"},"content":"            } else if (hasNricPrefix) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"nubnubyas"},"content":"                nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"nubnubyas"},"content":"            } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"nubnubyas"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"nubnubyas"},"content":"                        DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"nubnubyas"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"nubnubyas"},"content":"            DeletePersonDescriptor deletePersonDescriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"nubnubyas"},"content":"            if (argMultimap.prefixExist(PREFIX_APPOINTMENT)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"nubnubyas"},"content":"                deletePersonDescriptor.setAppointment();","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"nubnubyas"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"nubnubyas"},"content":"            return new DeleteCommand(nric, name, deletePersonDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"nubnubyas"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"nubnubyas"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nubnubyas":47,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICAL;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"                        PREFIX_ADDRESS, PREFIX_APPOINTMENT, PREFIX_MEDICAL, PREFIX_TAG);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"        boolean hasNamePrefix \u003d argMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"        boolean hasNricPrefix \u003d argMultimap.getValue(PREFIX_NRIC).isPresent();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"        if (!hasNamePrefix \u0026\u0026 !hasNricPrefix) {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"kanna-1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"                PREFIX_ADDRESS, PREFIX_APPOINTMENT);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        Name name \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        Nric nric \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"        if (hasNamePrefix) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"        if (hasNricPrefix) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"            nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"                .ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"kanna-1"},"content":"        parseMedicalHistoriesForEdit(argMultimap.getAllValues(PREFIX_MEDICAL))","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"kanna-1"},"content":"                .ifPresent(editPersonDescriptor::setMedicalHistories);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"        if (argMultimap.getValue(PREFIX_APPOINTMENT).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"            Appointment appointment \u003d ParserUtil.parseAppointment(argMultimap.getValue(PREFIX_APPOINTMENT).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"            editPersonDescriptor.setAppointment(appointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"        return new EditCommand(name, nric, editPersonDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"     * Parses {@code Collection\u003cString\u003e medicalHistories} into a {@code Set\u003cMedicalHistory\u003e}","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"     * if {@code medicalHistories} is non-empty.","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"     * {@code Set\u003cMedicalHistory\u003e} containing zero tags.","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"    private Optional\u003cSet\u003cMedicalHistory\u003e\u003e parseMedicalHistoriesForEdit(Collection\u003cString\u003e medicalHistories)","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"        assert medicalHistories !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"        if (medicalHistories.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"        Collection\u003cString\u003e medicalHistorySet \u003d medicalHistories.size() \u003d\u003d 1 \u0026\u0026 medicalHistories.contains(\"\")","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"                ? Collections.emptySet() : medicalHistories;","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"        return Optional.of(ParserUtil.parseMedicals(medicalHistorySet));","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":73,"kanna-1":55}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"hyc17003"},"content":"import seedu.address.model.person.IdContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"hyc17003"},"content":"        String[] nameKeywords \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"hyc17003"},"content":"        String[] idKeywords \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"hyc17003"},"content":"        if (trimmedArgs.startsWith(\"n/\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"hyc17003"},"content":"            nameKeywords \u003d trimmedArgs.substring(2).trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"hyc17003"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"hyc17003"},"content":"        } else if (trimmedArgs.startsWith(\"id/\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"hyc17003"},"content":"            idKeywords \u003d trimmedArgs.substring(3).trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"hyc17003"},"content":"            return new FindCommand(new IdContainsKeywordsPredicate(Arrays.asList(idKeywords)));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"hyc17003"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hyc17003":10,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"     * Parses a {@code String nric} into a {@code Nric}.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"WZWren"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"kanna-1"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"     * Parses a {@code String email} into a {@code Email}.","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"kanna-1"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"WZWren"},"content":"     * Parses a {@code String appointment} into an {@code Appointment}, if it exists.","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"WZWren"},"content":"     * @throws ParseException if the given {@code appointment} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"WZWren"},"content":"    public static Appointment parseAppointmentIfExists(Optional\u003cString\u003e appointment) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"WZWren"},"content":"        if (appointment.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"WZWren"},"content":"            return null;","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"WZWren"},"content":"        return parseAppointment(appointment.get());","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"     * Parses a {@code String appointment} into an {@code Appointment}.","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"WZWren"},"content":"     * @throws ParseException if the given {@code appointment} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"    public static Appointment parseAppointment(String appointment) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"kanna-1"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"        String trimmedAppointment \u003d appointment.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"        if (!Appointment.isValidAppointment(trimmedAppointment)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"        return new Appointment(trimmedAppointment);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"WZWren"},"content":"     * Parses a {@code String medHistory} into a {@code MedicalHistory}.","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"WZWren"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"WZWren"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"WZWren"},"content":"     * @throws ParseException if the given {@code medHistory} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"WZWren"},"content":"    public static MedicalHistory parseMedical(String medHistory) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"WZWren"},"content":"        requireNonNull(medHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"WZWren"},"content":"        String trimmedHistory \u003d medHistory.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"WZWren"},"content":"        if (!MedicalHistory.isValidMedicalHistory(trimmedHistory)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"WZWren"},"content":"            throw new ParseException(MedicalHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"WZWren"},"content":"        return new MedicalHistory(trimmedHistory);","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"WZWren"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"WZWren"},"content":"     * Parses {@code Collection\u003cString\u003e medHistories} into {@code Set\u003cMedicalHistory\u003e}.","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"WZWren"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"WZWren"},"content":"    public static Set\u003cMedicalHistory\u003e parseMedicals(Collection\u003cString\u003e medHistories) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"WZWren"},"content":"        requireNonNull(medHistories);","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"WZWren"},"content":"        final Set\u003cMedicalHistory\u003e historiesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"WZWren"},"content":"        for (String historyName : medHistories) {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"WZWren"},"content":"            historiesSet.add(parseMedical(historyName));","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"WZWren"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"WZWren"},"content":"        return historiesSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"WZWren":36,"-":120,"kanna-1":43}},{"path":"src/main/java/seedu/address/model/person/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":" * Represents a Person\u0027s Appointment in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"nubnubyas"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"nubnubyas"},"content":" * {@link #isValidAppointment(String)}","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"public class Appointment {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"nubnubyas"},"content":"            \"Appointment should be in the format YYYY-MM-DD HH:MM HH:MM, and it should not be blank\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    /*","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"nubnubyas"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-(0?[1-9]|1[0-2])-(0?[1-9]|[1-2]\\\\d|3[0-1])\"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"nubnubyas"},"content":"            + \" (2[0-3]:[0-5]?\\\\d|[0-1]?\\\\d:[0-5]?\\\\d) (2[0-3]:[0-5]?\\\\d|[0-1]?\\\\d:[0-5]?\\\\d)\";","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"    public final String value;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"     * Constructs an {@code Appointment}.","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"     * @param appointment A valid appointment.","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"    public Appointment(String appointment) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"        checkArgument(isValidAppointment(appointment), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"        value \u003d appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"     * Returns true if a given string is a valid appointment.","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"    public static boolean isValidAppointment(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"WeeeHung"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"WeeeHung"},"content":"        return value.equals(otherAppointment.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"nubnubyas":5,"WZWren":1,"kanna-1":1,"WeeeHung":61}},{"path":"src/main/java/seedu/address/model/person/IdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hyc17003"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"hyc17003"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"hyc17003"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"hyc17003"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"hyc17003"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"hyc17003"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"hyc17003"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"hyc17003"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"hyc17003"},"content":"public class IdContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"hyc17003"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"hyc17003"},"content":"    public IdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"hyc17003"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"hyc17003"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"hyc17003"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"hyc17003"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"hyc17003"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"hyc17003"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getNric().value, keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"hyc17003"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"hyc17003"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"hyc17003"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"hyc17003"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"hyc17003"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"hyc17003"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"hyc17003"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"hyc17003"},"content":"        if (!(other instanceof IdContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"hyc17003"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"hyc17003"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"hyc17003"},"content":"        IdContainsKeywordsPredicate otherIdContainsKeywordsPredicate \u003d (IdContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"hyc17003"},"content":"        return keywords.equals(otherIdContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"hyc17003"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"hyc17003"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"hyc17003"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"hyc17003"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"hyc17003"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"hyc17003"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"hyc17003":44}},{"path":"src/main/java/seedu/address/model/person/MedicalHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":" * Represents a Person\u0027s Medical History in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMedicalHistory(String)}","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"public class MedicalHistory {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Medical History can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    /*","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"     * The first character of the Medical History must not be a whitespace,","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"    public final String value;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"     * Constructs an {@code Medical History}.","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"     * @param medicalHistory A valid Medical History.","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"    public MedicalHistory(String medicalHistory) {","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"        requireNonNull(medicalHistory);","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"        checkArgument(isValidMedicalHistory(medicalHistory), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"        value \u003d medicalHistory;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"     * Returns true if a given string is a valid Medical History.","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    public static boolean isValidMedicalHistory(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"        return \u0027[\u0027 + value + \u0027]\u0027;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"        if (!(other instanceof MedicalHistory)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"        MedicalHistory otherMedicalHistory \u003d (MedicalHistory) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"        return value.equals(otherMedicalHistory.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"WeeeHung"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"kanna-1":1,"WeeeHung":64}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"        return fullName.equalsIgnoreCase((otherName.fullName));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":63,"kanna-1":1}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":" * Represents a Person\u0027s NRIC in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"public class Nric {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"kanna-1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"NRIC can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    public final String value;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"     * Constructs an {@code Nric}.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"        value \u003d nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"        // to add more checks for a valid nric combination","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"        return value.equalsIgnoreCase((otherNric.value));","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"WeeeHung"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"WeeeHung"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"kanna-1":4,"WeeeHung":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"WZWren"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"    private final Appointment appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"    private final Set\u003cMedicalHistory\u003e medicalHistories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    public Person(Name name, Nric nric, Phone phone, Email email, Address address, Appointment appointment,","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"                  Set\u003cMedicalHistory\u003e medicalHistories, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"        requireAllNonNull(name, nric, phone, email, address, medicalHistories, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"        this.medicalHistories.addAll(medicalHistories);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"        return nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"WZWren"},"content":"    public Optional\u003cAppointment\u003e getAppointment() {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"WZWren"},"content":"        return Optional.ofNullable(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"WeeeHung"},"content":"     * Returns an immutable medical history set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"WeeeHung"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"WeeeHung"},"content":"    public Set\u003cMedicalHistory\u003e getMedicalHistories() {","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"WeeeHung"},"content":"        return Collections.unmodifiableSet(medicalHistories);","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"WeeeHung"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric)","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"WZWren"},"content":"                \u0026\u0026 Objects.equals(appointment, otherPerson.appointment)","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"WeeeHung"},"content":"                \u0026\u0026 medicalHistories.equals(otherPerson.medicalHistories)","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"WeeeHung"},"content":"        return Objects.hash(name, nric, phone, email, address, appointment, medicalHistories, tags);","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"WeeeHung"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"WeeeHung"},"content":"                .add(\"appointment\", appointment)","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"WeeeHung"},"content":"                .add(\"medicalHistories\", medicalHistories)","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"WZWren":6,"-":114,"WeeeHung":28}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"    // manual input of sample data to populate app","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Nric(\"T0123456F\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"                new Appointment(\"2023-08-08 10:00 12:00\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"WZWren"},"content":"                getMedicalHistorySet(),","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"            new Person(new Name(\"Bernice Yu\"), new Nric(\"S0123452F\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"                    new Appointment(\"2023-08-08 12:00 14:00\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"                    getMedicalHistorySet(\"Diabetes\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Nric(\"T0123456Y\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"                    null,","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"                    getMedicalHistorySet(\"AB+ Blood\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"            new Person(new Name(\"David Li\"), new Nric(\"T0123436F\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"                    null,","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"                    getMedicalHistorySet(),","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Nric(\"S0123456F\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"                    new Appointment(\"2023-08-08 14:00 16:00\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"                    getMedicalHistorySet(),","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Nric(\"T0128456F\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"                    null,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"WZWren"},"content":"                    getMedicalHistorySet(\"Currently on XYZ Medication\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"WeeeHung"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"WeeeHung"},"content":"    public static Set\u003cMedicalHistory\u003e getMedicalHistorySet(String... strings) {","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"WeeeHung"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"WeeeHung"},"content":"                .map(MedicalHistory::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"WeeeHung"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"WZWren":11,"-":54,"WeeeHung":26}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMedicalHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":" * Jackson-friendly version of {@link MedicalHistory}.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"class JsonAdaptedMedicalHistory {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    private final String medicalHistory;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    public JsonAdaptedMedicalHistory(String medicalHistory) {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"        this.medicalHistory \u003d medicalHistory;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"    public JsonAdaptedMedicalHistory(MedicalHistory source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"        medicalHistory \u003d source.value;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"    @JsonValue","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"    public String getMedicalHistoryName() {","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"        return medicalHistory;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"    public MedicalHistory toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"        if (!MedicalHistory.isValidMedicalHistory(medicalHistory)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"            throw new IllegalValueException(MedicalHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"        return new MedicalHistory(medicalHistory);","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"WeeeHung":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"    private final String nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"    private final String appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"    private final List\u003cJsonAdaptedMedicalHistory\u003e medicalHistories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"                             @JsonProperty(\"address\") String address, @JsonProperty(\"appointment\") String appointment,","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"                             @JsonProperty(\"medicalHistories\") List\u003cJsonAdaptedMedicalHistory\u003e medicalHistories,","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"        if (medicalHistories !\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"            this.medicalHistories.addAll(medicalHistories);","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"    public JsonAdaptedPerson(String name,","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"                             String phone,","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"WeeeHung"},"content":"                             String email,","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"WeeeHung"},"content":"                             String address,","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"WeeeHung"},"content":"                             List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"WeeeHung"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"WeeeHung"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"WeeeHung"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"WeeeHung"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"WeeeHung"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"WeeeHung"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"WeeeHung"},"content":"        this.nric \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"WeeeHung"},"content":"        this.appointment \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"WeeeHung"},"content":"        nric \u003d source.getNric() !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"WeeeHung"},"content":"            ? source.getNric().value","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"WeeeHung"},"content":"            : null;","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"WZWren"},"content":"        appointment \u003d source.getAppointment().isPresent()","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"WZWren"},"content":"            ? source.getAppointment().get().value","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"WeeeHung"},"content":"            : null;","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"WeeeHung"},"content":"        medicalHistories.addAll(source.getMedicalHistories().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"WeeeHung"},"content":"                .map(JsonAdaptedMedicalHistory::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"WeeeHung"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"WeeeHung"},"content":"        final List\u003cMedicalHistory\u003e personMedicalHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"WeeeHung"},"content":"        for (JsonAdaptedMedicalHistory medicalHistory : medicalHistories) {","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"WeeeHung"},"content":"            personMedicalHistory.add(medicalHistory.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"WeeeHung"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"WeeeHung"},"content":"            System.out.println(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"WeeeHung"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"WeeeHung"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"WeeeHung"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"WeeeHung"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"WeeeHung"},"content":"        final Set\u003cMedicalHistory\u003e modelMedicalHistories \u003d new HashSet\u003c\u003e(personMedicalHistory);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"WZWren"},"content":"        if (appointment !\u003d null \u0026\u0026 !Appointment.isValidAppointment(appointment)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"WeeeHung"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":164,"author":{"gitId":"WeeeHung"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"WZWren"},"content":"        final Appointment modelAppointment \u003d appointment \u003d\u003d null ? null : new Appointment(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"WeeeHung"},"content":"        return new Person(modelName, modelNric, modelPhone, modelEmail, modelAddress, modelAppointment,","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"WeeeHung"},"content":"                modelMedicalHistories, modelTags);","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"WZWren":4,"-":106,"WeeeHung":61}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"    private Label nric;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"    private Label appointment;","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"    private FlowPane medicalHistories;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"        person.getAppointment().ifPresentOrElse((appt) -\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"                appointment.setText(appt.value), () -\u003e appointment.setText(\"No appointment found.\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"        person.getMedicalHistories().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"                .sorted(Comparator.comparing(medicalHistory -\u003e medicalHistory.value))","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"                .forEach(medicalHistory -\u003e medicalHistories.getChildren().add(new Label(medicalHistory.value)));","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"WZWren":2,"-":56,"WeeeHung":10}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"kanna-1"},"content":"#medicalHistories {","lastModifiedDate":"2023-10-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"kanna-1"},"content":"#medicalHistories .label {","lastModifiedDate":"2023-10-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":350,"kanna-1":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"         title\u003d\"Health Sync\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":59,"kanna-1":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"        \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"      \u003cFlowPane fx:id\u003d\"medicalHistories\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"      \u003cLabel fx:id\u003d\"appointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointment\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":35,"WeeeHung":3}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"nubnubyas"},"content":"        String deleteCommand \u003d \"delete n/invalid name\";","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"nubnubyas"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_NAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"WZWren"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + NRIC_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + APPOINTMENT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nubnubyas":4,"WZWren":2,"-":169,"kanna-1":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"    public static final String VALID_NRIC_AMY \u003d \"T7243948H\";","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S5210654J\";","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"    public static final String VALID_APPOINTMENT \u003d \"2023-01-01 06:00 08:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"    public static final String VALID_MEDICALHISTORY \u003d \"cancer\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"    public static final String VALID_NRIC \u003d \"S2829102B\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"kanna-1"},"content":"    public static final String APPOINTMENT_DESC_BOB \u003d \" \" + PREFIX_APPOINTMENT + VALID_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"    public static final String APPOINTMENT_DESC_AMY \u003d \" \" + PREFIX_APPOINTMENT + VALID_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"WZWren"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC; // empty string not allowed for NRICs","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"WZWren":6,"-":127,"kanna-1":6}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"nubnubyas"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.logic.commands.DeleteCommand.DeletePersonDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"nubnubyas"},"content":"    private Name defaultName \u003d new Name(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"nubnubyas"},"content":"    private Nric defaultNric \u003d new Nric(PersonBuilder.DEFAULT_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"nubnubyas"},"content":"    private DeletePersonDescriptor defaultDescriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"nubnubyas"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"nubnubyas"},"content":"        Person personToDelete \u003d new PersonBuilder().withName(\"Amy Bee\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"nubnubyas"},"content":"        model.addPerson(personToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"nubnubyas"},"content":"        Name name \u003d personToDelete.getName();","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(null, name, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"nubnubyas"},"content":"    public void execute_validNricUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"nubnubyas"},"content":"        Person personToDelete \u003d new PersonBuilder().withNric(\"S1234567E\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"nubnubyas"},"content":"        model.addPerson(personToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"nubnubyas"},"content":"        Nric nric \u003d personToDelete.getNric();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(nric, null, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"nubnubyas"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"nubnubyas"},"content":"    public void execute_invalidName_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"nubnubyas"},"content":"        Name invalidName \u003d new Name(\"Does Not Exist\");","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand command \u003d new DeleteCommand(null, invalidName, new DeletePersonDescriptor());","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"nubnubyas"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_NAME, () -\u003e command.execute(model));","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"nubnubyas"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"nubnubyas"},"content":"    public void execute_invalidNric_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"nubnubyas"},"content":"        Nric invalidNric \u003d new Nric(\"S000000X\");","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand command \u003d new DeleteCommand(invalidNric, null, new DeletePersonDescriptor());","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"nubnubyas"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_NRIC, () -\u003e command.execute(model));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"nubnubyas"},"content":"    public void execute_deleteFields_success() throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"nubnubyas"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"nubnubyas"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setAppointment();","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand command \u003d new DeleteCommand(firstPerson.getNric(), null, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"nubnubyas"},"content":"        command.execute(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"nubnubyas"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(editedPerson.getAppointment().isEmpty());","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"nubnubyas"},"content":"    public void deletePersonDescriptor_setterMethods() {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"nubnubyas"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setAppointment();","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setAddress();","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setEmail();","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setMedicalHistory();","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setPhone();","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setTags();","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.getAppointment());","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.getAddress());","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.getEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.getMedicalHistory());","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.getPhone());","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.getTags());","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"nubnubyas"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"nubnubyas"},"content":"    public void deletePersonDescriptor_isAllFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"nubnubyas"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.isAllFalse());","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setAppointment();","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"nubnubyas"},"content":"        assertFalse(descriptor.isAllFalse());","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":131,"author":{"gitId":"nubnubyas"},"content":"    public void equalsDeleteCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(defaultNric, null, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(null, defaultName, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(defaultNric, null, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"nubnubyas"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteThirdCommand \u003d new DeleteCommand(null, new Name(\"Bob\"), defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"nubnubyas"},"content":"        assertFalse(deleteSecondCommand.equals(deleteThirdCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"nubnubyas"},"content":"    public void equalsDeletePersonDescriptor() {","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"nubnubyas"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"nubnubyas"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.equals(descriptor));","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"nubnubyas"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"nubnubyas"},"content":"        DeletePersonDescriptor descriptorCopy \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"nubnubyas"},"content":"        assertTrue(descriptor.equals(descriptorCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"nubnubyas"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"nubnubyas"},"content":"        assertFalse(descriptor.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"nubnubyas"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"nubnubyas"},"content":"        assertFalse(descriptor.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"nubnubyas"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"nubnubyas"},"content":"        DeletePersonDescriptor descriptorDifferent \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"nubnubyas"},"content":"        descriptorDifferent.setAddress();","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"nubnubyas"},"content":"        assertFalse(descriptor.equals(descriptorDifferent));","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(defaultNric, defaultName, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"nubnubyas"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{nric\u003d\" + defaultNric + \", \" + \"name\u003d\" + defaultName","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"nubnubyas"},"content":"                + \", \"","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"nubnubyas"},"content":"                + \"deletePersonDescriptor\u003d\" + defaultDescriptor + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nubnubyas":97,"-":90}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for the EditCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"kanna-1"},"content":"        Person person \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(person);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        Person editedPerson \u003d personInList.withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(person.getName().toString()),","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"kanna-1"},"content":"                new Nric(person.getNric().toString()), descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"        expectedModel.setPerson(person, editedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"        Person editedPerson \u003d personInList.withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(lastPerson.getName().toString()), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"    public void findPersonToEdit_personFoundByName_returnPersonOptional() throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"        Person person \u003d new PersonBuilder().withName(\"John Doe\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"        persons.add(person);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(\"John Doe\"), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"kanna-1"},"content":"        Optional\u003cPerson\u003e personOptional \u003d editCommand.findPersonToEdit(persons);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"kanna-1"},"content":"        assertEquals(person, personOptional.get());","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"    public void findPersonToEdit_personFoundByNric_returnPersonOptional() throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"        Person person \u003d new PersonBuilder().withNric(\"S1223111B\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"        persons.add(person);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(null, new Nric(\"S1223111B\"), descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"        Optional\u003cPerson\u003e personOptional \u003d editCommand.findPersonToEdit(persons);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"        assertEquals(person, personOptional.get());","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(\"Name\"), null, editPersonDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{name\u003dName, nric\u003dnull\" + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"        assertFalse(descriptor.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"    public void equals_differentTypes_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"        assertFalse(editCommand.equals(5)); // Different type","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"    public void equals_equalEditPersonDescriptors_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor1 \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor2 \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"        assertTrue(descriptor1.equals(descriptor2));","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"    public void equals_unequalEditPersonDescriptors_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor1 \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor2 \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"        descriptor1.setName(new Name(\"Alice\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"        assertFalse(descriptor1.equals(descriptor2)); // Different name","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"kanna-1"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"kanna-1"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(\"John Doe\"), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"kanna-1"},"content":"        assertTrue(editCommand.equals(editCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"kanna-1"},"content":"    public void findPersonToEdit_inconsistentNameAndID_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"kanna-1"},"content":"        Person john \u003d new PersonBuilder().withName(\"John Doe\").withNric(\"S1234567A\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"kanna-1"},"content":"        Person jane \u003d new PersonBuilder().withName(\"Jane Smith\").withNric(\"S7654321B\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(\"John Doe\"), new Nric(\"S7654321B\"), descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"        // Add persons to a list","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"kanna-1"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"kanna-1"},"content":"        persons.add(john);","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"kanna-1"},"content":"        persons.add(jane);","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"kanna-1"},"content":"        String expectedMessage \u003d EditCommand.MESSAGE_INCONSISTENT_NAME_AND_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"kanna-1"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e editCommand.findPersonToEdit(persons));","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"kanna-1"},"content":"    public void execute_personNotFound_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(\"NonExistentName\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(new Name(\"NonExistentName\"), null, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"kanna-1"},"content":"        // The expected CommandException should be thrown with the specified message","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"kanna-1"},"content":"        assertThrows(CommandException.class, () -\u003e editCommand.execute(model), EditCommand.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"kanna-1"},"content":"    public void execute_cannotFindPerson_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"kanna-1"},"content":"        EditCommand editCommand \u003d new EditCommand(null, null, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"kanna-1"},"content":"        Person john \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"kanna-1"},"content":"        Person jane \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"kanna-1"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"kanna-1"},"content":"        personList.add(john);","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"kanna-1"},"content":"        personList.add(jane);","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"kanna-1"},"content":"        Optional\u003cPerson\u003e person \u003d editCommand.findPersonToEdit(personList);","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"kanna-1"},"content":"        assertFalse(person.isPresent());","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"-":92,"kanna-1":109}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"kanna-1"},"content":"        System.out.println(DESC_AMY);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"kanna-1"},"content":"        System.out.println(descriptorWithSameValues);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"                + editPersonDescriptor.getNric().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", appointment\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"                + editPersonDescriptor.getAppointment().orElse(null) + \", medicalHistories\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"                + editPersonDescriptor.getMedicalHistories().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"-":69,"kanna-1":7}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"hyc17003"},"content":"import seedu.address.model.person.IdContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"hyc17003"},"content":"    public void nameEquals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"hyc17003"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"hyc17003"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"hyc17003"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"hyc17003"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"hyc17003"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"hyc17003"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"hyc17003"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"hyc17003"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"hyc17003"},"content":"    public void idEquals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"hyc17003"},"content":"        IdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"hyc17003"},"content":"                new IdContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"hyc17003"},"content":"        IdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"hyc17003"},"content":"                new IdContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"hyc17003"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"hyc17003"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"hyc17003"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"hyc17003"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"hyc17003"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"hyc17003"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"hyc17003"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hyc17003":29,"-":90}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"        String basicCommandString \u003d NAME_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"                + APPOINTMENT_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"WZWren"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + basicCommandString + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"WZWren"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"WZWren"},"content":"                basicCommandString + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"WZWren"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"WZWren"},"content":"        // multiple NRICs","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"WZWren"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"WZWren"},"content":"                validExpectedPersonString","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"WZWren"},"content":"                        + PHONE_DESC_AMY + NRIC_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"WZWren"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"WZWren"},"content":"                        PREFIX_NAME, PREFIX_NRIC, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"WZWren"},"content":"        // invalid nric","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"WZWren"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"WZWren"},"content":"        // invalid nric","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"WZWren"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"WZWren"},"content":"        // zero tags, appointments \u0026 medical histories","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"WZWren"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withMedical().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"WZWren"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"kanna-1"},"content":"                NAME_DESC_AMY + NRIC_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"kanna-1"},"content":"                        + APPOINTMENT_DESC_AMY,","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"WZWren"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"WZWren"},"content":"        // invalid nric","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_NRIC_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"WZWren"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"WZWren"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"WZWren"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"WZWren"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"WZWren"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + NRIC_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"WZWren"},"content":"                + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"WZWren"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + NRIC_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"WZWren"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"WZWren":47,"-":173,"kanna-1":6}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.logic.commands.DeleteCommand.DeletePersonDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"nubnubyas"},"content":"                DeleteCommand.COMMAND_WORD + \" n/\" + PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"nubnubyas"},"content":"        assertEquals(new DeleteCommand(null,","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"nubnubyas"},"content":"                new Name(PersonBuilder.DEFAULT_NAME), new DeletePersonDescriptor()), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"            + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"        assertEquals(new EditCommand(new Name(\"Amy Bee\"), null, descriptor), command); }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"hyc17003"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"nubnubyas"},"content":"        String expectedString \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"nubnubyas"},"content":"        assertThrows(ParseException.class, expectedString, () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nubnubyas":7,"hyc17003":1,"-":90,"kanna-1":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.logic.commands.DeleteCommand.DeletePersonDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"nubnubyas"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"nubnubyas"},"content":" * variations","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"nubnubyas"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"nubnubyas"},"content":" * the","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"nubnubyas"},"content":"    private DeletePersonDescriptor defaultDescriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"nubnubyas"},"content":"    private Name defaultName \u003d new Name(PersonBuilder.DEFAULT_NAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"nubnubyas"},"content":"    private Nric defaultNric \u003d new Nric(PersonBuilder.DEFAULT_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"nubnubyas"},"content":"    public void test_parse_validName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"nubnubyas"},"content":"        String userString \u003d \" n/\" + PersonBuilder.DEFAULT_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(null, defaultName, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"nubnubyas"},"content":"        assertParseSuccess(parser, userString, deleteCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"nubnubyas"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"nubnubyas"},"content":"    public void test_parse_validNric() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"nubnubyas"},"content":"        String userString \u003d \" id/\" + PersonBuilder.DEFAULT_NRIC;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(defaultNric, null, defaultDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"nubnubyas"},"content":"        assertParseSuccess(parser, userString, deleteCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"nubnubyas"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"nubnubyas"},"content":"    public void test_parse_descriptor() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"nubnubyas"},"content":"        String userString \u003d \" id/\" + PersonBuilder.DEFAULT_NRIC + \" ap/\";","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"nubnubyas"},"content":"        DeletePersonDescriptor descriptor \u003d new DeletePersonDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"nubnubyas"},"content":"        descriptor.setAppointment();","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"nubnubyas"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(defaultNric, null, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"nubnubyas"},"content":"        assertParseSuccess(parser, userString, deleteCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"nubnubyas"},"content":"    public void test_parse_missingNameAndNric() {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"nubnubyas"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"nubnubyas":38,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICALHISTORY;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"        assertParseFailure(parser, \"n/\" + VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"        // no name or nric and no field specified","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"        assertParseFailure(parser, \"n/\" + VALID_NAME_AMY + \" some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"        assertParseFailure(parser, \"n/\" + VALID_NAME_AMY + \" i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"        String userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"        String userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"        String userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"        expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"        expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"        expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"        // medical","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + \" m/cancer\";","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"kanna-1"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withMedicalHistories(VALID_MEDICALHISTORY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"kanna-1"},"content":"        expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"kanna-1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"kanna-1"},"content":"        // appointment","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_AMY + \" ap/\" + VALID_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"kanna-1"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAppointment(VALID_APPOINTMENT).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"kanna-1"},"content":"        expectedCommand \u003d new EditCommand(new Name(VALID_NAME_AMY), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"kanna-1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"    public void parse_oneFieldSpecifiedUsingID_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"kanna-1"},"content":"        // phone","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"kanna-1"},"content":"        String userInput \u003d \"edit \" + \"id/\" + VALID_NRIC + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"        EditCommand expectedCommand \u003d new EditCommand(null, new Nric(VALID_NRIC), descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"kanna-1"},"content":"        // email","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"id/\" + VALID_NRIC + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"kanna-1"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"kanna-1"},"content":"        expectedCommand \u003d new EditCommand(null, new Nric(VALID_NRIC), descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"kanna-1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"kanna-1"},"content":"        String userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"kanna-1"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"kanna-1"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"kanna-1"},"content":"        userInput \u003d \"edit \" + \"n/\" + VALID_NAME_BOB + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"kanna-1"},"content":"        String userInput \u003d \"edit\" + \" n/\" + VALID_NAME_BOB + TAG_EMPTY;","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"kanna-1"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Name(VALID_NAME_BOB), null, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"-":127,"kanna-1":61}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"hyc17003"},"content":"import seedu.address.model.person.IdContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"hyc17003"},"content":"    public void nameparse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"hyc17003"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"hyc17003"},"content":"        assertParseSuccess(parser, \" \\n n/Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"hyc17003"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"hyc17003"},"content":"    public void nricparse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"hyc17003"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"hyc17003"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"hyc17003"},"content":"                new FindCommand(new IdContainsKeywordsPredicate(Arrays.asList(\"T0100606Z\", \"T0206006Z\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"hyc17003"},"content":"        assertParseSuccess(parser, \"id/T0100606Z T0206006Z\", expectedFindCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"hyc17003"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"hyc17003"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"hyc17003"},"content":"        assertParseSuccess(parser, \" \\n id/T0100606Z \\n \\t T0206006Z  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"hyc17003":13,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"    // TODO: Modify NRIC Constraints to be more tightly bound","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    private static final String INVALID_NRIC \u003d \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"    private static final String INVALID_APPOINTMENT \u003d \"Tomorrow 8PM\";","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"    private static final String INVALID_MEDICAL_HISTORY \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"WZWren"},"content":"    private static final String VALID_NRIC \u003d \"S9876543A\";","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"    private static final String VALID_APPOINTMENT \u003d \"2023-01-23 10:00 12:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"kanna-1"},"content":"    private static final String VALID_MEDICAL_HISTORY_1 \u003d \"cancer\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"    private static final String VALID_MEDICAL_HISTORY_2 \u003d \"fever\";","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"kanna-1"},"content":"    public void parseNric_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"kanna-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNric((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"kanna-1"},"content":"    public void parseNric_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"kanna-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"    public void parseNricvalidValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(VALID_NRIC));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"kanna-1"},"content":"    public void parseAppointment_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"kanna-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAppointment((String) null));","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"kanna-1"},"content":"    public void parseAppointment_validValue_returnsAppointment() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"kanna-1"},"content":"        Appointment expectedAppointment \u003d new Appointment(VALID_APPOINTMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"kanna-1"},"content":"        System.out.println(ParserUtil.parseAppointment(VALID_APPOINTMENT));","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"kanna-1"},"content":"        assertEquals(expectedAppointment, ParserUtil.parseAppointment(VALID_APPOINTMENT));","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"WZWren"},"content":"    public void parseNric_validValueWithoutWhitespace_returnsNric() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"WZWren"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"WZWren"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(VALID_NRIC));","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"WZWren"},"content":"    public void parseNric_validValueWithWhitespace_returnsTrimmedNric() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"WZWren"},"content":"        String nricWithWhitespace \u003d WHITESPACE + VALID_NRIC + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"WZWren"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"WZWren"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(nricWithWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"WZWren"},"content":"    public void parseAppointment_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"WZWren"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointment(INVALID_APPOINTMENT));","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"WZWren"},"content":"    public void parseAppointment_validValueWithoutWhitespace_returnsAppointment() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"WZWren"},"content":"        Appointment expectedAppt \u003d new Appointment(VALID_APPOINTMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"WZWren"},"content":"        assertEquals(expectedAppt, ParserUtil.parseAppointment(VALID_APPOINTMENT));","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"WZWren"},"content":"    public void parseAppointment_validValueWithWhitespace_returnsTrimmedAppointment() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"WZWren"},"content":"        String apptWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"WZWren"},"content":"        Appointment expectedAppt \u003d new Appointment(VALID_APPOINTMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"WZWren"},"content":"        assertEquals(expectedAppt, ParserUtil.parseAppointment(apptWithWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"kanna-1"},"content":"    public void parseMedicalHistories_emptyHistory_exceptionThrown() {","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"kanna-1"},"content":"        // Input data with an empty medical history","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"kanna-1"},"content":"        String input \u003d \"History 1, , History 3\";","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"kanna-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMedicals(Arrays.asList(input.split(\",\"))));","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":235,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":276,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"WZWren"},"content":"    public void parseMedical_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"WZWren"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMedical(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":282,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":283,"author":{"gitId":"WZWren"},"content":"    public void parseMedical_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"kanna-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMedical(INVALID_MEDICAL_HISTORY));","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"WZWren"},"content":"    public void parseMedical_validValueWithoutWhitespace_returnsMedical() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"kanna-1"},"content":"        MedicalHistory expectedMedHistory \u003d new MedicalHistory(VALID_MEDICAL_HISTORY_1);","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"kanna-1"},"content":"        assertEquals(expectedMedHistory, ParserUtil.parseMedical(VALID_MEDICAL_HISTORY_1));","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":293,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":294,"author":{"gitId":"WZWren"},"content":"    public void parseMedical_validValueWithWhitespace_returnsTrimmedMedical() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":295,"author":{"gitId":"kanna-1"},"content":"        String medHistoryWithWhitespace \u003d WHITESPACE + VALID_MEDICAL_HISTORY_1 + WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"kanna-1"},"content":"        MedicalHistory expectedMedHistory \u003d new MedicalHistory(VALID_MEDICAL_HISTORY_1);","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"WZWren"},"content":"        assertEquals(expectedMedHistory, ParserUtil.parseMedical(medHistoryWithWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":298,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":299,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":300,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":301,"author":{"gitId":"WZWren"},"content":"    public void parseMedicals_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":302,"author":{"gitId":"WZWren"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMedicals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":303,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":304,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":305,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":306,"author":{"gitId":"WZWren"},"content":"    public void parseMedicals_collectionWithInvalidMedicals_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":307,"author":{"gitId":"WZWren"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":308,"author":{"gitId":"kanna-1"},"content":"                ParserUtil.parseMedicals(Arrays.asList(VALID_MEDICAL_HISTORY_1, INVALID_MEDICAL_HISTORY)));","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":310,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":311,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":312,"author":{"gitId":"WZWren"},"content":"    public void parseMedicals_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":313,"author":{"gitId":"WZWren"},"content":"        assertTrue(ParserUtil.parseMedicals(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":314,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"WZWren"},"content":"    public void parseMedicals_collectionWithValidMedicals_returnsMedicalSet() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"kanna-1"},"content":"        Set\u003cMedicalHistory\u003e actualMedSet \u003d ParserUtil.parseMedicals(Arrays.asList(VALID_MEDICAL_HISTORY_1,","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"kanna-1"},"content":"                VALID_MEDICAL_HISTORY_2));","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"WZWren"},"content":"        Set\u003cMedicalHistory\u003e expectedMedSet \u003d new HashSet\u003cMedicalHistory\u003e(","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"kanna-1"},"content":"                Arrays.asList(new MedicalHistory(VALID_MEDICAL_HISTORY_1),","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"kanna-1"},"content":"                        new MedicalHistory(VALID_MEDICAL_HISTORY_2)));","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":324,"author":{"gitId":"WZWren"},"content":"        assertEquals(expectedMedSet, actualMedSet);","lastModifiedDate":"2023-10-17"},{"lineNumber":325,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"WZWren":77,"-":195,"kanna-1":54}},{"path":"src/test/java/seedu/address/model/person/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"kanna-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"kanna-1"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"kanna-1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"public class AppointmentTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"    public void constructor_invalidAppointment_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"        String invalidAppointment \u003d \" \";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Appointment(invalidAppointment));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"kanna-1"},"content":"    public void constructor_validAppointment_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"kanna-1"},"content":"        String validAppointment \u003d \"2021-01-01 10:00 11:30\";","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"kanna-1"},"content":"        Appointment appointment \u003d new Appointment(validAppointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"kanna-1"},"content":"        assertEquals(\"2021-01-01 10:00 11:30\", appointment.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"    public void isValidAppointment() {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"        // null appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(NullPointerException.class, () -\u003e Appointment.isValidAppointment(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"        // invalid appointment","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nubnubyas"},"content":"        assertFalse(Appointment.isValidAppointment(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(Appointment.isValidAppointment(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"        assertFalse(Appointment.isValidAppointment(\"196-12-12 12:00 15:00\")); // bad year","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"        assertFalse(Appointment.isValidAppointment(\"1966-12-12 12:00\")); // missing field","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"        assertFalse(Appointment.isValidAppointment(\"1966-20-12 12:00 15:00\")); // bad month","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"        assertFalse(Appointment.isValidAppointment(\"1966-03-32 12:00 15:00\")); // bad day","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"        assertFalse(Appointment.isValidAppointment(\"1966-12-12 12:60 15:00\")); // bad minute","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"        assertFalse(Appointment.isValidAppointment(\"1966-12-12 24:00 15:00\")); // bad hour","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"        assertTrue(Appointment.isValidAppointment(\"2023-01-01 11:00 12:00\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"        assertTrue(Appointment.isValidAppointment(\"2005-01-03 10:00 12:00\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"        assertTrue(Appointment.isValidAppointment(\"1966-03-12 12:00 15:00\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"        assertTrue(Appointment.isValidAppointment(\"2023-3-2 00:00 4:59\")); // truncated month/hour","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"    public void parseAppointmentIfExists_emptyOptional_returnsNull() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"        Optional\u003cString\u003e emptyAppointment \u003d Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"        assertNull(ParserUtil.parseAppointmentIfExists(emptyAppointment));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"kanna-1"},"content":"        Appointment appointment \u003d new Appointment(\"2023-01-01 11:00 12:00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"WeeeHung"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"kanna-1"},"content":"        assertTrue(appointment.equals(new Appointment(\"2023-01-01 11:00 12:00\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"WeeeHung"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(appointment.equals(appointment));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"WeeeHung"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(appointment.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"WeeeHung"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(appointment.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"WeeeHung"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"kanna-1"},"content":"        assertFalse(appointment.equals(new Appointment(\"2019-01-01 11:00 12:00\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"WZWren"},"content":"        assertFalse(appointment.equals(new Appointment(\"2023-03-12 12:00 15:01\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"WeeeHung"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"WeeeHung"},"content":"        String appointmentValue \u003d \"Valid Appointment\";","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"WeeeHung"},"content":"        Appointment appointment \u003d new Appointment(appointmentValue);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"WeeeHung"},"content":"        // same value","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(appointment.hashCode() \u003d\u003d appointmentValue.hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"WeeeHung"},"content":"        // different value","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(appointment.hashCode() !\u003d appointmentValue.hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"WeeeHung"},"content":"        return 0;","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"nubnubyas":1,"WZWren":10,"kanna-1":28,"WeeeHung":60}},{"path":"src/test/java/seedu/address/model/person/MedicalHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"public class MedicalHistoryTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MedicalHistory(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"    public void constructor_invalidMedicalHistory_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"        String invalidMedicalHistory \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MedicalHistory(invalidMedicalHistory));","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"    public void isValidMedicalHistory() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"        // null medical history","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(NullPointerException.class, () -\u003e MedicalHistory.isValidMedicalHistory(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"        // invalid medical history","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(MedicalHistory.isValidMedicalHistory(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(MedicalHistory.isValidMedicalHistory(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"        // valid medical history","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(MedicalHistory.isValidMedicalHistory(\"Diabetes\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(MedicalHistory.isValidMedicalHistory(\"-\")); // one character","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(MedicalHistory.isValidMedicalHistory(\"hypertension\")); // long address","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"        MedicalHistory medicalHistory \u003d new MedicalHistory(\"Valid Medical History\");","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(medicalHistory.equals(new MedicalHistory(\"Valid Medical History\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(medicalHistory.equals(medicalHistory));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(medicalHistory.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(medicalHistory.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(medicalHistory.equals(new MedicalHistory(\"Other Valid Medical History\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"WeeeHung"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"WeeeHung"},"content":"        String medicalHistoryValue \u003d \"Valid Medical History\";","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"WeeeHung"},"content":"        MedicalHistory medicalHistory \u003d new MedicalHistory(medicalHistoryValue);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"WeeeHung"},"content":"        // same value","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(medicalHistory.hashCode() \u003d\u003d medicalHistoryValue.hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"WeeeHung"},"content":"        // different value","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(medicalHistory.hashCode() !\u003d medicalHistoryValue.hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"WeeeHung"},"content":"        return 0;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"WeeeHung":70}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"public class NricTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"WeeeHung"},"content":"    public void isValidNric() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"        // null nric","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"WeeeHung"},"content":"        // invalid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"WeeeHung"},"content":"        // valid nric","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(Nric.isValidNric(\"S1234567E\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(Nric.isValidNric(\"-\")); // one character","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(Nric.isValidNric(\"t0987654f\")); // long address","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"        Nric nric \u003d new Nric(\"Valid Nric\");","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(nric.equals(new Nric(\"Valid Nric\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"WeeeHung"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"WeeeHung"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"WeeeHung"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"WeeeHung"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(nric.equals(new Nric(\"Other Valid Nric\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"WeeeHung":56}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"kanna-1"},"content":"        // name differs in case, all other attributes same -\u003e returns True","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"kanna-1"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"WZWren"},"content":"        String expectedAppt \u003d ALICE.getAppointment().isPresent() ? ALICE.getAppointment().get().toString() : null;","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"WeeeHung"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"WeeeHung"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"WeeeHung"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"WZWren"},"content":"                + \", appointment\u003d\" + expectedAppt","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"WeeeHung"},"content":"                + \", medicalHistories\u003d\" + ALICE.getMedicalHistories() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"WZWren":2,"-":95,"kanna-1":2,"WeeeHung":4}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMedicalHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WeeeHung"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"WeeeHung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"WeeeHung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"WeeeHung"},"content":"public class JsonAdaptedMedicalHistoryTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"WeeeHung"},"content":"    public void getMedicalHistoryName() {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"WeeeHung"},"content":"        JsonAdaptedMedicalHistory medicalHistory \u003d new JsonAdaptedMedicalHistory(\"Diabetes\");","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"WeeeHung"},"content":"        assertTrue(medicalHistory.getMedicalHistoryName() \u003d\u003d \"Diabetes\");","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"WeeeHung"},"content":"        assertFalse(medicalHistory.getMedicalHistoryName() \u003d\u003d \"Hypertension\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"WeeeHung"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"WeeeHung":18}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"WeeeHung"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"WeeeHung"},"content":"    private static final String INVALID_NRIC \u003d \" \";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"WeeeHung"},"content":"    private static final String INVALID_APPOINTMENT \u003d \" \";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"WeeeHung"},"content":"    private static final String INVALID_MEDICALHISTORIES \u003d \"# \";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"WeeeHung"},"content":"    private static final String VALID_NRIC \u003d \"T0123456E\";","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"WeeeHung"},"content":"    private static final String VALID_APPOINTMENT \u003d \"10 AUG 2023 10AM - 11AM\";","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"WeeeHung"},"content":"    private static final List\u003cJsonAdaptedMedicalHistory\u003e VALID_MEDICALHISTORIES \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"WeeeHung"},"content":"                    new ArrayList\u003cJsonAdaptedMedicalHistory\u003e() {{","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"WeeeHung"},"content":"                add(new JsonAdaptedMedicalHistory(\"Diabetes\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"WeeeHung"},"content":"                }};","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"WeeeHung"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"WZWren"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"WZWren"},"content":"    public void toModelType_nullAppointment_returnsPerson() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"WZWren"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"WZWren"},"content":"                VALID_ADDRESS, null, VALID_MEDICALHISTORIES, VALID_TAGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"WZWren"},"content":"        person.toModelType();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"WZWren"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"WeeeHung"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"WeeeHung"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"WeeeHung"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_NRIC, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"WeeeHung"},"content":"                        VALID_APPOINTMENT, VALID_MEDICALHISTORIES, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"WeeeHung"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"WeeeHung"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"WeeeHung"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"WeeeHung"},"content":"                VALID_ADDRESS, VALID_APPOINTMENT, VALID_MEDICALHISTORIES, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"WeeeHung"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"WeeeHung"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"WeeeHung"},"content":"    public void toModelType_invalidAppointment_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"WeeeHung"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"WeeeHung"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"WeeeHung"},"content":"                        INVALID_APPOINTMENT, VALID_MEDICALHISTORIES, VALID_TAGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"WeeeHung"},"content":"        String expectedMessage \u003d Appointment.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"WeeeHung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"WeeeHung"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"WZWren":7,"-":110,"WeeeHung":35}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"kanna-1"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"        descriptor.setAppointment(person.getAppointment().get());","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"kanna-1"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"kanna-1"},"content":"    public EditPersonDescriptorBuilder withAppointment(String appointment) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"kanna-1"},"content":"        descriptor.setAppointment(new Appointment(appointment));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"kanna-1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"kanna-1"},"content":"     * Parses the {@code medicalHistories} into a {@code Set\u003cMedicalHistory\u003e} and set","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"kanna-1"},"content":"     * it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"     * that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"    public EditPersonDescriptorBuilder withMedicalHistories(String... medicalHistories) {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"        Set\u003cMedicalHistory\u003e medicalHistorySet \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"                Stream.of(medicalHistories).map(MedicalHistory::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"        descriptor.setMedicalHistories(medicalHistorySet);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":87,"kanna-1":25}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.MedicalHistory;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"nubnubyas"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"nubnubyas"},"content":"    public static final String DEFAULT_NRIC \u003d \"T7243948H\";","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"kanna-1"},"content":"    public static final String DEFAULT_APPOINTMENT \u003d \"2023-01-10 10:00 12:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"nubnubyas"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"nubnubyas"},"content":"    private Appointment appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"nubnubyas"},"content":"    private Set\u003cMedicalHistory\u003e medicalHistories;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"nubnubyas"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"kanna-1"},"content":"        appointment \u003d new Appointment(DEFAULT_APPOINTMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"nubnubyas"},"content":"        medicalHistories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"nubnubyas"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"kanna-1"},"content":"        medicalHistories \u003d new HashSet\u003c\u003e(personToCopy.getMedicalHistories());","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"WZWren"},"content":"        appointment \u003d personToCopy.getAppointment().isPresent() ? personToCopy.getAppointment().get() : null;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"nubnubyas"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"nubnubyas"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"nubnubyas"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"nubnubyas"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"nubnubyas"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"kanna-1"},"content":"     * Sets the {@code Appointment} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"kanna-1"},"content":"    public PersonBuilder withAppointment(String appointment) {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"kanna-1"},"content":"        this.appointment \u003d new Appointment(appointment);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"kanna-1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"kanna-1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"kanna-1"},"content":"     * Parses the {@code medicalHistory} into a {@code Set\u003cMedicalHistory\u003e}","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"kanna-1"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"kanna-1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"kanna-1"},"content":"    public PersonBuilder withMedicalHistories(String ... medicalHistories) {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"kanna-1"},"content":"        this.medicalHistories \u003d SampleDataUtil.getMedicalHistorySet(medicalHistories);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"kanna-1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"kanna-1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"kanna-1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"kanna-1"},"content":"     * @return the person.","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":136,"author":{"gitId":"kanna-1"},"content":"        return new Person(name, nric, phone, email, address,","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"kanna-1"},"content":"                appointment, medicalHistories, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"nubnubyas"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"nubnubyas"},"content":"     * Sets the {@code MedicalHistory} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"nubnubyas"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"nubnubyas"},"content":"    public PersonBuilder withMedical(String... medicalHistories) {","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"nubnubyas"},"content":"        this.medicalHistories \u003d SampleDataUtil.getMedicalHistorySet(medicalHistories);","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"nubnubyas"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"nubnubyas"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"nubnubyas":27,"WZWren":1,"-":96,"kanna-1":23}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"        sb.append(PREFIX_NRIC + person.getNric().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"        person.getAppointment().ifPresent((appt) -\u003e sb.append(PREFIX_APPOINTMENT + appt.toString() + \" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"WZWren"},"content":"        person.getMedicalHistories().stream().forEach(","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"WZWren"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.value + \" \")","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"        );","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"WZWren":7,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"kanna-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"WZWren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"WZWren"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withNric(\"T7243948H\")","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"WZWren"},"content":"            .withAppointment(\"2023-12-12 12:00 15:00\").withPhone(\"94351253\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"WZWren"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withNric(\"S1234567B\")","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"WZWren"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withAppointment(\"2023-12-12 12:00 15:00\")","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"WZWren"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withMedical(\"diabetes\", \"high-risk\")","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"WZWren"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withNric(\"S8765432B\")","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kanna-1"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"kanna-1"},"content":"            .withAddress(\"wall street\").withAppointment(\"2023-01-01 10:00 12:00\")","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"WZWren"},"content":"            .withMedical(\"O\u003d Blood Type\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"WZWren"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withNric(\"T1234567I\")","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kanna-1"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"kanna-1"},"content":"            .withAddress(\"10th street\").withAppointment(\"2023-01-01 10:00 12:00\")","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"WZWren"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"WZWren"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withNric(\"T1111111Z\")","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"WZWren"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"WZWren"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withNric(\"M2222222Z\")","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"WZWren"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"WZWren"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"WZWren"},"content":"    // TODO: Replace George NRIC with non-duplicate after EditCommand is implemented.","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"WZWren"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withNric(\"T7243948H\")","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"WZWren"},"content":"            .withAppointment(\"2023-12-12 12:00 15:00\").withPhone(\"9482442\").withEmail(\"anna@example.com\")","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"WZWren"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"kanna-1"},"content":"            .withAppointment(VALID_APPOINTMENT).withNric(VALID_NRIC_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"kanna-1"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"kanna-1"},"content":"            .withAppointment(VALID_APPOINTMENT).withNric(VALID_NRIC_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"kanna-1"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"WZWren":20,"-":58,"kanna-1":9}}]

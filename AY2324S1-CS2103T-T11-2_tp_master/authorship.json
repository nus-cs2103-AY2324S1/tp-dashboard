[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/graph/badge.svg?token\u003d1IoaWm9UaE)](https://app.codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/tree/master)","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"* This CLI application is designed for **Engineering Managers of tech companies.**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"    Example usages:","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"  * Schedule an interview with an interviewee","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"  * Detect clashes in interview timings","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"  * Write notes about the interviewee","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"* For the detailed documentation of this project, see the **[InterviewHub Product Website](https://ay2324s1-cs2103t-t11-2.github.io/tp/)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"* This project is an ongoing software project for a desktop application to make the hiring process easier","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"  * It preserves the **OOP principles** of the original project","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"  * It **evolves** the base project into an app with a narrower target audience","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"  * Our team is working on this project, so we can **practice the SE tools** that we have learnt in class.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"* It is named InterviewHub since our app aims to centralize the interview process within companies.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"  * By placing all the critical utilities involved in one app, it increases the quality of life of our target audience.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"**Acknowledgements**","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"JasonLCY-Temp":5,"kiwibang":14,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"We currently do not offer any means to contacting us, thank you for your understanding.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"## Team CS2103T-T11-2","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"### Jason Lim","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"\u003cimg src\u003d\"images/jasonlcy-temp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"[[github](https://github.com/JasonLCY-Temp)]","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"[[portfolio](team/jasonlcy-temp.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"* Role: Scheduling and tracking, CI Pipeline manager","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"* Responsibilities: In charge of  `Interview`","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"### Tan Jing Jie","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"\u003cimg src\u003d\"images/jingjie88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"[[github](http://github.com/jingjie88)]","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"[[portfolio](team/jingjie88.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"* Role: Developer","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"* Responsibilities: Improve `add`, `edit`, `delete` features","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Johnny Doe","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"### Jony","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"\u003cimg src\u003d\"images/jonyxzx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"[[github](http://github.com/jonyxzx)]","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"[[portfolio](team/jonyxzx.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"* Responsibilities: Improve find feature","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"### Tan Kerway","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"\u003cimg src\u003d\"images/kiwibang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"[[github](http://github.com/kiwibang)]","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"[[portfolio](team/kiwibang.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"* Responsibilities: Time man","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"### Chen Xin-An","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"Chen1x"},"content":"\u003cimg src\u003d\"images/chen1x.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"Chen1x"},"content":"[[github](http://github.com/Chen1x)]","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"Chen1x"},"content":"[[portfolio](team/chen1x.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"Chen1x"},"content":"* Responsibilities: Job role object","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Jonyxzx":5,"JasonLCY-Temp":8,"jingjie88":6,"kiwibang":5,"-":38,"Chen1x":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Chen1x"},"content":"* is a hiring manager working in Technology/Engineering field","lastModifiedDate":"2023-10-05"},{"lineNumber":261,"author":{"gitId":"Chen1x"},"content":"* has a need to manage a significant number of job applicants and interviews","lastModifiedDate":"2023-10-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"Chen1x"},"content":"**Value proposition**: manage applicants and schedule interviews faster than a typical mouse/GUI driven contact and calendar app","lastModifiedDate":"2023-10-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                                               | I want to …​                             | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"Jonyxzx"},"content":"|----------|-------------------------------------------------------|------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":276,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | New user of the app                                   | see usage instructions                   | refer to instructions when I first started to use the App              |","lastModifiedDate":"2023-10-05"},{"lineNumber":277,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager ready for job applicant           | add a new applicant                      | save their contact details into the App                                |","lastModifiedDate":"2023-10-05"},{"lineNumber":278,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager opening a job role                | add a new job role                       | keep track of the job role available for application                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":279,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager ready to start an interview       | add a new interview slot                 | save the interview information into the App                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":280,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager ready for next round of interview | delete an applicant                      | remove their contact details that I no longer need                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":281,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager that finished an interview        | delete an interview                      | remove the interview that has already been completed                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Busy Engineering Manager                              | find an applicant by name                | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Busy Engineering Manager                              | find a job role by name                  | easily locate the job role which are still available                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Busy Engineering Manager                              | set reminder of interview                | stay organised and track upcoming interview                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":285,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager with sensitive information        | hide private contact details             | protect the privacy of the applicants information in the App           |","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager with many applicants              | sort the applicants by skill             | prioritise and focus on the most promising candidates                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager with many applicants              | rank the applicants                      | keep track of the applicants who have performed well                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":288,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager                                   | update an applicant details              | easily update their information on the App                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":289,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager                                   | update a job role                        | easily change the details about the job role                           |","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager with limited budget               | track the cost per hire                  | ensure that the company budget is not exceeded                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":291,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Team-Oriented Engineering Manager                     | add other interviewer                    | facililate collaboration and delegation of responsibilities            |","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Organised Engineering Manager                         | sort persons by name                     | locate an applicant easily                                             |","lastModifiedDate":"2023-10-05"},{"lineNumber":293,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Engineering Manager with many contacts                | import contacts from other file          | add multiple contacts into the App smoothly                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":294,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Meticulous Engineering Manager                        | store the applicant\u0027s background         | make a more informed choice to benefit the company                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Engineering Manager with multiple rounds of interview | track the progress of each candidate     | maintain a clear overview of our recruitment efforts                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | New Engineering Manager                               | analyse the performance of the interview | make improvements to my interview processes                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Helpful Engineering Manager                           | provide feedback to the applicant        | offer constructive advice to help them improve their skills            |","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Long user of the app                                  | provide feedback to the developer        | suggest improvements and enhancements for the app                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":299,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"JasonLCY-Temp"},"content":"(For all use cases below, the **System** is the `InterviewHub` and the **Actor** is the `hiring manager`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC01 Add an interview**","lastModifiedDate":"2023-10-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to add an interview.","lastModifiedDate":"2023-10-04"},{"lineNumber":312,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub adds the interview.","lastModifiedDate":"2023-10-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. One of the user-provided parameters is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":318,"author":{"gitId":"JasonLCY-Temp"},"content":"    * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"JasonLCY-Temp"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":321,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":322,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC02 List all interview**","lastModifiedDate":"2023-10-04"},{"lineNumber":323,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":324,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":325,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":326,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to list all interviews.","lastModifiedDate":"2023-10-04"},{"lineNumber":327,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub displays all scheduled interviews.","lastModifiedDate":"2023-10-04"},{"lineNumber":328,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":329,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":330,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":331,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":332,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":333,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":334,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":336,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":337,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC03 Delete an Interview**","lastModifiedDate":"2023-10-04"},{"lineNumber":338,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":339,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":340,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager \u003cu\u003e views the list of all interviews (UC02) \u003c/u\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":342,"author":{"gitId":"JasonLCY-Temp"},"content":"2. Hiring manager requests to delete a specific interview","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"JasonLCY-Temp"},"content":"3. InterviewHub deletes the specified interview","lastModifiedDate":"2023-10-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":348,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":349,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":350,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":351,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":352,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":353,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":354,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC04 Add a job role**","lastModifiedDate":"2023-10-04"},{"lineNumber":355,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":356,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":358,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to add a job role.","lastModifiedDate":"2023-10-04"},{"lineNumber":359,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub adds the job role.","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":361,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":362,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":363,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":364,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. One of the user-provided parameters is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":365,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":366,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":367,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":368,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":369,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC05 List all job roles**","lastModifiedDate":"2023-10-04"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":371,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":372,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":373,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to list all job roles.","lastModifiedDate":"2023-10-04"},{"lineNumber":374,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub displays all job roles.","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":377,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":378,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":379,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":380,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":381,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":382,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":383,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":384,"author":{"gitId":"jingjie88"},"content":"**Use case: UC06 List all applicants for a job role**","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":386,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":387,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":388,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager \u003cu\u003e views the list of all job roles (UC05) \u003c/u\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":389,"author":{"gitId":"jingjie88"},"content":"2. Hiring manager requests to view all applicants for a specific job role.","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"jingjie88"},"content":"3. InterviewHub displays all the applicants for the specific job role.","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":392,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":393,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":394,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":395,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":396,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":397,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":398,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":399,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC07 Delete a job role**","lastModifiedDate":"2023-10-04"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":401,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":403,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager \u003cu\u003e views the list of all job roles (UC02) \u003c/u\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":404,"author":{"gitId":"JasonLCY-Temp"},"content":"2. Hiring manager requests to delete a specific job role","lastModifiedDate":"2023-10-04"},{"lineNumber":405,"author":{"gitId":"JasonLCY-Temp"},"content":"3. InterviewHub deletes the specified job role","lastModifiedDate":"2023-10-04"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":409,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":411,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":412,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":413,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":414,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":415,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":416,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":417,"author":{"gitId":"jingjie88"},"content":"**Use case: UC08 Add an applicant**","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":419,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":420,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":421,"author":{"gitId":"jingjie88"},"content":"1. Hiring manager requests to add an applicant.","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"jingjie88"},"content":"2. InterviewHub adds the applicant.","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":424,"author":{"gitId":"JasonLCY-Temp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":425,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":426,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":427,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. One of the user-provided parameters is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":428,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":429,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":430,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":431,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":432,"author":{"gitId":"jingjie88"},"content":"**Use case: UC09 List all applicants**","lastModifiedDate":"2023-10-05"},{"lineNumber":433,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":434,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":435,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"jingjie88"},"content":"1. Hiring manager requests to list all applicants.","lastModifiedDate":"2023-10-05"},{"lineNumber":437,"author":{"gitId":"jingjie88"},"content":"2. InterviewHub displays all scheduled applicants.","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":439,"author":{"gitId":"JasonLCY-Temp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":440,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":441,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":442,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":443,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":444,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":445,"author":{"gitId":"JasonLCY-Temp"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":447,"author":{"gitId":"jingjie88"},"content":"**Use case: UC010 Delete an applicant**","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":449,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"jingjie88"},"content":"1. Hiring manager \u003cu\u003e views the list of all applicants (UC09) \u003c/u\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"jingjie88"},"content":"2. Hiring manager requests to delete a specific applicant","lastModifiedDate":"2023-10-05"},{"lineNumber":453,"author":{"gitId":"jingjie88"},"content":"3. InterviewHub deletes the specified applicant","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":455,"author":{"gitId":"JasonLCY-Temp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":456,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":457,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"JasonLCY-Temp"},"content":"    * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"jingjie88"},"content":"2.  Should be able to handle as many applicants as the user is able to manage in their workday/workweek.","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"kiwibang"},"content":"3.  The app should be reasonably responsive to the entire set of user requests(i.e. within 1 second at maximum load).","lastModifiedDate":"2023-10-03"},{"lineNumber":471,"author":{"gitId":"kiwibang"},"content":"4.  The system should have an interface that is very easy to pick up for our target audience(i.e. Engineering Managers","lastModifiedDate":"2023-10-03"},{"lineNumber":472,"author":{"gitId":"kiwibang"},"content":"that have many years of programming experience).","lastModifiedDate":"2023-10-03"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"jingjie88"},"content":"* **Applicant**: The person applying to a particular job role.","lastModifiedDate":"2023-10-05"},{"lineNumber":481,"author":{"gitId":"jingjie88"},"content":"* **Hiring manager**: The manager interviewing the applicant.","lastModifiedDate":"2023-10-05"},{"lineNumber":482,"author":{"gitId":"jingjie88"},"content":"This manager is familiar with the technical aspects of the role. Also called engineering manager.","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"jingjie88"},"content":"* **MSS**: Main Success Scenario. It describes the most straightforward","lastModifiedDate":"2023-10-05"},{"lineNumber":484,"author":{"gitId":"jingjie88"},"content":"interaction in a use case where nothing goes wrong.","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"jingjie88"},"content":"* **Extensions**: In a use case, an extension describes an alternative flow of events","lastModifiedDate":"2023-10-05"},{"lineNumber":486,"author":{"gitId":"jingjie88"},"content":"that are different from the MSS.","lastModifiedDate":"2023-10-05"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jonyxzx":25,"JasonLCY-Temp":119,"jingjie88":21,"kiwibang":3,"-":368,"Chen1x":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"Interview Hub (IH) is a **desktop app for scheduling job interviews and managing applicants,","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"If you can type fast, IH can get your Interview management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Placeholder TBD","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Chen1x"},"content":"### Adding an applicant: `add-applicant`","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Chen1x"},"content":"Adds an applicant to the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"Format: `add-applicant JOB_INDEX n/NAME t/INTERVIEW_DATETIME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"Chen1x"},"content":"* `add-applicant 1 n/John Doe t/12/03/2023 3pm p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"Chen1x"},"content":"### Adding a job: `add-job`","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"Chen1x"},"content":"Adds a job to the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"Chen1x"},"content":"Format: `add-job j/JOB_TITLE d/DESCRIPTION`","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Chen1x"},"content":"* `add-job j/software engineer d/develop software`","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"Chen1x"},"content":"### Listing all applicants : `list-applicants`","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"Chen1x"},"content":"Shows a list of all applicants in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"Chen1x"},"content":"Format: `list-applicants`","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Chen1x"},"content":"### Listing all jobs : `list-jobs`","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Chen1x"},"content":"Shows a list of all jobs in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"Chen1x"},"content":"Format: `list-jobs`","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"Chen1x"},"content":"### Editing an applicant : `edit-applicant`","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"Chen1x"},"content":"Edits an existing applicant in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"Chen1x"},"content":"Format: `edit-applicant APPLICANT_INDEX [n/NAME] [t/INTERVIEW_DATETIME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"Chen1x"},"content":"* Edits the person at the specified `APPLICANT_INDEX`. The index refers to the index number shown in the displayed applicant list.","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"Chen1x"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"Chen1x"},"content":"* Job index is fixed and cannot be edited, to change the job of an applicant, delete the applicant and add a new one.","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"Chen1x"},"content":"*  `edit-applicant 1 n/John Doe` Edits the name of the 1st person to be `John Doe`.","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"Chen1x"},"content":"*  `edit-applicant 2 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 2nd person to be `91234567` and `johndoe@example.com` respectively","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Chen1x"},"content":"### Editing a job : `edit-job`","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Chen1x"},"content":"Edit an existing job in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Chen1x"},"content":"Format: `edit-job JOB_INDEX [j/JOB_TITLE] [d/DESCRIPTION]`","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Chen1x"},"content":"* Edits the job at the specified `JOB_INDEX`. The index refers to the index number shown in the displayed job list.","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"Chen1x"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"Chen1x"},"content":"*  `edit-job 1 j/software engineer` Edits the job title of the 1st job to be `software engineer`.","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"Chen1x"},"content":"*  `edit-job 2 d/develop software` Edits the description of the 2nd job to be `develop software`.","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"Chen1x"},"content":"### Deleting an applicant : `delete-applicant`","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"Chen1x"},"content":"Deletes the specified applicant from the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"Chen1x"},"content":"Format: `delete-applicant INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"Chen1x"},"content":"* Deletes the applicant at the specified `INDEX`.","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"Chen1x"},"content":"* The index refers to the index number shown in the displayed applicant list.","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"Chen1x"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"Chen1x"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"Chen1x"},"content":"* `delete-applicant 1` deletes the 1st applicant in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"Chen1x"},"content":"### Deleting a job : `delete-job`","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"Chen1x"},"content":"Deletes the specified job from the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"Chen1x"},"content":"Format: `delete-job INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"Chen1x"},"content":"* Deletes the job at the specified `INDEX`.","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"Chen1x"},"content":"* The index refers to the index number shown in the displayed job list.","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"Chen1x"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"Chen1x"},"content":"* Deleting a job will also delete all applicants applying for the job.","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"Chen1x"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"Chen1x"},"content":"* `delete-job 1` deletes the 1st job in the address book, along with all applicants applying for the job.","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"Chen1x"},"content":"### Clearing all applicants : `clear-applicants`","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"Chen1x"},"content":"Clears all applicants from the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"Chen1x"},"content":"Format: `clear-applicants`","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"Chen1x"},"content":"### Clearing all jobs : `clear-jobs`","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"Chen1x"},"content":"Clears all jobs from the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"Chen1x"},"content":"Format: `clear-jobs`","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"Chen1x"},"content":"* Clearing all jobs will also clear all applicants.","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"Chen1x"},"content":"### Clearing all data : `nuke`","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"Chen1x"},"content":"Clears all data from the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"Chen1x"},"content":"Format: `nuke`","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"Chen1x"},"content":"* BOOM.","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"Chen1x"},"content":"### Find applicants for a given job: `find-applicants-for-job`","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"Chen1x"},"content":"Finds applicants applying for a job with the given job index.","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"Chen1x"},"content":"Format: `find-applicants-for-job JOB_INDEX`","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"Chen1x"},"content":"* The index refers to the index number shown in the displayed job list.","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"Chen1x"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"Chen1x"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"Chen1x"},"content":"* `find-applicants-for-job 1` returns all applicants for the 1st job in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"Chen1x"},"content":"### Finding applicants (and their index in address book) by name: `find-applicants`","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"Chen1x"},"content":"Finds applicants whose names contain any of the given keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"Chen1x"},"content":"Format: `find-applicants KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"Chen1x"},"content":"### Finding jobs (and their index in address book) by title: `find-jobs`","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":197,"author":{"gitId":"Chen1x"},"content":"Find jobs whose titles contain any of the given keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":199,"author":{"gitId":"Chen1x"},"content":"Format: `find-jobs KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":201,"author":{"gitId":"Jonyxzx"},"content":"* The search is case-insensitive. e.g `ANALYST` will match `analyst`","lastModifiedDate":"2023-09-28"},{"lineNumber":202,"author":{"gitId":"Jonyxzx"},"content":"* The order of the keywords does not matter. e.g. `Software Engineer` will match `Engineer Software`","lastModifiedDate":"2023-09-28"},{"lineNumber":203,"author":{"gitId":"Jonyxzx"},"content":"* Only the job description is searched.","lastModifiedDate":"2023-09-28"},{"lineNumber":204,"author":{"gitId":"Jonyxzx"},"content":"* Only full words will be matched e.g. `Analyst` will not match `Analysts`","lastModifiedDate":"2023-09-28"},{"lineNumber":205,"author":{"gitId":"Jonyxzx"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-09-28"},{"lineNumber":206,"author":{"gitId":"Jonyxzx"},"content":"  e.g. `Software Engineer` will return `Software Developer`, `System Engineer`","lastModifiedDate":"2023-09-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-09-28"},{"lineNumber":209,"author":{"gitId":"Chen1x"},"content":"* `find-jobs software data` returns `Software Engineer` and `Data Analyst`.","lastModifiedDate":"2023-10-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"JasonLCY-Temp"},"content":"InterviewHub data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"JasonLCY-Temp"},"content":"InterviewHub data are saved automatically as a JSON file `[JAR file location]/data/interviewhub.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"JasonLCY-Temp"},"content":"If your changes to the data file makes its format invalid, InterviewHub will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"kiwibang"},"content":"### Entering times","lastModifiedDate":"2023-09-26"},{"lineNumber":234,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":235,"author":{"gitId":"kiwibang"},"content":"Accept multiple date formats","lastModifiedDate":"2023-09-26"},{"lineNumber":236,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":237,"author":{"gitId":"kiwibang"},"content":"Example usage: add interview with Naruto time/ 12/03/2023 3pm","lastModifiedDate":"2023-09-26"},{"lineNumber":238,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":239,"author":{"gitId":"kiwibang"},"content":"Format: `time/ \u003cAccepted Time Format(see list for a list of accepted time formats)\u003e`","lastModifiedDate":"2023-09-26"},{"lineNumber":240,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":241,"author":{"gitId":"kiwibang"},"content":"List of accepted date formats:","lastModifiedDate":"2023-09-26"},{"lineNumber":242,"author":{"gitId":"kiwibang"},"content":"* Day, Month \u0026 Year formats(only DD*MM*YY/YYYY formats accepted):","lastModifiedDate":"2023-09-26"},{"lineNumber":243,"author":{"gitId":"kiwibang"},"content":"  * 12/03/2023","lastModifiedDate":"2023-09-26"},{"lineNumber":244,"author":{"gitId":"kiwibang"},"content":"  *  12/03/23","lastModifiedDate":"2023-09-26"},{"lineNumber":245,"author":{"gitId":"kiwibang"},"content":"  *  12/03/2023 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":246,"author":{"gitId":"kiwibang"},"content":"  *  12/03/2023 1700","lastModifiedDate":"2023-09-26"},{"lineNumber":247,"author":{"gitId":"kiwibang"},"content":"  *  12/03/2023 5.03pm","lastModifiedDate":"2023-09-26"},{"lineNumber":248,"author":{"gitId":"kiwibang"},"content":"  *  12/03/23 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":249,"author":{"gitId":"kiwibang"},"content":"  *  12-03-2023","lastModifiedDate":"2023-09-26"},{"lineNumber":250,"author":{"gitId":"kiwibang"},"content":"  *  12-03-2023 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":251,"author":{"gitId":"kiwibang"},"content":"  *  12-03-23","lastModifiedDate":"2023-09-26"},{"lineNumber":252,"author":{"gitId":"kiwibang"},"content":"  *  12-03-23 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":253,"author":{"gitId":"kiwibang"},"content":"  *  12th December 2023","lastModifiedDate":"2023-09-26"},{"lineNumber":254,"author":{"gitId":"kiwibang"},"content":"  *  12th December 2023 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":255,"author":{"gitId":"kiwibang"},"content":"* Day \u0026 Month formats","lastModifiedDate":"2023-09-26"},{"lineNumber":256,"author":{"gitId":"kiwibang"},"content":"  * 12/03","lastModifiedDate":"2023-09-26"},{"lineNumber":257,"author":{"gitId":"kiwibang"},"content":"  *  12/03 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":258,"author":{"gitId":"kiwibang"},"content":"  *  12-03 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":259,"author":{"gitId":"kiwibang"},"content":"  *  12-03","lastModifiedDate":"2023-09-26"},{"lineNumber":260,"author":{"gitId":"kiwibang"},"content":"  *  12th December","lastModifiedDate":"2023-09-26"},{"lineNumber":261,"author":{"gitId":"kiwibang"},"content":"  *  12th December 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":262,"author":{"gitId":"kiwibang"},"content":"  *  12th Dec","lastModifiedDate":"2023-09-26"},{"lineNumber":263,"author":{"gitId":"kiwibang"},"content":"  *  12th Dec 5pm","lastModifiedDate":"2023-09-26"},{"lineNumber":264,"author":{"gitId":"kiwibang"},"content":"* Day formats","lastModifiedDate":"2023-09-26"},{"lineNumber":265,"author":{"gitId":"kiwibang"},"content":"  *  Mon/tues/wed/…/sun","lastModifiedDate":"2023-09-26"},{"lineNumber":266,"author":{"gitId":"kiwibang"},"content":"  *  Monday/Tuesday/Wednesday/…/Sunday","lastModifiedDate":"2023-09-26"},{"lineNumber":267,"author":{"gitId":"kiwibang"},"content":"  *  Today","lastModifiedDate":"2023-09-26"},{"lineNumber":268,"author":{"gitId":"kiwibang"},"content":"  *  Tomorrow","lastModifiedDate":"2023-09-26"},{"lineNumber":269,"author":{"gitId":"kiwibang"},"content":"  *  Next week","lastModifiedDate":"2023-09-26"},{"lineNumber":270,"author":{"gitId":"kiwibang"},"content":"  *  Next month","lastModifiedDate":"2023-09-26"},{"lineNumber":271,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":272,"author":{"gitId":"kiwibang"},"content":"Other features:","lastModifiedDate":"2023-09-26"},{"lineNumber":273,"author":{"gitId":"kiwibang"},"content":"  * When the user enters the date properly: `added \u003cinterview description\u003e at \u003ctime\u003e`","lastModifiedDate":"2023-09-26"},{"lineNumber":274,"author":{"gitId":"kiwibang"},"content":"  * When the user does not input the date properly: `“Oops! Please enter a valid date String!”`","lastModifiedDate":"2023-09-26"},{"lineNumber":275,"author":{"gitId":"kiwibang"},"content":"  * When there is an interview clash: `“Oops! You have an \u003cinsert interview object\u003e scheduled at \u003cfrom date \u0026 by date\u003e`","lastModifiedDate":"2023-09-26"},{"lineNumber":276,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":277,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"JasonLCY-Temp"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InterviewHub home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"Chen1x"},"content":"**Add Applicant** | `add-applicant JOB_INDEX n/NAME t/INTERVIEW_DATETIME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003e e.g., `add-applicant 1 n/John Doe t/12/03/2023 3pm p/98765432","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"Chen1x"},"content":"**Add Job** | `add-job j/JOB_TITLE d/DESCRIPTION` \u003cbr\u003e e.g., `add-job j/software engineer d/develop software`","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"Chen1x"},"content":"**Clear Applicants** | `clear-applicants`","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"Chen1x"},"content":"**Clear Jobs** | `clear-jobs`","lastModifiedDate":"2023-10-04"},{"lineNumber":301,"author":{"gitId":"Chen1x"},"content":"**Clear All** | `nuke`","lastModifiedDate":"2023-10-04"},{"lineNumber":302,"author":{"gitId":"Chen1x"},"content":"**Delete Applicant** | `delete-applicant INDEX`\u003cbr\u003e e.g., `delete-applicant 3`","lastModifiedDate":"2023-10-04"},{"lineNumber":303,"author":{"gitId":"Chen1x"},"content":"**Delete Job** | `delete-job INDEX`\u003cbr\u003e e.g., `delete-job 3`","lastModifiedDate":"2023-10-04"},{"lineNumber":304,"author":{"gitId":"Chen1x"},"content":"**Edit Applicant** | `edit-applicant APPLICANT_INDEX [n/NAME] [t/INTERVIEW_DATETIME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`\u003cbr\u003e e.g.,`edit-applicant 2 n/John Doe","lastModifiedDate":"2023-10-04"},{"lineNumber":305,"author":{"gitId":"Chen1x"},"content":"**Edit Job** | `edit-job JOB_INDEX [j/JOB_TITLE] [d/DESCRIPTION]`\u003cbr\u003e e.g.,`edit-job 2 j/software engineer`","lastModifiedDate":"2023-10-04"},{"lineNumber":306,"author":{"gitId":"Chen1x"},"content":"**Find Applicants** | `find-applicants KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find-applicants John`","lastModifiedDate":"2023-10-04"},{"lineNumber":307,"author":{"gitId":"Chen1x"},"content":"**Find Applicants for Job** | `find-applicants-for-job JOB_INDEX`\u003cbr\u003e e.g., `find-applicants-for-job 1`","lastModifiedDate":"2023-10-04"},{"lineNumber":308,"author":{"gitId":"Chen1x"},"content":"**Find Jobs** | `find-jobs KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find-jobs software`","lastModifiedDate":"2023-10-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"Chen1x"},"content":"**List Applicants** | `list-applicants`","lastModifiedDate":"2023-10-04"},{"lineNumber":311,"author":{"gitId":"Chen1x"},"content":"**List Jobs** | `list-jobs`","lastModifiedDate":"2023-10-04"},{"lineNumber":312,"author":{"gitId":"Chen1x"},"content":"**Exit** | `exit`","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Jonyxzx":6,"JasonLCY-Temp":5,"kiwibang":45,"-":138,"Chen1x":118}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"JasonLCY-Temp"},"content":"    content: \"InterviewHub\";","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"JasonLCY-Temp":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: InterviewHub","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/graph/badge.svg?token\u003d1IoaWm9UaE)](https://app.codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/tree/master)","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"**Interview Hub is a CLI application is designed for Engineering Managers of tech companies.**","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"Provides hiring managers quick access to the entire pool of interviewees,their contacts and their resumes.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"Also allows the hiring managers to take notes during the interview and to also leave a review/rating of the potential hire for future internal usage","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"* If you are interested in using InterviewHub, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"* If you are interested about developing InterviewHub, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"JasonLCY-Temp":8,"-":14}},{"path":"docs/team/chen1x.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"title: Xin-An\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"InterviewHub is a interview management software for tech hiring managers that prefers CLI.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"It is written in Java.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"    * What it does:","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"    * Justification:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"    * Highlights:","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"    * Credits:","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"    * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"    * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"    * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"        * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"        * placeholder","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Chen1x":33}},{"path":"docs/team/jasonlcy-temp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"layout: page","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"title: JasonLCY-Temp Project Portfolio Page","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"InterviewHub is a CLI-focused desktop application for Tech/Engineering hiring managers to assist them","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"in keeping track of their pool of interviewees, job openings and related information.","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"It has a GUI created with JavaFX. It is written in Java, and has \u003e10 kLoC.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"* **New Feature**: Placeholder text","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"  * What it does: Allows the user PLACEHOLDER","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Justification: This feature improves PLACEHOLDER","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Highlights: PLACEHOLDER","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Credits: *PLACEHOLDER*","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Code contributed**: [PLACEHOLDER]()","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Created the `organization` and `team` on GitHub","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Created the `team repo` on GitHub (including setting up `CodeCov` CI)","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Managed milestone `v1.1` on GitHub (Creating and assigning issues, reviewing and merging PRs)","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"  * PLACEHOLDER","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"    * PLACEHOLDER","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"    * PLACEHOLDER","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Community**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"  * PRs reviewed (with non-trivial review comments): [PLACEHOLDER]()","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"JasonLCY-Temp":37}},{"path":"docs/team/jingjie88.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"title: Jing Jie\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"InterviewHub is a desktop interview management application for tech hiring managers.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"It is written in Java.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"    * What it does:","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    * Justification:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    * Highlights:","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    * Credits:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"    * placeholder","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    * placeholder","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    * placeholder","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        * Update documentation for `add`, `edit`, `list`, `delete`","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        * placeholder","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"jingjie88":33}},{"path":"docs/team/jonyxzx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"layout: page","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"title: Jony\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"InterviewHub - A CLI app for engineering managers to manage interviews and interviewees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"* **New Feature**: Added the ability to find the interviewee based on the job description.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"  * What it does: allows the user to search for the target interviewee based on the input job description with the command `find-job`.","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"  * Justification: This feature improves the product significantly because a user can conveniently search for all the interviewees based on their job role. This would allow them to reduce the time taken to search it manually.","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"  * Highlights: This enhancement affects existing `find` command as the interviewee can be search by either name or job description. The user has to pay attention to the command used to avoid wrong output from the search. By having an extra way to filter the interviewees, the user can save time with the CLI based system.","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"* **Project management**:`to be added`","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"* **Enhancements to existing features**:`to be added`","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    * Added documentation for the features `find-job`","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    * Added implementation details of the `find-job` feature.","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"Jonyxzx":27}},{"path":"docs/team/kiwibang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"layout: page","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"title: Tan Kerway\u0027s portfolio","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"InterviewHub - A CLI app for engineering managers to manage interviews and interviewees","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"* **Accept multiple time formats**: Added the ability to accept multiple time formats.","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"    * What it does: Allows the user to enter a time in different formats","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"    * Justification: Different individuals have different ways of entering dates","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"    * Highlights: This feature increases the flexibility of the command,","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"      allowing the user to type in inputs without the input being rejected, leading to better UX.","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"* **Project management**: `to be added soon`","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"    * User Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"        * Added documentation for the features `accepted time formats`","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"      * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"kiwibang":26}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"    /** Returns an unmodifiable view of the filtered list of interviews */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"Chen1x":5}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"Chen1x"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Chen1x"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Chen1x"},"content":"        return model.getFilteredInterviewList();","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":88,"Chen1x":6}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    public static final String MESSAGE_INTERVIEWS_LISTED_OVERVIEW \u003d \"%1$d interviews listed!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Formats the {@code interview} for display to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static String formatInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"        return \"Applicant: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"                + interview.getInterviewApplicant()","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"                + \"; Role: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"                + interview.getJobRole()","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"                + \"; Scheduled for: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"                + interview.getInterviewTiming();","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jonyxzx":1,"JasonLCY-Temp":13,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":" * Command to handle adding interviews to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s \"AddCommand\" class","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"public class AddInterviewCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    public static final String COMMAND_WORD \u003d \"add-interview\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    /* TODO Update format with intended final format accepted*/","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interview to the address book. \"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_APPLICANT + \"APPLICANT_ID \"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_JOB_ROLE + \"ROLE \"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_TIMING + \"TIMING\"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_APPLICANT + \"18 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_JOB_ROLE + \"Junior Software Engineer \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_TIMING + \"2023-10-24 18:00\";","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New interview added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Error: This is a duplicate interview\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Interview toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Creates an AddInterviewCommand to add the specified {@code Interview}","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"    public AddInterviewCommand(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        toAdd \u003d interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (model.hasInterview(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        model.addInterview(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatInterview(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof AddInterviewCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"        AddInterviewCommand otherAddICommand \u003d (AddInterviewCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"        return toAdd.equals(otherAddICommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Jonyxzx":2,"JasonLCY-Temp":69}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Jonyxzx":1,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/FindInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":" * Finds and lists all interviews in address book which the job-role contains any of the argument keywords.","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    public static final String COMMAND_WORD \u003d \"find-interview\";","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"            + \": Finds all interviews which the job-role contain any of \"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"            + \"Example: \" + COMMAND_WORD + \" software-engineer data-analyst\";","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    private final JobContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    public FindInterviewCommand(JobContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        model.updateFilteredInterviewList(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"                String.format(Messages.MESSAGE_INTERVIEWS_LISTED_OVERVIEW, model.getFilteredInterviewList().size()));","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        if (!(other instanceof FindInterviewCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand otherFindCommand \u003d (FindInterviewCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":59}},{"path":"src/main/java/seedu/address/logic/parser/AddInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s AddCommandParser class","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"public class AddInterviewCommandParser implements Parser\u003cAddInterviewCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterviewCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"     * and returns an AddInterviewCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input does not conform the","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"     *     expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    public AddInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPLICANT, PREFIX_JOB_ROLE, PREFIX_TIMING);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_APPLICANT, PREFIX_JOB_ROLE, PREFIX_TIMING)","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_APPLICANT, PREFIX_JOB_ROLE, PREFIX_TIMING);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        String applicant \u003d argMultimap.getValue(PREFIX_APPLICANT).get().trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"        String jobRole \u003d argMultimap.getValue(PREFIX_JOB_ROLE).get().trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"        String timing \u003d argMultimap.getValue(PREFIX_TIMING).get().trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview interview \u003d new Interview(applicant, jobRole, timing);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new AddInterviewCommand(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"        case FindInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Jonyxzx"},"content":"            return new FindInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"        case AddInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new AddInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jonyxzx":4,"JasonLCY-Temp":4,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Prefix PREFIX_APPLICANT \u003d new Prefix(\"app/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Prefix PREFIX_JOB_ROLE \u003d new Prefix(\"jr/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Prefix PREFIX_TIMING \u003d new Prefix(\"time/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JasonLCY-Temp":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/FindInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommandParser implements Parser\u003cFindInterviewCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"    public FindInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"        String[] jobKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        return new FindInterviewCommand(new JobContainsKeywordsPredicate(Arrays.asList(jobKeywords)));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":33}},{"path":"src/main/java/seedu/address/logic/parser/TimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":" * This class encapsulates the methods that are part of the TimeParser API.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":" * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"public class TimeParser {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"    protected static final LocalDateTime DEFAULT_DATE \u003d LocalDateTime.of(1970, 1, 1, 0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"    protected static String[] dateFormats \u003d new String[] {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"        \"0\",","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"        // time string with day and time","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"        \"E HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"        \"E h\u0027.\u0027mma\",","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"        \"E ha\",","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"        // time string with day only(e.g. tue, wed, etc)","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"        \"E\",","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"        \"1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"        // time with all required information: year, month, day of month, time","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"        \"MMM d HH:mm yyyy\",","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"        \"y-MM-dd HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"        \"yyyy-MM-dd HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"        \"yyyy-MM-dd HH\u0027.\u0027mma\",","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"        \"EEE MMM d HH:mm:ss zzz yyyy\",","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"        \"EEE MMM d HH:mm yyyy\",","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"        \"d/M/yy HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"        \"d/M/yyyy HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"        \"d/M/y ha\",","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"        \"2\",","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"        // time with these information: year, month, day of month","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"        \"y-MM-dd\",","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"        \"d/M/yy\",","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"        \"d/M/yyyy\",","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"        \"d/M/y\",","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"        \"3\",","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"        // time with these information: month, day of month, time","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"        \"MMM dd HH\u0027.\u0027mma\",","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"        \"dd MMM HH\u0027.\u0027mma\",","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"        \"MMM dd HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"        \"dd MMM HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"        \"d/M HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"        \"MMM dd ha\",","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"        \"dd MMM ha\",","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"        \"d/M ha\",","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"        \"4\",","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"        // time with these information: month and day","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"        \"MMM dd\",","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"        \"dd MMM\",","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"        \"d/M\"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kiwibang"},"content":"    };","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"     * Converts the string date into a Datetime object.","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kiwibang"},"content":"     * @param time the String that contains the data for the date","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kiwibang"},"content":"     * @return datetime object that represents the string","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kiwibang"},"content":"    public static LocalDateTime parseDate(String time)","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"            throws seedu.address.logic.parser.exceptions.ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"        int currentFormatID \u003d -1;","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"        for (String formatString : dateFormats) { // find a date format string that matches the user pattern","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"kiwibang"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"kiwibang"},"content":"                if (isNumeric(formatString)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"kiwibang"},"content":"                    currentFormatID \u003d Integer.parseInt(formatString);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"kiwibang"},"content":"                    continue;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"                LocalDateTime temp \u003d new SimpleDateFormat(formatString)","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"                        .parse(time)","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kiwibang"},"content":"                        .toInstant()","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"kiwibang"},"content":"                        .atZone(ZoneId.systemDefault())","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"kiwibang"},"content":"                        .toLocalDateTime();","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"kiwibang"},"content":"                return addMissingDateFields(temp, currentFormatID);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"kiwibang"},"content":"            } catch (ParseException ignored) {","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kiwibang"},"content":"                String s \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kiwibang"},"content":"        throw new seedu.address.logic.parser.exceptions.ParseException(\"Please specify a valid date!\");","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"kiwibang"},"content":"     * Appends missing date fields depending on what the user typed in.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"kiwibang"},"content":"     * @param temp the LocalDateTime object to modify","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kiwibang"},"content":"     * @param currentFormatID the given type of date object","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kiwibang"},"content":"     * @return a LocalDateTime object that has all the required information","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"kiwibang"},"content":"    private static LocalDateTime addMissingDateFields(LocalDateTime temp, int currentFormatID)","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kiwibang"},"content":"            throws seedu.address.logic.parser.exceptions.ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kiwibang"},"content":"        switch (currentFormatID) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kiwibang"},"content":"        case 0: // case where the current format is a day(index 0)","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kiwibang"},"content":"            // add the year, month, day, and time(default to 2359)","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"kiwibang"},"content":"            temp \u003d addDay(temp);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"kiwibang"},"content":"        case 2: // case where the current format is missing time(index 8 to 11)","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"kiwibang"},"content":"            temp \u003d addTime(temp);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kiwibang"},"content":"        case 3: // case where the current format is missing year(index 12 to 19)","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kiwibang"},"content":"            // add the year to the final date","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"kiwibang"},"content":"            temp \u003d addYear(temp);","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"kiwibang"},"content":"        case 4: // case where the current format is missing year and time(index 20 to 22)","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"kiwibang"},"content":"            // add the year and time to the final date","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"kiwibang"},"content":"            temp \u003d addYear(temp);","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"kiwibang"},"content":"            temp \u003d addTime(temp);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"kiwibang"},"content":"            if (temp.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"kiwibang"},"content":"                temp \u003d temp.plusYears(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"kiwibang"},"content":"        default: // case where the current format is not missing anything(index 1 to 7)","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"kiwibang"},"content":"            break; // keep the final date as is","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"kiwibang"},"content":"        // gc: the given date is before today\u0027s date even after parsing","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kiwibang"},"content":"        if (temp.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"kiwibang"},"content":"            throw new seedu.address.logic.parser.exceptions.ParseException(\"Please specify a valid date!\");","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kiwibang"},"content":"        return temp;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"kiwibang"},"content":"     * Checks if the given String is numeric or not.","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"kiwibang"},"content":"     * @param str the string to check","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"kiwibang"},"content":"     * @return true if the string is numeric, false otherwise","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"kiwibang"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"kiwibang"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"kiwibang"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"kiwibang"},"content":"        } catch (NumberFormatException ignored) {","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"kiwibang"},"content":"            String s \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"kiwibang"},"content":"        return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"kiwibang"},"content":"     * Adds the year to the date object.","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"kiwibang"},"content":"     * @param time the LocalDateTime object that represents start dates, or deadlines","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"kiwibang"},"content":"     * @return the modified LocalDateTime object","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"kiwibang"},"content":"    private static LocalDateTime addYear(LocalDateTime time) {","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"kiwibang"},"content":"        assert time !\u003d null : \"time should be not null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"kiwibang"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"kiwibang"},"content":"        int yearsElapsed \u003d now.getYear() - DEFAULT_DATE.getYear();","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"kiwibang"},"content":"        // update the year by adding to the current year","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"kiwibang"},"content":"        // why: this method is called when the input date does not have a year","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"kiwibang"},"content":"        return time.plusYears(yearsElapsed);","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"kiwibang"},"content":"     * Adds the day to the date object.","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"kiwibang"},"content":"     * @param time the LocalDateTime object that represents start dates, or deadlines","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"kiwibang"},"content":"     * @return the modified LocalDateTime object","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"kiwibang"},"content":"    private static LocalDateTime addDay(LocalDateTime time) {","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"kiwibang"},"content":"        assert time !\u003d null : \"time should be not null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"kiwibang"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"kiwibang"},"content":"        int defaultDay \u003d DEFAULT_DATE.getDayOfWeek().getValue();","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"kiwibang"},"content":"        int timeDay \u003d time.getDayOfWeek().getValue();","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"kiwibang"},"content":"        int daysElapsed \u003d timeDay \u003e\u003d defaultDay ? timeDay - defaultDay : 7 - defaultDay + timeDay;","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"kiwibang"},"content":"        // update the current date by the number of days","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"kiwibang"},"content":"        LocalDateTime res \u003d now.plusDays(daysElapsed);","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"kiwibang"},"content":"        if (time.getHour() \u003d\u003d 0 \u0026\u0026 time.getMinute() \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"kiwibang"},"content":"            return addTime(res);","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"kiwibang"},"content":"        return res.withHour(time.getHour()).withMinute(time.getMinute());","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"kiwibang"},"content":"     * Updates the time fields of the LocalDateTime object.","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"kiwibang"},"content":"     * @param time the given LocalDateTime object","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"kiwibang"},"content":"     * @return a new LocalDateTime object, with the same parameters as time, but with hour field","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"kiwibang"},"content":"     *         set to 23 and minute field set to 59","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"kiwibang"},"content":"    private static LocalDateTime addTime(LocalDateTime time) {","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"kiwibang"},"content":"        assert time !\u003d null : \"time should be not null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"kiwibang"},"content":"        return time.withHour(23).withMinute(59);","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"kiwibang"},"content":"     * Formats the time String.","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"kiwibang"},"content":"     * @param time the given LocalDateTime object to format","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"kiwibang"},"content":"     * @return the string form of the LocalDateTime object","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"kiwibang"},"content":"    public static String formatDate(LocalDateTime time) {","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"kiwibang"},"content":"        assert time !\u003d null : \"time should be not null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"kiwibang"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027,\u0027 H.mma\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"kiwibang":208}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" * Duplicates are not allowed (by .isSamePerson and .isNotValidOrNewInterview comparison)","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final UniqueInterviewList interviews;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviews \u003d new UniqueInterviewList();","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Replaces the contents of the interview list with {@code interviews}.","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code interviews} must not contain duplicate persons.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.interviews.setInterviews(interviews);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"        setInterviews(newData.getInterviewList());","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"    //// interview-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if an interview with the same identity as {@code interview} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"        return interviews.contains(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adds an interview to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview must not already exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void addInterview(Interview i) {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviews.add(i);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"    public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"        return interviews.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JasonLCY-Temp":36,"-":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    Predicate\u003cInterview\u003e PREDICATE_SHOW_ALL_INTERVIEWS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"Jonyxzx"},"content":"    /** Returns an unmodifiable view of the filtered interview list */","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"Jonyxzx"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if an Interview with the same attributes as {@code interview} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"    boolean hasInterview(Interview interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adds the given interview.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code interview} must not already exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"    void addInterview(Interview interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Updates the filter of the filtered interview list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"    void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jonyxzx":3,"JasonLCY-Temp":19,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final FilteredList\u003cInterview\u003e filteredInterviews;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"        filteredInterviews \u003d new FilteredList\u003c\u003e(this.addressBook.getInterviewList());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook Interviews \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"        return addressBook.hasInterview(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"        addressBook.addInterview(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"        updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"Jonyxzx"},"content":"     * Returns an unmodifiable view of the list of {@code Job} backed by the internal list of","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"Jonyxzx"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"Jonyxzx"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"Jonyxzx"},"content":"        return filteredInterviews;","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"JasonLCY-Temp"},"content":"        filteredInterviews.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 filteredInterviews.equals(otherModelManager.filteredInterviews);","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jonyxzx":9,"JasonLCY-Temp":24,"-":147}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    ObservableList\u003cInterview\u003e getInterviewList();","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JasonLCY-Temp":2,"-":17}},{"path":"src/main/java/seedu/address/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":" * Represents an Interview in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Interview {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** TODO Change from \u0027String\u0027 to \u0027Applicant\u0027 once Applicant is on master*/","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"    private String applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    private String jobRole;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** TODO Change from \u0027String\u0027 to proper \u0027Date/Time\u0027 once natural DT is implemented*/","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    private String interviewTiming;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Default constructor for Interview object.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Increments the `globalInterviewId` and uses it as the unique `interviewId` for this instance","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Interview(String app, String role, String timing) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireAllNonNull(app, role, timing);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"        applicant \u003d app;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"        jobRole \u003d role;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviewTiming \u003d timing;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if both Interviews have the same Applicant \u0026 Timing or if both Interviews are the same object","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adapted from AB3\u0027s Person.isSamePerson() method","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean isNotValidOrNewInterview(Interview otherInterview) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (otherInterview \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        return otherInterview !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 otherInterview.getInterviewTiming().equals(getInterviewTiming())","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 otherInterview.getInterviewApplicant().equals(getInterviewApplicant());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"    /* TODO Update return type from String to Applicant */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getInterviewApplicant() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"        return applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getJobRole() {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        return jobRole;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getInterviewTiming() {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        return interviewTiming;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if both interviews have the same identity and data fields.","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"     * This defines a stronger notion of equality between two interviews","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Mostly used for testing purposes","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"        return applicant.equals(otherInterview.applicant)","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 jobRole.equals(otherInterview.jobRole)","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 interviewTiming.equals(otherInterview.interviewTiming);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":76}},{"path":"src/main/java/seedu/address/model/interview/JobContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":" * Tests that a {@code Interview}\u0027s {@code Job} matches any of the keywords given.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"public class JobContainsKeywordsPredicate implements Predicate\u003cInterview\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"    public JobContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    public boolean test(Interview interview) {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(interview.getJobRole(), keyword));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"        if (!(other instanceof JobContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (JobContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":44}},{"path":"src/main/java/seedu/address/model/interview/UniqueInterviewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.exceptions.DuplicateInterviewException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" * A list of interviews that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" * A interview is considered unique by comparing using {@code Interview#isNotValidOrNewInterview(Interview)}.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" * As such, adding and updating of Interviews uses Interview#isNotValidOrNewInterview(Interview) for equality","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":" * so as to ensure that the interview being added or updated is unique in terms of identity in the UniqueInterviewList.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":" * However, the removal of an interview uses Interview#equals(Object) so as to ensure that the interview","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3 UniquePersonList","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"public class UniqueInterviewList implements Iterable\u003cInterview\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final ObservableList\u003cInterview\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final ObservableList\u003cInterview\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if the list contains an equivalent interview as the given argument.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean contains(Interview toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.stream().anyMatch(toCheck::isNotValidOrNewInterview);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adds a interview to the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview must not already exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void add(Interview toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Replaces the interview {@code target} in the list with {@code editedInterview}.","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview identity of {@code editedInterview} must not be the same as another existing interview in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!target.isNotValidOrNewInterview(editedInterview) \u0026\u0026 contains(editedInterview)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.set(index, editedInterview);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Removes the equivalent interview from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void remove(Interview toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterviews(UniqueInterviewList replacement) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Replaces the contents of this list with {@code interviews}.","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code interviews} must not contain duplicate interviews.","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireAllNonNull(interviews);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!interviewsAreUnique(interviews)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.setAll(interviews);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"    public ObservableList\u003cInterview\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Iterator\u003cInterview\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof UniqueInterviewList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"        UniqueInterviewList otherUniqueInterviewList \u003d (UniqueInterviewList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.equals(otherUniqueInterviewList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if {@code interviews} contains only unique interviews.","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"    private boolean interviewsAreUnique(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"                if (interviews.get(i).isNotValidOrNewInterview(interviews.get(j))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"                    return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":149}},{"path":"src/main/java/seedu/address/model/interview/exceptions/DuplicateInterviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":" * Signals that the operation will result in duplicate Interviews","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":" * (Interviews are considered duplicates if they have the same identity - As checked by IsNotValidOrNewInterview).","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"public class DuplicateInterviewException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    public DuplicateInterviewException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(\"Operation would result in duplicate interviews\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":11}},{"path":"src/main/java/seedu/address/model/interview/exceptions/InterviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":" * Signals that the operation is unable to find the specified Interview","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"public class InterviewNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static Interview[] getSampleInterviews() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new Interview[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"            new Interview(\"Jason\", \"SWE\", \"Sample Time\")","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        };","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"        for (Interview sampleInterview : getSampleInterviews()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"            sampleAb.addInterview(sampleInterview);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"JasonLCY-Temp":10,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInterview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":" * Jackson-friendly version of {@link seedu.address.model.interview.Interview}.","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s JsonAdaptedPerson","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"class JsonAdaptedInterview {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Interview\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String APPLICANT_MISSING \u003d \"Applicant\";","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String JOB_ROLE_MISSING \u003d \"Job role\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String TIMING_MISSING \u003d \"Timing\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final String applicant;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final String jobRole;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final String interviewTiming;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Constructs a {@code JsonAdaptedInterview} with the given interview details.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    public JsonAdaptedInterview(@JsonProperty(\"applicant\") String applicant, @JsonProperty(\"jobRole\") String jobRole,","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"                                @JsonProperty(\"interviewTiming\") String interviewTiming) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.jobRole \u003d jobRole;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.interviewTiming \u003d interviewTiming;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Converts a given {@code Interview} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    public JsonAdaptedInterview(Interview source) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"        applicant \u003d source.getInterviewApplicant();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        jobRole \u003d source.getJobRole();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviewTiming \u003d source.getInterviewTiming();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Interview} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws seedu.address.commons.exceptions.IllegalValueException if there were any data constraints","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"     *     violated in the adapted person.","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Interview toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (applicant \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, APPLICANT_MISSING));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (jobRole \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, JOB_ROLE_MISSING));","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (interviewTiming \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, TIMING_MISSING));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new Interview(applicant, jobRole, interviewTiming);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"JasonLCY-Temp":67}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"Interviews list contains duplicate interview(s).\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final List\u003cJsonAdaptedInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and interviews","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"                                       @JsonProperty(\"interviews\") List\u003cJsonAdaptedInterview\u003e interviews) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.interviews.addAll(interviews);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviews.addAll(source.getInterviewList().stream().map(JsonAdaptedInterview::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        for (JsonAdaptedInterview jsonAdaptedInterview : interviews) {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"            Interview interview \u003d jsonAdaptedInterview.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (addressBook.hasInterview(interview)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"                throw new IllegalValueException((MESSAGE_DUPLICATE_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"            addressBook.addInterview(interview);","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JasonLCY-Temp":16,"-":58}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JasonLCY-Temp":1,"-":101}},{"path":"src/main/java/seedu/address/ui/InterviewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":" * An UI component that displays information of a {@code Interview}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"public class InterviewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"    private static final String FXML \u003d \"InterviewListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"    public final Interview interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"    private Label applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"    private Label jobRole;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"    private Label interviewTiming;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"     * Creates a {@code InterviewCard} with the given {@code Interview} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"    public InterviewCard(Interview interview, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Chen1x"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Chen1x"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"        applicant.setText(interview.getInterviewApplicant()); // Todo: Change needed","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"        jobRole.setText(interview.getJobRole()); // Todo: Change needed","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"        interviewTiming.setText(interview.getInterviewTiming()); // Todo: Change needed","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Chen1x":48}},{"path":"src/main/java/seedu/address/ui/InterviewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":" * Panel containing the list of interviews.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"public class InterviewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"    private static final String FXML \u003d \"InterviewListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InterviewListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"    private ListView\u003cInterview\u003e interviewListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"     * Creates a {@code InterviewListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"    public InterviewListPanel(ObservableList\u003cInterview\u003e interviewList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"        interviewListView.setItems(interviewList);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"        interviewListView.setCellFactory(listView -\u003e new InterviewListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Interview} using a {@code InterviewCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"    class InterviewListViewCell extends ListCell\u003cInterview\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Chen1x"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"        protected void updateItem(Interview interview, boolean empty) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"            super.updateItem(interview, empty);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"            if (empty || interview \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Chen1x"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Chen1x"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"                setGraphic(new InterviewCard(interview, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Chen1x":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"    private InterviewListPanel interviewListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"    private StackPane interviewListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Chen1x"},"content":"        // Duplicating personListPanel into interviewListPanel","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Chen1x"},"content":"        interviewListPanel \u003d new InterviewListPanel(logic.getFilteredInterviewList());","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Chen1x"},"content":"        interviewListPanelPlaceholder.getChildren().add(interviewListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":196,"Chen1x":8}},{"path":"src/main/resources/view/InterviewListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"                \u003cLabel fx:id\u003d\"applicant\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"            \u003cLabel fx:id\u003d\"jobRole\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"            \u003cLabel fx:id\u003d\"interviewTiming\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Chen1x":33}},{"path":"src/main/resources/view/InterviewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"  \u003cListView fx:id\u003d\"interviewListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Chen1x":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"         title\u003d\"Address App\" minWidth\u003d\"600\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Chen1x"},"content":"          \u003cVBox fx:id\u003d\"interviewList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Chen1x"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Chen1x"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Chen1x"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"            \u003cStackPane fx:id\u003d\"interviewListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Chen1x"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":56,"Chen1x":10}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"Chen1x"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Chen1x"},"content":"    public void getFilteredInterviewList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Chen1x"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredInterviewList().remove(0));","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":175,"Chen1x":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"Jonyxzx"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"Jonyxzx"},"content":"        public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"Jonyxzx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"JasonLCY-Temp"},"content":"        public boolean hasInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"JasonLCY-Temp"},"content":"        public void addInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"JasonLCY-Temp"},"content":"        public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Jonyxzx":5,"JasonLCY-Temp":16,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/AddInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_2;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":" * Tests the AddInterviewCommand class","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3 AddCommandTest","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"public class AddInterviewCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void constructor_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddInterviewCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        AddInterviewCommand addInterview1Cmd \u003d new AddInterviewCommand(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"        AddInterviewCommand addInterview2Cmd \u003d new AddInterviewCommand(STANDARD_INTERVIEW_2);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertEquals(addInterview1Cmd, addInterview1Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"        AddInterviewCommand addInterview1Copy \u003d new AddInterviewCommand(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertEquals(addInterview1Cmd, addInterview1Copy);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertNotEquals(1, addInterview1Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertNotEquals(null, addInterview1Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different interviews -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertNotEquals(addInterview1Cmd, addInterview2Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"JasonLCY-Temp":44}},{"path":"src/test/java/seedu/address/logic/commands/FindInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INTERVIEWS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"                new JobContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"                new JobContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findFirstCommand \u003d new FindInterviewCommand(firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findSecondCommand \u003d new FindInterviewCommand(secondPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findFirstCommandCopy \u003d new FindInterviewCommand(firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"    public void execute_zeroKeywords_noInterviewFound() {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERVIEWS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand command \u003d new FindInterviewCommand(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"        expectedModel.updateFilteredInterviewList(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredInterviewList());","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Jonyxzx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findInterviewCommand \u003d new FindInterviewCommand(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Jonyxzx"},"content":"        String expected \u003d FindInterviewCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(expected, findInterviewCommand.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"    private JobContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Jonyxzx"},"content":"        return new JobContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":78}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.testutil.InterviewUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.testutil.TypicalInterviews;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void parseCommand_addInterview() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview interview \u003d TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"        AddInterviewCommand command \u003d (AddInterviewCommand) parser.parseCommand(InterviewUtil.getAddCommand(interview));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.print(command);","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertEquals(new AddInterviewCommand(interview), command);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JasonLCY-Temp":12,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/FindInterviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommandParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    private FindInterviewCommandParser parser \u003d new FindInterviewCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_validArgs_returnsFindInterviewCommand() {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"                new FindInterviewCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"                        new JobContainsKeywordsPredicate(Arrays.asList(\"Software-Engineer\", \"Data-Analyst\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        assertParseSuccess(parser, \"Software-Engineer Data-Analyst\", expectedFindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        assertParseSuccess(parser, \" \\n Software-Engineer \\n \\t Data-Analyst  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":36}},{"path":"src/test/java/seedu/address/logic/parser/TimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"class TimeParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"    private static final LocalDateTime TEST_DATE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"            LocalDateTime.of(2099, 1, 1, 23, 59);","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"    private static final LocalDateTime DEFAULT_DATE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"            LocalDateTime.of(1970, 1, 1, 0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"    void testDefaultDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"        assertEquals(DEFAULT_DATE, TimeParser.DEFAULT_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"    void testDateFormatsArrayNotNull() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(TimeParser.dateFormats);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"    void testInvalidDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"whenever I say so\");","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"    void testParseDateWithDdMmYyyy() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"        assertEquals(TEST_DATE, TimeParser.parseDate(\"01/01/2099\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"    void testParseDateWithPastDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"01/01/1970\");","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"    void testZeroId() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(TimeParser.parseDate(\"mon 2359\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"    void testOneId() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(TimeParser.parseDate(\"mon 2359\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"kiwibang"},"content":"    void testTwoId() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(TimeParser.parseDate(\"23 jan 15\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"    void testThreeId() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(TimeParser.parseDate(\"dec 4 8.53pm\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"    void testFourId() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(TimeParser.parseDate(\"dec 4\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"kiwibang":80}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasInterview(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(addressBook.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"        addressBook.addInterview(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(addressBook.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"        private final ObservableList\u003cInterview\u003e interviews \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"        public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"            return interviews;","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"JasonLCY-Temp":24,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.addInterview(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasInterview(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"JasonLCY-Temp":18,"-":131}},{"path":"src/test/java/seedu/address/model/interview/InterviewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_2;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_DIFFERENT_APPLICANT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_DIFFERENT_ROLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_DIFFERENT_TIME;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":" * Tests for the Interview object methods","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3 PersonTest class","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"public class InterviewTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void isNotValidOrNewInterview() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(STANDARD_INTERVIEW.isNotValidOrNewInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.isNotValidOrNewInterview(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same Applicant and time, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(STANDARD_INTERVIEW.isNotValidOrNewInterview(STANDARD_INTERVIEW_DIFFERENT_ROLE));","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different Applicant, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.isNotValidOrNewInterview(STANDARD_INTERVIEW_DIFFERENT_APPLICANT));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different Time, all other attributes same -\u003e return false","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.isNotValidOrNewInterview(STANDARD_INTERVIEW_DIFFERENT_TIME));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview standardInterviewCopy \u003d new Interview(STANDARD_INTERVIEW.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"                    STANDARD_INTERVIEW.getJobRole(), STANDARD_INTERVIEW.getInterviewTiming());","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(STANDARD_INTERVIEW.equals(standardInterviewCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(STANDARD_INTERVIEW.equals(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(5));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(STANDARD_INTERVIEW_2));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different Applicant -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview editedStandardinterview \u003d new Interview(STANDARD_INTERVIEW_2.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"                STANDARD_INTERVIEW.getJobRole(), STANDARD_INTERVIEW.getInterviewTiming());","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(editedStandardinterview));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different job role -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"        editedStandardinterview \u003d new Interview(STANDARD_INTERVIEW.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"                STANDARD_INTERVIEW_2.getJobRole(), STANDARD_INTERVIEW.getInterviewTiming());","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(editedStandardinterview));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different Timing -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"        editedStandardinterview \u003d new Interview(STANDARD_INTERVIEW.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"                STANDARD_INTERVIEW.getJobRole(), STANDARD_INTERVIEW_2.getInterviewTiming());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(editedStandardinterview));","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":71}},{"path":"src/test/java/seedu/address/testutil/InterviewUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":" * A utility class for Interviews.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"public class InterviewUtil {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns an add command string for adding the {@code interview}.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static String getAddCommand(Interview interview) {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"        return AddInterviewCommand.COMMAND_WORD + \" \" + getInterviewDetails(interview);","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns the part of command string for the given {@code interview}\u0027s details.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static String getInterviewDetails(Interview interview) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"        return PREFIX_APPLICANT + interview.getInterviewApplicant() + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"                + PREFIX_JOB_ROLE + interview.getJobRole() + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"                + PREFIX_TIMING + interview.getInterviewTiming();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"JasonLCY-Temp":30}},{"path":"src/test/java/seedu/address/testutil/TypicalInterviews.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":" * A utility class containing a list of {@code Interview} objects to be used in tests.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3 TypicalPersons class.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"public class TypicalInterviews {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Interview STANDARD_INTERVIEW \u003d new Interview(\"ApplicantObject\",","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"            \"StandardJobRole\", \"StandardTime\");","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Interview STANDARD_INTERVIEW_2 \u003d new Interview(\"ApplicantObject2\",","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"            \"StandardJobRole2\", \"StandardTime2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Interview STANDARD_INTERVIEW_DIFFERENT_ROLE \u003d new Interview(\"ApplicantObject\",","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"            \"DifferentStandardJobRole\", \"StandardTime\");","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Interview STANDARD_INTERVIEW_DIFFERENT_APPLICANT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"            new Interview(\"DifferentApplicantObject\", \"StandardJobRole\", \"StandardTime\");","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Interview STANDARD_INTERVIEW_DIFFERENT_TIME \u003d new Interview(\"ApplicantObject\",","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"            \"StandardJobRole\", \"DifferentStandardTime\");","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** Prevents instantiation - Code reused and adapted from AB3 TypicalPersons.java */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    private TypicalInterviews() {}","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":24}}]
